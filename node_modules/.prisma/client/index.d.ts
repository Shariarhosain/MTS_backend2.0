
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model project
 * 
 */
export type project = $Result.DefaultSelection<Prisma.$projectPayload>
/**
 * Model team
 * 
 */
export type team = $Result.DefaultSelection<Prisma.$teamPayload>
/**
 * Model department
 * 
 */
export type department = $Result.DefaultSelection<Prisma.$departmentPayload>
/**
 * Model profile
 * 
 */
export type profile = $Result.DefaultSelection<Prisma.$profilePayload>
/**
 * Model team_member
 * 
 */
export type team_member = $Result.DefaultSelection<Prisma.$team_memberPayload>
/**
 * Model member_distribution
 * 
 */
export type member_distribution = $Result.DefaultSelection<Prisma.$member_distributionPayload>
/**
 * Model revision
 * 
 */
export type revision = $Result.DefaultSelection<Prisma.$revisionPayload>
/**
 * Model today_task
 * 
 */
export type today_task = $Result.DefaultSelection<Prisma.$today_taskPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Projects
 * const projects = await prisma.project.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Projects
   * const projects = await prisma.project.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.project`: Exposes CRUD operations for the **project** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Projects
    * const projects = await prisma.project.findMany()
    * ```
    */
  get project(): Prisma.projectDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.team`: Exposes CRUD operations for the **team** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Teams
    * const teams = await prisma.team.findMany()
    * ```
    */
  get team(): Prisma.teamDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.department`: Exposes CRUD operations for the **department** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Departments
    * const departments = await prisma.department.findMany()
    * ```
    */
  get department(): Prisma.departmentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.profile`: Exposes CRUD operations for the **profile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Profiles
    * const profiles = await prisma.profile.findMany()
    * ```
    */
  get profile(): Prisma.profileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.team_member`: Exposes CRUD operations for the **team_member** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Team_members
    * const team_members = await prisma.team_member.findMany()
    * ```
    */
  get team_member(): Prisma.team_memberDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.member_distribution`: Exposes CRUD operations for the **member_distribution** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Member_distributions
    * const member_distributions = await prisma.member_distribution.findMany()
    * ```
    */
  get member_distribution(): Prisma.member_distributionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.revision`: Exposes CRUD operations for the **revision** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Revisions
    * const revisions = await prisma.revision.findMany()
    * ```
    */
  get revision(): Prisma.revisionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.today_task`: Exposes CRUD operations for the **today_task** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Today_tasks
    * const today_tasks = await prisma.today_task.findMany()
    * ```
    */
  get today_task(): Prisma.today_taskDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    project: 'project',
    team: 'team',
    department: 'department',
    profile: 'profile',
    team_member: 'team_member',
    member_distribution: 'member_distribution',
    revision: 'revision',
    today_task: 'today_task'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "project" | "team" | "department" | "profile" | "team_member" | "member_distribution" | "revision" | "today_task"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      project: {
        payload: Prisma.$projectPayload<ExtArgs>
        fields: Prisma.projectFieldRefs
        operations: {
          findUnique: {
            args: Prisma.projectFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.projectFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectPayload>
          }
          findFirst: {
            args: Prisma.projectFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.projectFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectPayload>
          }
          findMany: {
            args: Prisma.projectFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectPayload>[]
          }
          create: {
            args: Prisma.projectCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectPayload>
          }
          createMany: {
            args: Prisma.projectCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.projectCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectPayload>[]
          }
          delete: {
            args: Prisma.projectDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectPayload>
          }
          update: {
            args: Prisma.projectUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectPayload>
          }
          deleteMany: {
            args: Prisma.projectDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.projectUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.projectUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectPayload>[]
          }
          upsert: {
            args: Prisma.projectUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$projectPayload>
          }
          aggregate: {
            args: Prisma.ProjectAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProject>
          }
          groupBy: {
            args: Prisma.projectGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProjectGroupByOutputType>[]
          }
          count: {
            args: Prisma.projectCountArgs<ExtArgs>
            result: $Utils.Optional<ProjectCountAggregateOutputType> | number
          }
        }
      }
      team: {
        payload: Prisma.$teamPayload<ExtArgs>
        fields: Prisma.teamFieldRefs
        operations: {
          findUnique: {
            args: Prisma.teamFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.teamFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamPayload>
          }
          findFirst: {
            args: Prisma.teamFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.teamFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamPayload>
          }
          findMany: {
            args: Prisma.teamFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamPayload>[]
          }
          create: {
            args: Prisma.teamCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamPayload>
          }
          createMany: {
            args: Prisma.teamCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.teamCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamPayload>[]
          }
          delete: {
            args: Prisma.teamDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamPayload>
          }
          update: {
            args: Prisma.teamUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamPayload>
          }
          deleteMany: {
            args: Prisma.teamDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.teamUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.teamUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamPayload>[]
          }
          upsert: {
            args: Prisma.teamUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$teamPayload>
          }
          aggregate: {
            args: Prisma.TeamAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTeam>
          }
          groupBy: {
            args: Prisma.teamGroupByArgs<ExtArgs>
            result: $Utils.Optional<TeamGroupByOutputType>[]
          }
          count: {
            args: Prisma.teamCountArgs<ExtArgs>
            result: $Utils.Optional<TeamCountAggregateOutputType> | number
          }
        }
      }
      department: {
        payload: Prisma.$departmentPayload<ExtArgs>
        fields: Prisma.departmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.departmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.departmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentPayload>
          }
          findFirst: {
            args: Prisma.departmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.departmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentPayload>
          }
          findMany: {
            args: Prisma.departmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentPayload>[]
          }
          create: {
            args: Prisma.departmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentPayload>
          }
          createMany: {
            args: Prisma.departmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.departmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentPayload>[]
          }
          delete: {
            args: Prisma.departmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentPayload>
          }
          update: {
            args: Prisma.departmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentPayload>
          }
          deleteMany: {
            args: Prisma.departmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.departmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.departmentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentPayload>[]
          }
          upsert: {
            args: Prisma.departmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$departmentPayload>
          }
          aggregate: {
            args: Prisma.DepartmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDepartment>
          }
          groupBy: {
            args: Prisma.departmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<DepartmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.departmentCountArgs<ExtArgs>
            result: $Utils.Optional<DepartmentCountAggregateOutputType> | number
          }
        }
      }
      profile: {
        payload: Prisma.$profilePayload<ExtArgs>
        fields: Prisma.profileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.profileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.profileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>
          }
          findFirst: {
            args: Prisma.profileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.profileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>
          }
          findMany: {
            args: Prisma.profileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>[]
          }
          create: {
            args: Prisma.profileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>
          }
          createMany: {
            args: Prisma.profileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.profileCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>[]
          }
          delete: {
            args: Prisma.profileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>
          }
          update: {
            args: Prisma.profileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>
          }
          deleteMany: {
            args: Prisma.profileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.profileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.profileUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>[]
          }
          upsert: {
            args: Prisma.profileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>
          }
          aggregate: {
            args: Prisma.ProfileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProfile>
          }
          groupBy: {
            args: Prisma.profileGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProfileGroupByOutputType>[]
          }
          count: {
            args: Prisma.profileCountArgs<ExtArgs>
            result: $Utils.Optional<ProfileCountAggregateOutputType> | number
          }
        }
      }
      team_member: {
        payload: Prisma.$team_memberPayload<ExtArgs>
        fields: Prisma.team_memberFieldRefs
        operations: {
          findUnique: {
            args: Prisma.team_memberFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_memberPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.team_memberFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_memberPayload>
          }
          findFirst: {
            args: Prisma.team_memberFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_memberPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.team_memberFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_memberPayload>
          }
          findMany: {
            args: Prisma.team_memberFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_memberPayload>[]
          }
          create: {
            args: Prisma.team_memberCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_memberPayload>
          }
          createMany: {
            args: Prisma.team_memberCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.team_memberCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_memberPayload>[]
          }
          delete: {
            args: Prisma.team_memberDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_memberPayload>
          }
          update: {
            args: Prisma.team_memberUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_memberPayload>
          }
          deleteMany: {
            args: Prisma.team_memberDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.team_memberUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.team_memberUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_memberPayload>[]
          }
          upsert: {
            args: Prisma.team_memberUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$team_memberPayload>
          }
          aggregate: {
            args: Prisma.Team_memberAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTeam_member>
          }
          groupBy: {
            args: Prisma.team_memberGroupByArgs<ExtArgs>
            result: $Utils.Optional<Team_memberGroupByOutputType>[]
          }
          count: {
            args: Prisma.team_memberCountArgs<ExtArgs>
            result: $Utils.Optional<Team_memberCountAggregateOutputType> | number
          }
        }
      }
      member_distribution: {
        payload: Prisma.$member_distributionPayload<ExtArgs>
        fields: Prisma.member_distributionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.member_distributionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$member_distributionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.member_distributionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$member_distributionPayload>
          }
          findFirst: {
            args: Prisma.member_distributionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$member_distributionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.member_distributionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$member_distributionPayload>
          }
          findMany: {
            args: Prisma.member_distributionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$member_distributionPayload>[]
          }
          create: {
            args: Prisma.member_distributionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$member_distributionPayload>
          }
          createMany: {
            args: Prisma.member_distributionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.member_distributionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$member_distributionPayload>[]
          }
          delete: {
            args: Prisma.member_distributionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$member_distributionPayload>
          }
          update: {
            args: Prisma.member_distributionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$member_distributionPayload>
          }
          deleteMany: {
            args: Prisma.member_distributionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.member_distributionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.member_distributionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$member_distributionPayload>[]
          }
          upsert: {
            args: Prisma.member_distributionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$member_distributionPayload>
          }
          aggregate: {
            args: Prisma.Member_distributionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMember_distribution>
          }
          groupBy: {
            args: Prisma.member_distributionGroupByArgs<ExtArgs>
            result: $Utils.Optional<Member_distributionGroupByOutputType>[]
          }
          count: {
            args: Prisma.member_distributionCountArgs<ExtArgs>
            result: $Utils.Optional<Member_distributionCountAggregateOutputType> | number
          }
        }
      }
      revision: {
        payload: Prisma.$revisionPayload<ExtArgs>
        fields: Prisma.revisionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.revisionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revisionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.revisionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revisionPayload>
          }
          findFirst: {
            args: Prisma.revisionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revisionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.revisionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revisionPayload>
          }
          findMany: {
            args: Prisma.revisionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revisionPayload>[]
          }
          create: {
            args: Prisma.revisionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revisionPayload>
          }
          createMany: {
            args: Prisma.revisionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.revisionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revisionPayload>[]
          }
          delete: {
            args: Prisma.revisionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revisionPayload>
          }
          update: {
            args: Prisma.revisionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revisionPayload>
          }
          deleteMany: {
            args: Prisma.revisionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.revisionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.revisionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revisionPayload>[]
          }
          upsert: {
            args: Prisma.revisionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$revisionPayload>
          }
          aggregate: {
            args: Prisma.RevisionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRevision>
          }
          groupBy: {
            args: Prisma.revisionGroupByArgs<ExtArgs>
            result: $Utils.Optional<RevisionGroupByOutputType>[]
          }
          count: {
            args: Prisma.revisionCountArgs<ExtArgs>
            result: $Utils.Optional<RevisionCountAggregateOutputType> | number
          }
        }
      }
      today_task: {
        payload: Prisma.$today_taskPayload<ExtArgs>
        fields: Prisma.today_taskFieldRefs
        operations: {
          findUnique: {
            args: Prisma.today_taskFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$today_taskPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.today_taskFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$today_taskPayload>
          }
          findFirst: {
            args: Prisma.today_taskFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$today_taskPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.today_taskFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$today_taskPayload>
          }
          findMany: {
            args: Prisma.today_taskFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$today_taskPayload>[]
          }
          create: {
            args: Prisma.today_taskCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$today_taskPayload>
          }
          createMany: {
            args: Prisma.today_taskCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.today_taskCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$today_taskPayload>[]
          }
          delete: {
            args: Prisma.today_taskDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$today_taskPayload>
          }
          update: {
            args: Prisma.today_taskUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$today_taskPayload>
          }
          deleteMany: {
            args: Prisma.today_taskDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.today_taskUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.today_taskUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$today_taskPayload>[]
          }
          upsert: {
            args: Prisma.today_taskUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$today_taskPayload>
          }
          aggregate: {
            args: Prisma.Today_taskAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateToday_task>
          }
          groupBy: {
            args: Prisma.today_taskGroupByArgs<ExtArgs>
            result: $Utils.Optional<Today_taskGroupByOutputType>[]
          }
          count: {
            args: Prisma.today_taskCountArgs<ExtArgs>
            result: $Utils.Optional<Today_taskCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    project?: projectOmit
    team?: teamOmit
    department?: departmentOmit
    profile?: profileOmit
    team_member?: team_memberOmit
    member_distribution?: member_distributionOmit
    revision?: revisionOmit
    today_task?: today_taskOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ProjectCountOutputType
   */

  export type ProjectCountOutputType = {
    today_task: number
    team_members: number
    member_distribution: number
  }

  export type ProjectCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    today_task?: boolean | ProjectCountOutputTypeCountToday_taskArgs
    team_members?: boolean | ProjectCountOutputTypeCountTeam_membersArgs
    member_distribution?: boolean | ProjectCountOutputTypeCountMember_distributionArgs
  }

  // Custom InputTypes
  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProjectCountOutputType
     */
    select?: ProjectCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountToday_taskArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: today_taskWhereInput
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountTeam_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: team_memberWhereInput
  }

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeCountMember_distributionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: member_distributionWhereInput
  }


  /**
   * Count Type TeamCountOutputType
   */

  export type TeamCountOutputType = {
    project: number
    team_member: number
    today_task: number
    revision: number
  }

  export type TeamCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project?: boolean | TeamCountOutputTypeCountProjectArgs
    team_member?: boolean | TeamCountOutputTypeCountTeam_memberArgs
    today_task?: boolean | TeamCountOutputTypeCountToday_taskArgs
    revision?: boolean | TeamCountOutputTypeCountRevisionArgs
  }

  // Custom InputTypes
  /**
   * TeamCountOutputType without action
   */
  export type TeamCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TeamCountOutputType
     */
    select?: TeamCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TeamCountOutputType without action
   */
  export type TeamCountOutputTypeCountProjectArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: projectWhereInput
  }

  /**
   * TeamCountOutputType without action
   */
  export type TeamCountOutputTypeCountTeam_memberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: team_memberWhereInput
  }

  /**
   * TeamCountOutputType without action
   */
  export type TeamCountOutputTypeCountToday_taskArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: today_taskWhereInput
  }

  /**
   * TeamCountOutputType without action
   */
  export type TeamCountOutputTypeCountRevisionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: revisionWhereInput
  }


  /**
   * Count Type DepartmentCountOutputType
   */

  export type DepartmentCountOutputType = {
    assign_project: number
    department_teams: number
    department_profile: number
  }

  export type DepartmentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assign_project?: boolean | DepartmentCountOutputTypeCountAssign_projectArgs
    department_teams?: boolean | DepartmentCountOutputTypeCountDepartment_teamsArgs
    department_profile?: boolean | DepartmentCountOutputTypeCountDepartment_profileArgs
  }

  // Custom InputTypes
  /**
   * DepartmentCountOutputType without action
   */
  export type DepartmentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DepartmentCountOutputType
     */
    select?: DepartmentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DepartmentCountOutputType without action
   */
  export type DepartmentCountOutputTypeCountAssign_projectArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: projectWhereInput
  }

  /**
   * DepartmentCountOutputType without action
   */
  export type DepartmentCountOutputTypeCountDepartment_teamsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: teamWhereInput
  }

  /**
   * DepartmentCountOutputType without action
   */
  export type DepartmentCountOutputTypeCountDepartment_profileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: profileWhereInput
  }


  /**
   * Count Type ProfileCountOutputType
   */

  export type ProfileCountOutputType = {
    projects: number
    department: number
    team_members: number
  }

  export type ProfileCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    projects?: boolean | ProfileCountOutputTypeCountProjectsArgs
    department?: boolean | ProfileCountOutputTypeCountDepartmentArgs
    team_members?: boolean | ProfileCountOutputTypeCountTeam_membersArgs
  }

  // Custom InputTypes
  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfileCountOutputType
     */
    select?: ProfileCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountProjectsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: projectWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountDepartmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: departmentWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountTeam_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: team_memberWhereInput
  }


  /**
   * Count Type Team_memberCountOutputType
   */

  export type Team_memberCountOutputType = {
    member_distribution: number
    project: number
    today_task: number
    assigned_projects: number
    profile: number
  }

  export type Team_memberCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    member_distribution?: boolean | Team_memberCountOutputTypeCountMember_distributionArgs
    project?: boolean | Team_memberCountOutputTypeCountProjectArgs
    today_task?: boolean | Team_memberCountOutputTypeCountToday_taskArgs
    assigned_projects?: boolean | Team_memberCountOutputTypeCountAssigned_projectsArgs
    profile?: boolean | Team_memberCountOutputTypeCountProfileArgs
  }

  // Custom InputTypes
  /**
   * Team_memberCountOutputType without action
   */
  export type Team_memberCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Team_memberCountOutputType
     */
    select?: Team_memberCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Team_memberCountOutputType without action
   */
  export type Team_memberCountOutputTypeCountMember_distributionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: member_distributionWhereInput
  }

  /**
   * Team_memberCountOutputType without action
   */
  export type Team_memberCountOutputTypeCountProjectArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: projectWhereInput
  }

  /**
   * Team_memberCountOutputType without action
   */
  export type Team_memberCountOutputTypeCountToday_taskArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: today_taskWhereInput
  }

  /**
   * Team_memberCountOutputType without action
   */
  export type Team_memberCountOutputTypeCountAssigned_projectsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: projectWhereInput
  }

  /**
   * Team_memberCountOutputType without action
   */
  export type Team_memberCountOutputTypeCountProfileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: profileWhereInput
  }


  /**
   * Count Type RevisionCountOutputType
   */

  export type RevisionCountOutputType = {
    team: number
  }

  export type RevisionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    team?: boolean | RevisionCountOutputTypeCountTeamArgs
  }

  // Custom InputTypes
  /**
   * RevisionCountOutputType without action
   */
  export type RevisionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RevisionCountOutputType
     */
    select?: RevisionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RevisionCountOutputType without action
   */
  export type RevisionCountOutputTypeCountTeamArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: teamWhereInput
  }


  /**
   * Models
   */

  /**
   * Model project
   */

  export type AggregateProject = {
    _count: ProjectCountAggregateOutputType | null
    _avg: ProjectAvgAggregateOutputType | null
    _sum: ProjectSumAggregateOutputType | null
    _min: ProjectMinAggregateOutputType | null
    _max: ProjectMaxAggregateOutputType | null
  }

  export type ProjectAvgAggregateOutputType = {
    id: number | null
    ordered_by: number | null
    order_amount: Decimal | null
    after_fiverr_amount: Decimal | null
    bonus: Decimal | null
    after_Fiverr_bonus: Decimal | null
    rating: number | null
    department_id: number | null
    profile_id: number | null
    team_id: number | null
    extension: number | null
    revision: number | null
  }

  export type ProjectSumAggregateOutputType = {
    id: number | null
    ordered_by: number | null
    order_amount: Decimal | null
    after_fiverr_amount: Decimal | null
    bonus: Decimal | null
    after_Fiverr_bonus: Decimal | null
    rating: number | null
    department_id: number | null
    profile_id: number | null
    team_id: number | null
    extension: number | null
    revision: number | null
  }

  export type ProjectMinAggregateOutputType = {
    id: number | null
    order_id: string | null
    date: Date | null
    project_name: string | null
    ops_status: string | null
    sales_comments: string | null
    opsleader_comments: string | null
    sheet_link: string | null
    ordered_by: number | null
    deli_last_date: Date | null
    status: string | null
    order_amount: Decimal | null
    after_fiverr_amount: Decimal | null
    bonus: Decimal | null
    after_Fiverr_bonus: Decimal | null
    rating: number | null
    department_id: number | null
    project_requirements: string | null
    profile_id: number | null
    team_id: number | null
    Assigned_date: Date | null
    extension: number | null
    is_delivered: boolean | null
    revision: number | null
    delivery_date: Date | null
    update_at: Date | null
  }

  export type ProjectMaxAggregateOutputType = {
    id: number | null
    order_id: string | null
    date: Date | null
    project_name: string | null
    ops_status: string | null
    sales_comments: string | null
    opsleader_comments: string | null
    sheet_link: string | null
    ordered_by: number | null
    deli_last_date: Date | null
    status: string | null
    order_amount: Decimal | null
    after_fiverr_amount: Decimal | null
    bonus: Decimal | null
    after_Fiverr_bonus: Decimal | null
    rating: number | null
    department_id: number | null
    project_requirements: string | null
    profile_id: number | null
    team_id: number | null
    Assigned_date: Date | null
    extension: number | null
    is_delivered: boolean | null
    revision: number | null
    delivery_date: Date | null
    update_at: Date | null
  }

  export type ProjectCountAggregateOutputType = {
    id: number
    order_id: number
    date: number
    project_name: number
    ops_status: number
    sales_comments: number
    opsleader_comments: number
    sheet_link: number
    ordered_by: number
    deli_last_date: number
    status: number
    order_amount: number
    after_fiverr_amount: number
    bonus: number
    after_Fiverr_bonus: number
    rating: number
    department_id: number
    project_requirements: number
    profile_id: number
    team_id: number
    Assigned_date: number
    extension: number
    is_delivered: number
    revision: number
    delivery_date: number
    update_at: number
    _all: number
  }


  export type ProjectAvgAggregateInputType = {
    id?: true
    ordered_by?: true
    order_amount?: true
    after_fiverr_amount?: true
    bonus?: true
    after_Fiverr_bonus?: true
    rating?: true
    department_id?: true
    profile_id?: true
    team_id?: true
    extension?: true
    revision?: true
  }

  export type ProjectSumAggregateInputType = {
    id?: true
    ordered_by?: true
    order_amount?: true
    after_fiverr_amount?: true
    bonus?: true
    after_Fiverr_bonus?: true
    rating?: true
    department_id?: true
    profile_id?: true
    team_id?: true
    extension?: true
    revision?: true
  }

  export type ProjectMinAggregateInputType = {
    id?: true
    order_id?: true
    date?: true
    project_name?: true
    ops_status?: true
    sales_comments?: true
    opsleader_comments?: true
    sheet_link?: true
    ordered_by?: true
    deli_last_date?: true
    status?: true
    order_amount?: true
    after_fiverr_amount?: true
    bonus?: true
    after_Fiverr_bonus?: true
    rating?: true
    department_id?: true
    project_requirements?: true
    profile_id?: true
    team_id?: true
    Assigned_date?: true
    extension?: true
    is_delivered?: true
    revision?: true
    delivery_date?: true
    update_at?: true
  }

  export type ProjectMaxAggregateInputType = {
    id?: true
    order_id?: true
    date?: true
    project_name?: true
    ops_status?: true
    sales_comments?: true
    opsleader_comments?: true
    sheet_link?: true
    ordered_by?: true
    deli_last_date?: true
    status?: true
    order_amount?: true
    after_fiverr_amount?: true
    bonus?: true
    after_Fiverr_bonus?: true
    rating?: true
    department_id?: true
    project_requirements?: true
    profile_id?: true
    team_id?: true
    Assigned_date?: true
    extension?: true
    is_delivered?: true
    revision?: true
    delivery_date?: true
    update_at?: true
  }

  export type ProjectCountAggregateInputType = {
    id?: true
    order_id?: true
    date?: true
    project_name?: true
    ops_status?: true
    sales_comments?: true
    opsleader_comments?: true
    sheet_link?: true
    ordered_by?: true
    deli_last_date?: true
    status?: true
    order_amount?: true
    after_fiverr_amount?: true
    bonus?: true
    after_Fiverr_bonus?: true
    rating?: true
    department_id?: true
    project_requirements?: true
    profile_id?: true
    team_id?: true
    Assigned_date?: true
    extension?: true
    is_delivered?: true
    revision?: true
    delivery_date?: true
    update_at?: true
    _all?: true
  }

  export type ProjectAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which project to aggregate.
     */
    where?: projectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of projects to fetch.
     */
    orderBy?: projectOrderByWithRelationInput | projectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: projectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned projects
    **/
    _count?: true | ProjectCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProjectAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProjectSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProjectMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProjectMaxAggregateInputType
  }

  export type GetProjectAggregateType<T extends ProjectAggregateArgs> = {
        [P in keyof T & keyof AggregateProject]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProject[P]>
      : GetScalarType<T[P], AggregateProject[P]>
  }




  export type projectGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: projectWhereInput
    orderBy?: projectOrderByWithAggregationInput | projectOrderByWithAggregationInput[]
    by: ProjectScalarFieldEnum[] | ProjectScalarFieldEnum
    having?: projectScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProjectCountAggregateInputType | true
    _avg?: ProjectAvgAggregateInputType
    _sum?: ProjectSumAggregateInputType
    _min?: ProjectMinAggregateInputType
    _max?: ProjectMaxAggregateInputType
  }

  export type ProjectGroupByOutputType = {
    id: number
    order_id: string | null
    date: Date | null
    project_name: string | null
    ops_status: string | null
    sales_comments: string | null
    opsleader_comments: string | null
    sheet_link: string | null
    ordered_by: number
    deli_last_date: Date | null
    status: string | null
    order_amount: Decimal | null
    after_fiverr_amount: Decimal | null
    bonus: Decimal | null
    after_Fiverr_bonus: Decimal | null
    rating: number | null
    department_id: number
    project_requirements: string | null
    profile_id: number | null
    team_id: number | null
    Assigned_date: Date | null
    extension: number | null
    is_delivered: boolean | null
    revision: number | null
    delivery_date: Date | null
    update_at: Date | null
    _count: ProjectCountAggregateOutputType | null
    _avg: ProjectAvgAggregateOutputType | null
    _sum: ProjectSumAggregateOutputType | null
    _min: ProjectMinAggregateOutputType | null
    _max: ProjectMaxAggregateOutputType | null
  }

  type GetProjectGroupByPayload<T extends projectGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProjectGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProjectGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProjectGroupByOutputType[P]>
            : GetScalarType<T[P], ProjectGroupByOutputType[P]>
        }
      >
    >


  export type projectSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    date?: boolean
    project_name?: boolean
    ops_status?: boolean
    sales_comments?: boolean
    opsleader_comments?: boolean
    sheet_link?: boolean
    ordered_by?: boolean
    deli_last_date?: boolean
    status?: boolean
    order_amount?: boolean
    after_fiverr_amount?: boolean
    bonus?: boolean
    after_Fiverr_bonus?: boolean
    rating?: boolean
    department_id?: boolean
    project_requirements?: boolean
    profile_id?: boolean
    team_id?: boolean
    Assigned_date?: boolean
    extension?: boolean
    is_delivered?: boolean
    revision?: boolean
    delivery_date?: boolean
    update_at?: boolean
    department?: boolean | departmentDefaultArgs<ExtArgs>
    team_member?: boolean | team_memberDefaultArgs<ExtArgs>
    profile?: boolean | project$profileArgs<ExtArgs>
    team?: boolean | project$teamArgs<ExtArgs>
    today_task?: boolean | project$today_taskArgs<ExtArgs>
    team_members?: boolean | project$team_membersArgs<ExtArgs>
    member_distribution?: boolean | project$member_distributionArgs<ExtArgs>
    _count?: boolean | ProjectCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["project"]>

  export type projectSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    date?: boolean
    project_name?: boolean
    ops_status?: boolean
    sales_comments?: boolean
    opsleader_comments?: boolean
    sheet_link?: boolean
    ordered_by?: boolean
    deli_last_date?: boolean
    status?: boolean
    order_amount?: boolean
    after_fiverr_amount?: boolean
    bonus?: boolean
    after_Fiverr_bonus?: boolean
    rating?: boolean
    department_id?: boolean
    project_requirements?: boolean
    profile_id?: boolean
    team_id?: boolean
    Assigned_date?: boolean
    extension?: boolean
    is_delivered?: boolean
    revision?: boolean
    delivery_date?: boolean
    update_at?: boolean
    department?: boolean | departmentDefaultArgs<ExtArgs>
    team_member?: boolean | team_memberDefaultArgs<ExtArgs>
    profile?: boolean | project$profileArgs<ExtArgs>
    team?: boolean | project$teamArgs<ExtArgs>
  }, ExtArgs["result"]["project"]>

  export type projectSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    date?: boolean
    project_name?: boolean
    ops_status?: boolean
    sales_comments?: boolean
    opsleader_comments?: boolean
    sheet_link?: boolean
    ordered_by?: boolean
    deli_last_date?: boolean
    status?: boolean
    order_amount?: boolean
    after_fiverr_amount?: boolean
    bonus?: boolean
    after_Fiverr_bonus?: boolean
    rating?: boolean
    department_id?: boolean
    project_requirements?: boolean
    profile_id?: boolean
    team_id?: boolean
    Assigned_date?: boolean
    extension?: boolean
    is_delivered?: boolean
    revision?: boolean
    delivery_date?: boolean
    update_at?: boolean
    department?: boolean | departmentDefaultArgs<ExtArgs>
    team_member?: boolean | team_memberDefaultArgs<ExtArgs>
    profile?: boolean | project$profileArgs<ExtArgs>
    team?: boolean | project$teamArgs<ExtArgs>
  }, ExtArgs["result"]["project"]>

  export type projectSelectScalar = {
    id?: boolean
    order_id?: boolean
    date?: boolean
    project_name?: boolean
    ops_status?: boolean
    sales_comments?: boolean
    opsleader_comments?: boolean
    sheet_link?: boolean
    ordered_by?: boolean
    deli_last_date?: boolean
    status?: boolean
    order_amount?: boolean
    after_fiverr_amount?: boolean
    bonus?: boolean
    after_Fiverr_bonus?: boolean
    rating?: boolean
    department_id?: boolean
    project_requirements?: boolean
    profile_id?: boolean
    team_id?: boolean
    Assigned_date?: boolean
    extension?: boolean
    is_delivered?: boolean
    revision?: boolean
    delivery_date?: boolean
    update_at?: boolean
  }

  export type projectOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "order_id" | "date" | "project_name" | "ops_status" | "sales_comments" | "opsleader_comments" | "sheet_link" | "ordered_by" | "deli_last_date" | "status" | "order_amount" | "after_fiverr_amount" | "bonus" | "after_Fiverr_bonus" | "rating" | "department_id" | "project_requirements" | "profile_id" | "team_id" | "Assigned_date" | "extension" | "is_delivered" | "revision" | "delivery_date" | "update_at", ExtArgs["result"]["project"]>
  export type projectInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    department?: boolean | departmentDefaultArgs<ExtArgs>
    team_member?: boolean | team_memberDefaultArgs<ExtArgs>
    profile?: boolean | project$profileArgs<ExtArgs>
    team?: boolean | project$teamArgs<ExtArgs>
    today_task?: boolean | project$today_taskArgs<ExtArgs>
    team_members?: boolean | project$team_membersArgs<ExtArgs>
    member_distribution?: boolean | project$member_distributionArgs<ExtArgs>
    _count?: boolean | ProjectCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type projectIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    department?: boolean | departmentDefaultArgs<ExtArgs>
    team_member?: boolean | team_memberDefaultArgs<ExtArgs>
    profile?: boolean | project$profileArgs<ExtArgs>
    team?: boolean | project$teamArgs<ExtArgs>
  }
  export type projectIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    department?: boolean | departmentDefaultArgs<ExtArgs>
    team_member?: boolean | team_memberDefaultArgs<ExtArgs>
    profile?: boolean | project$profileArgs<ExtArgs>
    team?: boolean | project$teamArgs<ExtArgs>
  }

  export type $projectPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "project"
    objects: {
      department: Prisma.$departmentPayload<ExtArgs>
      team_member: Prisma.$team_memberPayload<ExtArgs>
      profile: Prisma.$profilePayload<ExtArgs> | null
      team: Prisma.$teamPayload<ExtArgs> | null
      today_task: Prisma.$today_taskPayload<ExtArgs>[]
      team_members: Prisma.$team_memberPayload<ExtArgs>[]
      member_distribution: Prisma.$member_distributionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      order_id: string | null
      date: Date | null
      project_name: string | null
      ops_status: string | null
      sales_comments: string | null
      opsleader_comments: string | null
      sheet_link: string | null
      ordered_by: number
      deli_last_date: Date | null
      status: string | null
      order_amount: Prisma.Decimal | null
      after_fiverr_amount: Prisma.Decimal | null
      bonus: Prisma.Decimal | null
      after_Fiverr_bonus: Prisma.Decimal | null
      rating: number | null
      department_id: number
      project_requirements: string | null
      profile_id: number | null
      team_id: number | null
      Assigned_date: Date | null
      extension: number | null
      is_delivered: boolean | null
      revision: number | null
      delivery_date: Date | null
      update_at: Date | null
    }, ExtArgs["result"]["project"]>
    composites: {}
  }

  type projectGetPayload<S extends boolean | null | undefined | projectDefaultArgs> = $Result.GetResult<Prisma.$projectPayload, S>

  type projectCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<projectFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProjectCountAggregateInputType | true
    }

  export interface projectDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['project'], meta: { name: 'project' } }
    /**
     * Find zero or one Project that matches the filter.
     * @param {projectFindUniqueArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends projectFindUniqueArgs>(args: SelectSubset<T, projectFindUniqueArgs<ExtArgs>>): Prisma__projectClient<$Result.GetResult<Prisma.$projectPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Project that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {projectFindUniqueOrThrowArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends projectFindUniqueOrThrowArgs>(args: SelectSubset<T, projectFindUniqueOrThrowArgs<ExtArgs>>): Prisma__projectClient<$Result.GetResult<Prisma.$projectPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Project that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {projectFindFirstArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends projectFindFirstArgs>(args?: SelectSubset<T, projectFindFirstArgs<ExtArgs>>): Prisma__projectClient<$Result.GetResult<Prisma.$projectPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Project that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {projectFindFirstOrThrowArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends projectFindFirstOrThrowArgs>(args?: SelectSubset<T, projectFindFirstOrThrowArgs<ExtArgs>>): Prisma__projectClient<$Result.GetResult<Prisma.$projectPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Projects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {projectFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Projects
     * const projects = await prisma.project.findMany()
     * 
     * // Get first 10 Projects
     * const projects = await prisma.project.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const projectWithIdOnly = await prisma.project.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends projectFindManyArgs>(args?: SelectSubset<T, projectFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$projectPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Project.
     * @param {projectCreateArgs} args - Arguments to create a Project.
     * @example
     * // Create one Project
     * const Project = await prisma.project.create({
     *   data: {
     *     // ... data to create a Project
     *   }
     * })
     * 
     */
    create<T extends projectCreateArgs>(args: SelectSubset<T, projectCreateArgs<ExtArgs>>): Prisma__projectClient<$Result.GetResult<Prisma.$projectPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Projects.
     * @param {projectCreateManyArgs} args - Arguments to create many Projects.
     * @example
     * // Create many Projects
     * const project = await prisma.project.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends projectCreateManyArgs>(args?: SelectSubset<T, projectCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Projects and returns the data saved in the database.
     * @param {projectCreateManyAndReturnArgs} args - Arguments to create many Projects.
     * @example
     * // Create many Projects
     * const project = await prisma.project.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Projects and only return the `id`
     * const projectWithIdOnly = await prisma.project.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends projectCreateManyAndReturnArgs>(args?: SelectSubset<T, projectCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$projectPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Project.
     * @param {projectDeleteArgs} args - Arguments to delete one Project.
     * @example
     * // Delete one Project
     * const Project = await prisma.project.delete({
     *   where: {
     *     // ... filter to delete one Project
     *   }
     * })
     * 
     */
    delete<T extends projectDeleteArgs>(args: SelectSubset<T, projectDeleteArgs<ExtArgs>>): Prisma__projectClient<$Result.GetResult<Prisma.$projectPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Project.
     * @param {projectUpdateArgs} args - Arguments to update one Project.
     * @example
     * // Update one Project
     * const project = await prisma.project.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends projectUpdateArgs>(args: SelectSubset<T, projectUpdateArgs<ExtArgs>>): Prisma__projectClient<$Result.GetResult<Prisma.$projectPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Projects.
     * @param {projectDeleteManyArgs} args - Arguments to filter Projects to delete.
     * @example
     * // Delete a few Projects
     * const { count } = await prisma.project.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends projectDeleteManyArgs>(args?: SelectSubset<T, projectDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {projectUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Projects
     * const project = await prisma.project.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends projectUpdateManyArgs>(args: SelectSubset<T, projectUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Projects and returns the data updated in the database.
     * @param {projectUpdateManyAndReturnArgs} args - Arguments to update many Projects.
     * @example
     * // Update many Projects
     * const project = await prisma.project.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Projects and only return the `id`
     * const projectWithIdOnly = await prisma.project.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends projectUpdateManyAndReturnArgs>(args: SelectSubset<T, projectUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$projectPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Project.
     * @param {projectUpsertArgs} args - Arguments to update or create a Project.
     * @example
     * // Update or create a Project
     * const project = await prisma.project.upsert({
     *   create: {
     *     // ... data to create a Project
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Project we want to update
     *   }
     * })
     */
    upsert<T extends projectUpsertArgs>(args: SelectSubset<T, projectUpsertArgs<ExtArgs>>): Prisma__projectClient<$Result.GetResult<Prisma.$projectPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {projectCountArgs} args - Arguments to filter Projects to count.
     * @example
     * // Count the number of Projects
     * const count = await prisma.project.count({
     *   where: {
     *     // ... the filter for the Projects we want to count
     *   }
     * })
    **/
    count<T extends projectCountArgs>(
      args?: Subset<T, projectCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProjectCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Project.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProjectAggregateArgs>(args: Subset<T, ProjectAggregateArgs>): Prisma.PrismaPromise<GetProjectAggregateType<T>>

    /**
     * Group by Project.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {projectGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends projectGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: projectGroupByArgs['orderBy'] }
        : { orderBy?: projectGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, projectGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProjectGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the project model
   */
  readonly fields: projectFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for project.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__projectClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    department<T extends departmentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, departmentDefaultArgs<ExtArgs>>): Prisma__departmentClient<$Result.GetResult<Prisma.$departmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    team_member<T extends team_memberDefaultArgs<ExtArgs> = {}>(args?: Subset<T, team_memberDefaultArgs<ExtArgs>>): Prisma__team_memberClient<$Result.GetResult<Prisma.$team_memberPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    profile<T extends project$profileArgs<ExtArgs> = {}>(args?: Subset<T, project$profileArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    team<T extends project$teamArgs<ExtArgs> = {}>(args?: Subset<T, project$teamArgs<ExtArgs>>): Prisma__teamClient<$Result.GetResult<Prisma.$teamPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    today_task<T extends project$today_taskArgs<ExtArgs> = {}>(args?: Subset<T, project$today_taskArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$today_taskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    team_members<T extends project$team_membersArgs<ExtArgs> = {}>(args?: Subset<T, project$team_membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$team_memberPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    member_distribution<T extends project$member_distributionArgs<ExtArgs> = {}>(args?: Subset<T, project$member_distributionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$member_distributionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the project model
   */
  interface projectFieldRefs {
    readonly id: FieldRef<"project", 'Int'>
    readonly order_id: FieldRef<"project", 'String'>
    readonly date: FieldRef<"project", 'DateTime'>
    readonly project_name: FieldRef<"project", 'String'>
    readonly ops_status: FieldRef<"project", 'String'>
    readonly sales_comments: FieldRef<"project", 'String'>
    readonly opsleader_comments: FieldRef<"project", 'String'>
    readonly sheet_link: FieldRef<"project", 'String'>
    readonly ordered_by: FieldRef<"project", 'Int'>
    readonly deli_last_date: FieldRef<"project", 'DateTime'>
    readonly status: FieldRef<"project", 'String'>
    readonly order_amount: FieldRef<"project", 'Decimal'>
    readonly after_fiverr_amount: FieldRef<"project", 'Decimal'>
    readonly bonus: FieldRef<"project", 'Decimal'>
    readonly after_Fiverr_bonus: FieldRef<"project", 'Decimal'>
    readonly rating: FieldRef<"project", 'Int'>
    readonly department_id: FieldRef<"project", 'Int'>
    readonly project_requirements: FieldRef<"project", 'String'>
    readonly profile_id: FieldRef<"project", 'Int'>
    readonly team_id: FieldRef<"project", 'Int'>
    readonly Assigned_date: FieldRef<"project", 'DateTime'>
    readonly extension: FieldRef<"project", 'Int'>
    readonly is_delivered: FieldRef<"project", 'Boolean'>
    readonly revision: FieldRef<"project", 'Int'>
    readonly delivery_date: FieldRef<"project", 'DateTime'>
    readonly update_at: FieldRef<"project", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * project findUnique
   */
  export type projectFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project
     */
    select?: projectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project
     */
    omit?: projectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectInclude<ExtArgs> | null
    /**
     * Filter, which project to fetch.
     */
    where: projectWhereUniqueInput
  }

  /**
   * project findUniqueOrThrow
   */
  export type projectFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project
     */
    select?: projectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project
     */
    omit?: projectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectInclude<ExtArgs> | null
    /**
     * Filter, which project to fetch.
     */
    where: projectWhereUniqueInput
  }

  /**
   * project findFirst
   */
  export type projectFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project
     */
    select?: projectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project
     */
    omit?: projectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectInclude<ExtArgs> | null
    /**
     * Filter, which project to fetch.
     */
    where?: projectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of projects to fetch.
     */
    orderBy?: projectOrderByWithRelationInput | projectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for projects.
     */
    cursor?: projectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of projects.
     */
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * project findFirstOrThrow
   */
  export type projectFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project
     */
    select?: projectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project
     */
    omit?: projectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectInclude<ExtArgs> | null
    /**
     * Filter, which project to fetch.
     */
    where?: projectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of projects to fetch.
     */
    orderBy?: projectOrderByWithRelationInput | projectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for projects.
     */
    cursor?: projectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` projects.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of projects.
     */
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * project findMany
   */
  export type projectFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project
     */
    select?: projectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project
     */
    omit?: projectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectInclude<ExtArgs> | null
    /**
     * Filter, which projects to fetch.
     */
    where?: projectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of projects to fetch.
     */
    orderBy?: projectOrderByWithRelationInput | projectOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing projects.
     */
    cursor?: projectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` projects from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` projects.
     */
    skip?: number
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * project create
   */
  export type projectCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project
     */
    select?: projectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project
     */
    omit?: projectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectInclude<ExtArgs> | null
    /**
     * The data needed to create a project.
     */
    data: XOR<projectCreateInput, projectUncheckedCreateInput>
  }

  /**
   * project createMany
   */
  export type projectCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many projects.
     */
    data: projectCreateManyInput | projectCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * project createManyAndReturn
   */
  export type projectCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project
     */
    select?: projectSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the project
     */
    omit?: projectOmit<ExtArgs> | null
    /**
     * The data used to create many projects.
     */
    data: projectCreateManyInput | projectCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * project update
   */
  export type projectUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project
     */
    select?: projectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project
     */
    omit?: projectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectInclude<ExtArgs> | null
    /**
     * The data needed to update a project.
     */
    data: XOR<projectUpdateInput, projectUncheckedUpdateInput>
    /**
     * Choose, which project to update.
     */
    where: projectWhereUniqueInput
  }

  /**
   * project updateMany
   */
  export type projectUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update projects.
     */
    data: XOR<projectUpdateManyMutationInput, projectUncheckedUpdateManyInput>
    /**
     * Filter which projects to update
     */
    where?: projectWhereInput
    /**
     * Limit how many projects to update.
     */
    limit?: number
  }

  /**
   * project updateManyAndReturn
   */
  export type projectUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project
     */
    select?: projectSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the project
     */
    omit?: projectOmit<ExtArgs> | null
    /**
     * The data used to update projects.
     */
    data: XOR<projectUpdateManyMutationInput, projectUncheckedUpdateManyInput>
    /**
     * Filter which projects to update
     */
    where?: projectWhereInput
    /**
     * Limit how many projects to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * project upsert
   */
  export type projectUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project
     */
    select?: projectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project
     */
    omit?: projectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectInclude<ExtArgs> | null
    /**
     * The filter to search for the project to update in case it exists.
     */
    where: projectWhereUniqueInput
    /**
     * In case the project found by the `where` argument doesn't exist, create a new project with this data.
     */
    create: XOR<projectCreateInput, projectUncheckedCreateInput>
    /**
     * In case the project was found with the provided `where` argument, update it with this data.
     */
    update: XOR<projectUpdateInput, projectUncheckedUpdateInput>
  }

  /**
   * project delete
   */
  export type projectDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project
     */
    select?: projectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project
     */
    omit?: projectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectInclude<ExtArgs> | null
    /**
     * Filter which project to delete.
     */
    where: projectWhereUniqueInput
  }

  /**
   * project deleteMany
   */
  export type projectDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which projects to delete
     */
    where?: projectWhereInput
    /**
     * Limit how many projects to delete.
     */
    limit?: number
  }

  /**
   * project.profile
   */
  export type project$profileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    where?: profileWhereInput
  }

  /**
   * project.team
   */
  export type project$teamArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team
     */
    select?: teamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team
     */
    omit?: teamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamInclude<ExtArgs> | null
    where?: teamWhereInput
  }

  /**
   * project.today_task
   */
  export type project$today_taskArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the today_task
     */
    select?: today_taskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the today_task
     */
    omit?: today_taskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: today_taskInclude<ExtArgs> | null
    where?: today_taskWhereInput
    orderBy?: today_taskOrderByWithRelationInput | today_taskOrderByWithRelationInput[]
    cursor?: today_taskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Today_taskScalarFieldEnum | Today_taskScalarFieldEnum[]
  }

  /**
   * project.team_members
   */
  export type project$team_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_member
     */
    select?: team_memberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_member
     */
    omit?: team_memberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_memberInclude<ExtArgs> | null
    where?: team_memberWhereInput
    orderBy?: team_memberOrderByWithRelationInput | team_memberOrderByWithRelationInput[]
    cursor?: team_memberWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Team_memberScalarFieldEnum | Team_memberScalarFieldEnum[]
  }

  /**
   * project.member_distribution
   */
  export type project$member_distributionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the member_distribution
     */
    select?: member_distributionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the member_distribution
     */
    omit?: member_distributionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: member_distributionInclude<ExtArgs> | null
    where?: member_distributionWhereInput
    orderBy?: member_distributionOrderByWithRelationInput | member_distributionOrderByWithRelationInput[]
    cursor?: member_distributionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Member_distributionScalarFieldEnum | Member_distributionScalarFieldEnum[]
  }

  /**
   * project without action
   */
  export type projectDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project
     */
    select?: projectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project
     */
    omit?: projectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectInclude<ExtArgs> | null
  }


  /**
   * Model team
   */

  export type AggregateTeam = {
    _count: TeamCountAggregateOutputType | null
    _avg: TeamAvgAggregateOutputType | null
    _sum: TeamSumAggregateOutputType | null
    _min: TeamMinAggregateOutputType | null
    _max: TeamMaxAggregateOutputType | null
  }

  export type TeamAvgAggregateOutputType = {
    id: number | null
    department_id: number | null
    team_achieve: Decimal | null
    team_cancel: number | null
    total_carry: Decimal | null
    team_target: Decimal | null
  }

  export type TeamSumAggregateOutputType = {
    id: number | null
    department_id: number | null
    team_achieve: Decimal | null
    team_cancel: number | null
    total_carry: Decimal | null
    team_target: Decimal | null
  }

  export type TeamMinAggregateOutputType = {
    id: number | null
    team_name: string | null
    department_id: number | null
    team_achieve: Decimal | null
    team_cancel: number | null
    total_carry: Decimal | null
    team_target: Decimal | null
  }

  export type TeamMaxAggregateOutputType = {
    id: number | null
    team_name: string | null
    department_id: number | null
    team_achieve: Decimal | null
    team_cancel: number | null
    total_carry: Decimal | null
    team_target: Decimal | null
  }

  export type TeamCountAggregateOutputType = {
    id: number
    team_name: number
    department_id: number
    team_achieve: number
    team_cancel: number
    total_carry: number
    team_target: number
    _all: number
  }


  export type TeamAvgAggregateInputType = {
    id?: true
    department_id?: true
    team_achieve?: true
    team_cancel?: true
    total_carry?: true
    team_target?: true
  }

  export type TeamSumAggregateInputType = {
    id?: true
    department_id?: true
    team_achieve?: true
    team_cancel?: true
    total_carry?: true
    team_target?: true
  }

  export type TeamMinAggregateInputType = {
    id?: true
    team_name?: true
    department_id?: true
    team_achieve?: true
    team_cancel?: true
    total_carry?: true
    team_target?: true
  }

  export type TeamMaxAggregateInputType = {
    id?: true
    team_name?: true
    department_id?: true
    team_achieve?: true
    team_cancel?: true
    total_carry?: true
    team_target?: true
  }

  export type TeamCountAggregateInputType = {
    id?: true
    team_name?: true
    department_id?: true
    team_achieve?: true
    team_cancel?: true
    total_carry?: true
    team_target?: true
    _all?: true
  }

  export type TeamAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which team to aggregate.
     */
    where?: teamWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of teams to fetch.
     */
    orderBy?: teamOrderByWithRelationInput | teamOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: teamWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` teams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` teams.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned teams
    **/
    _count?: true | TeamCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TeamAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TeamSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TeamMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TeamMaxAggregateInputType
  }

  export type GetTeamAggregateType<T extends TeamAggregateArgs> = {
        [P in keyof T & keyof AggregateTeam]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTeam[P]>
      : GetScalarType<T[P], AggregateTeam[P]>
  }




  export type teamGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: teamWhereInput
    orderBy?: teamOrderByWithAggregationInput | teamOrderByWithAggregationInput[]
    by: TeamScalarFieldEnum[] | TeamScalarFieldEnum
    having?: teamScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TeamCountAggregateInputType | true
    _avg?: TeamAvgAggregateInputType
    _sum?: TeamSumAggregateInputType
    _min?: TeamMinAggregateInputType
    _max?: TeamMaxAggregateInputType
  }

  export type TeamGroupByOutputType = {
    id: number
    team_name: string | null
    department_id: number
    team_achieve: Decimal | null
    team_cancel: number | null
    total_carry: Decimal | null
    team_target: Decimal | null
    _count: TeamCountAggregateOutputType | null
    _avg: TeamAvgAggregateOutputType | null
    _sum: TeamSumAggregateOutputType | null
    _min: TeamMinAggregateOutputType | null
    _max: TeamMaxAggregateOutputType | null
  }

  type GetTeamGroupByPayload<T extends teamGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TeamGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TeamGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TeamGroupByOutputType[P]>
            : GetScalarType<T[P], TeamGroupByOutputType[P]>
        }
      >
    >


  export type teamSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    team_name?: boolean
    department_id?: boolean
    team_achieve?: boolean
    team_cancel?: boolean
    total_carry?: boolean
    team_target?: boolean
    project?: boolean | team$projectArgs<ExtArgs>
    department?: boolean | departmentDefaultArgs<ExtArgs>
    team_member?: boolean | team$team_memberArgs<ExtArgs>
    today_task?: boolean | team$today_taskArgs<ExtArgs>
    revision?: boolean | team$revisionArgs<ExtArgs>
    _count?: boolean | TeamCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["team"]>

  export type teamSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    team_name?: boolean
    department_id?: boolean
    team_achieve?: boolean
    team_cancel?: boolean
    total_carry?: boolean
    team_target?: boolean
    department?: boolean | departmentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["team"]>

  export type teamSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    team_name?: boolean
    department_id?: boolean
    team_achieve?: boolean
    team_cancel?: boolean
    total_carry?: boolean
    team_target?: boolean
    department?: boolean | departmentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["team"]>

  export type teamSelectScalar = {
    id?: boolean
    team_name?: boolean
    department_id?: boolean
    team_achieve?: boolean
    team_cancel?: boolean
    total_carry?: boolean
    team_target?: boolean
  }

  export type teamOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "team_name" | "department_id" | "team_achieve" | "team_cancel" | "total_carry" | "team_target", ExtArgs["result"]["team"]>
  export type teamInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project?: boolean | team$projectArgs<ExtArgs>
    department?: boolean | departmentDefaultArgs<ExtArgs>
    team_member?: boolean | team$team_memberArgs<ExtArgs>
    today_task?: boolean | team$today_taskArgs<ExtArgs>
    revision?: boolean | team$revisionArgs<ExtArgs>
    _count?: boolean | TeamCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type teamIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    department?: boolean | departmentDefaultArgs<ExtArgs>
  }
  export type teamIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    department?: boolean | departmentDefaultArgs<ExtArgs>
  }

  export type $teamPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "team"
    objects: {
      project: Prisma.$projectPayload<ExtArgs>[]
      department: Prisma.$departmentPayload<ExtArgs>
      team_member: Prisma.$team_memberPayload<ExtArgs>[]
      today_task: Prisma.$today_taskPayload<ExtArgs>[]
      revision: Prisma.$revisionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      team_name: string | null
      department_id: number
      team_achieve: Prisma.Decimal | null
      team_cancel: number | null
      total_carry: Prisma.Decimal | null
      team_target: Prisma.Decimal | null
    }, ExtArgs["result"]["team"]>
    composites: {}
  }

  type teamGetPayload<S extends boolean | null | undefined | teamDefaultArgs> = $Result.GetResult<Prisma.$teamPayload, S>

  type teamCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<teamFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TeamCountAggregateInputType | true
    }

  export interface teamDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['team'], meta: { name: 'team' } }
    /**
     * Find zero or one Team that matches the filter.
     * @param {teamFindUniqueArgs} args - Arguments to find a Team
     * @example
     * // Get one Team
     * const team = await prisma.team.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends teamFindUniqueArgs>(args: SelectSubset<T, teamFindUniqueArgs<ExtArgs>>): Prisma__teamClient<$Result.GetResult<Prisma.$teamPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Team that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {teamFindUniqueOrThrowArgs} args - Arguments to find a Team
     * @example
     * // Get one Team
     * const team = await prisma.team.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends teamFindUniqueOrThrowArgs>(args: SelectSubset<T, teamFindUniqueOrThrowArgs<ExtArgs>>): Prisma__teamClient<$Result.GetResult<Prisma.$teamPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Team that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {teamFindFirstArgs} args - Arguments to find a Team
     * @example
     * // Get one Team
     * const team = await prisma.team.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends teamFindFirstArgs>(args?: SelectSubset<T, teamFindFirstArgs<ExtArgs>>): Prisma__teamClient<$Result.GetResult<Prisma.$teamPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Team that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {teamFindFirstOrThrowArgs} args - Arguments to find a Team
     * @example
     * // Get one Team
     * const team = await prisma.team.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends teamFindFirstOrThrowArgs>(args?: SelectSubset<T, teamFindFirstOrThrowArgs<ExtArgs>>): Prisma__teamClient<$Result.GetResult<Prisma.$teamPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Teams that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {teamFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Teams
     * const teams = await prisma.team.findMany()
     * 
     * // Get first 10 Teams
     * const teams = await prisma.team.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const teamWithIdOnly = await prisma.team.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends teamFindManyArgs>(args?: SelectSubset<T, teamFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$teamPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Team.
     * @param {teamCreateArgs} args - Arguments to create a Team.
     * @example
     * // Create one Team
     * const Team = await prisma.team.create({
     *   data: {
     *     // ... data to create a Team
     *   }
     * })
     * 
     */
    create<T extends teamCreateArgs>(args: SelectSubset<T, teamCreateArgs<ExtArgs>>): Prisma__teamClient<$Result.GetResult<Prisma.$teamPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Teams.
     * @param {teamCreateManyArgs} args - Arguments to create many Teams.
     * @example
     * // Create many Teams
     * const team = await prisma.team.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends teamCreateManyArgs>(args?: SelectSubset<T, teamCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Teams and returns the data saved in the database.
     * @param {teamCreateManyAndReturnArgs} args - Arguments to create many Teams.
     * @example
     * // Create many Teams
     * const team = await prisma.team.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Teams and only return the `id`
     * const teamWithIdOnly = await prisma.team.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends teamCreateManyAndReturnArgs>(args?: SelectSubset<T, teamCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$teamPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Team.
     * @param {teamDeleteArgs} args - Arguments to delete one Team.
     * @example
     * // Delete one Team
     * const Team = await prisma.team.delete({
     *   where: {
     *     // ... filter to delete one Team
     *   }
     * })
     * 
     */
    delete<T extends teamDeleteArgs>(args: SelectSubset<T, teamDeleteArgs<ExtArgs>>): Prisma__teamClient<$Result.GetResult<Prisma.$teamPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Team.
     * @param {teamUpdateArgs} args - Arguments to update one Team.
     * @example
     * // Update one Team
     * const team = await prisma.team.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends teamUpdateArgs>(args: SelectSubset<T, teamUpdateArgs<ExtArgs>>): Prisma__teamClient<$Result.GetResult<Prisma.$teamPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Teams.
     * @param {teamDeleteManyArgs} args - Arguments to filter Teams to delete.
     * @example
     * // Delete a few Teams
     * const { count } = await prisma.team.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends teamDeleteManyArgs>(args?: SelectSubset<T, teamDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Teams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {teamUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Teams
     * const team = await prisma.team.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends teamUpdateManyArgs>(args: SelectSubset<T, teamUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Teams and returns the data updated in the database.
     * @param {teamUpdateManyAndReturnArgs} args - Arguments to update many Teams.
     * @example
     * // Update many Teams
     * const team = await prisma.team.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Teams and only return the `id`
     * const teamWithIdOnly = await prisma.team.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends teamUpdateManyAndReturnArgs>(args: SelectSubset<T, teamUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$teamPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Team.
     * @param {teamUpsertArgs} args - Arguments to update or create a Team.
     * @example
     * // Update or create a Team
     * const team = await prisma.team.upsert({
     *   create: {
     *     // ... data to create a Team
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Team we want to update
     *   }
     * })
     */
    upsert<T extends teamUpsertArgs>(args: SelectSubset<T, teamUpsertArgs<ExtArgs>>): Prisma__teamClient<$Result.GetResult<Prisma.$teamPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Teams.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {teamCountArgs} args - Arguments to filter Teams to count.
     * @example
     * // Count the number of Teams
     * const count = await prisma.team.count({
     *   where: {
     *     // ... the filter for the Teams we want to count
     *   }
     * })
    **/
    count<T extends teamCountArgs>(
      args?: Subset<T, teamCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TeamCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Team.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TeamAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TeamAggregateArgs>(args: Subset<T, TeamAggregateArgs>): Prisma.PrismaPromise<GetTeamAggregateType<T>>

    /**
     * Group by Team.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {teamGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends teamGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: teamGroupByArgs['orderBy'] }
        : { orderBy?: teamGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, teamGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTeamGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the team model
   */
  readonly fields: teamFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for team.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__teamClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    project<T extends team$projectArgs<ExtArgs> = {}>(args?: Subset<T, team$projectArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$projectPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    department<T extends departmentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, departmentDefaultArgs<ExtArgs>>): Prisma__departmentClient<$Result.GetResult<Prisma.$departmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    team_member<T extends team$team_memberArgs<ExtArgs> = {}>(args?: Subset<T, team$team_memberArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$team_memberPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    today_task<T extends team$today_taskArgs<ExtArgs> = {}>(args?: Subset<T, team$today_taskArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$today_taskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    revision<T extends team$revisionArgs<ExtArgs> = {}>(args?: Subset<T, team$revisionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$revisionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the team model
   */
  interface teamFieldRefs {
    readonly id: FieldRef<"team", 'Int'>
    readonly team_name: FieldRef<"team", 'String'>
    readonly department_id: FieldRef<"team", 'Int'>
    readonly team_achieve: FieldRef<"team", 'Decimal'>
    readonly team_cancel: FieldRef<"team", 'Int'>
    readonly total_carry: FieldRef<"team", 'Decimal'>
    readonly team_target: FieldRef<"team", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * team findUnique
   */
  export type teamFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team
     */
    select?: teamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team
     */
    omit?: teamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamInclude<ExtArgs> | null
    /**
     * Filter, which team to fetch.
     */
    where: teamWhereUniqueInput
  }

  /**
   * team findUniqueOrThrow
   */
  export type teamFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team
     */
    select?: teamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team
     */
    omit?: teamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamInclude<ExtArgs> | null
    /**
     * Filter, which team to fetch.
     */
    where: teamWhereUniqueInput
  }

  /**
   * team findFirst
   */
  export type teamFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team
     */
    select?: teamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team
     */
    omit?: teamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamInclude<ExtArgs> | null
    /**
     * Filter, which team to fetch.
     */
    where?: teamWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of teams to fetch.
     */
    orderBy?: teamOrderByWithRelationInput | teamOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for teams.
     */
    cursor?: teamWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` teams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` teams.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of teams.
     */
    distinct?: TeamScalarFieldEnum | TeamScalarFieldEnum[]
  }

  /**
   * team findFirstOrThrow
   */
  export type teamFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team
     */
    select?: teamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team
     */
    omit?: teamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamInclude<ExtArgs> | null
    /**
     * Filter, which team to fetch.
     */
    where?: teamWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of teams to fetch.
     */
    orderBy?: teamOrderByWithRelationInput | teamOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for teams.
     */
    cursor?: teamWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` teams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` teams.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of teams.
     */
    distinct?: TeamScalarFieldEnum | TeamScalarFieldEnum[]
  }

  /**
   * team findMany
   */
  export type teamFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team
     */
    select?: teamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team
     */
    omit?: teamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamInclude<ExtArgs> | null
    /**
     * Filter, which teams to fetch.
     */
    where?: teamWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of teams to fetch.
     */
    orderBy?: teamOrderByWithRelationInput | teamOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing teams.
     */
    cursor?: teamWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` teams from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` teams.
     */
    skip?: number
    distinct?: TeamScalarFieldEnum | TeamScalarFieldEnum[]
  }

  /**
   * team create
   */
  export type teamCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team
     */
    select?: teamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team
     */
    omit?: teamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamInclude<ExtArgs> | null
    /**
     * The data needed to create a team.
     */
    data: XOR<teamCreateInput, teamUncheckedCreateInput>
  }

  /**
   * team createMany
   */
  export type teamCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many teams.
     */
    data: teamCreateManyInput | teamCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * team createManyAndReturn
   */
  export type teamCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team
     */
    select?: teamSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the team
     */
    omit?: teamOmit<ExtArgs> | null
    /**
     * The data used to create many teams.
     */
    data: teamCreateManyInput | teamCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * team update
   */
  export type teamUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team
     */
    select?: teamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team
     */
    omit?: teamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamInclude<ExtArgs> | null
    /**
     * The data needed to update a team.
     */
    data: XOR<teamUpdateInput, teamUncheckedUpdateInput>
    /**
     * Choose, which team to update.
     */
    where: teamWhereUniqueInput
  }

  /**
   * team updateMany
   */
  export type teamUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update teams.
     */
    data: XOR<teamUpdateManyMutationInput, teamUncheckedUpdateManyInput>
    /**
     * Filter which teams to update
     */
    where?: teamWhereInput
    /**
     * Limit how many teams to update.
     */
    limit?: number
  }

  /**
   * team updateManyAndReturn
   */
  export type teamUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team
     */
    select?: teamSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the team
     */
    omit?: teamOmit<ExtArgs> | null
    /**
     * The data used to update teams.
     */
    data: XOR<teamUpdateManyMutationInput, teamUncheckedUpdateManyInput>
    /**
     * Filter which teams to update
     */
    where?: teamWhereInput
    /**
     * Limit how many teams to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * team upsert
   */
  export type teamUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team
     */
    select?: teamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team
     */
    omit?: teamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamInclude<ExtArgs> | null
    /**
     * The filter to search for the team to update in case it exists.
     */
    where: teamWhereUniqueInput
    /**
     * In case the team found by the `where` argument doesn't exist, create a new team with this data.
     */
    create: XOR<teamCreateInput, teamUncheckedCreateInput>
    /**
     * In case the team was found with the provided `where` argument, update it with this data.
     */
    update: XOR<teamUpdateInput, teamUncheckedUpdateInput>
  }

  /**
   * team delete
   */
  export type teamDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team
     */
    select?: teamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team
     */
    omit?: teamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamInclude<ExtArgs> | null
    /**
     * Filter which team to delete.
     */
    where: teamWhereUniqueInput
  }

  /**
   * team deleteMany
   */
  export type teamDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which teams to delete
     */
    where?: teamWhereInput
    /**
     * Limit how many teams to delete.
     */
    limit?: number
  }

  /**
   * team.project
   */
  export type team$projectArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project
     */
    select?: projectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project
     */
    omit?: projectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectInclude<ExtArgs> | null
    where?: projectWhereInput
    orderBy?: projectOrderByWithRelationInput | projectOrderByWithRelationInput[]
    cursor?: projectWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * team.team_member
   */
  export type team$team_memberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_member
     */
    select?: team_memberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_member
     */
    omit?: team_memberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_memberInclude<ExtArgs> | null
    where?: team_memberWhereInput
    orderBy?: team_memberOrderByWithRelationInput | team_memberOrderByWithRelationInput[]
    cursor?: team_memberWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Team_memberScalarFieldEnum | Team_memberScalarFieldEnum[]
  }

  /**
   * team.today_task
   */
  export type team$today_taskArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the today_task
     */
    select?: today_taskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the today_task
     */
    omit?: today_taskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: today_taskInclude<ExtArgs> | null
    where?: today_taskWhereInput
    orderBy?: today_taskOrderByWithRelationInput | today_taskOrderByWithRelationInput[]
    cursor?: today_taskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Today_taskScalarFieldEnum | Today_taskScalarFieldEnum[]
  }

  /**
   * team.revision
   */
  export type team$revisionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revision
     */
    select?: revisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the revision
     */
    omit?: revisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: revisionInclude<ExtArgs> | null
    where?: revisionWhereInput
    orderBy?: revisionOrderByWithRelationInput | revisionOrderByWithRelationInput[]
    cursor?: revisionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RevisionScalarFieldEnum | RevisionScalarFieldEnum[]
  }

  /**
   * team without action
   */
  export type teamDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team
     */
    select?: teamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team
     */
    omit?: teamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamInclude<ExtArgs> | null
  }


  /**
   * Model department
   */

  export type AggregateDepartment = {
    _count: DepartmentCountAggregateOutputType | null
    _avg: DepartmentAvgAggregateOutputType | null
    _sum: DepartmentSumAggregateOutputType | null
    _min: DepartmentMinAggregateOutputType | null
    _max: DepartmentMaxAggregateOutputType | null
  }

  export type DepartmentAvgAggregateOutputType = {
    id: number | null
    department_target: Decimal | null
    department_achieve: Decimal | null
    department_cancel: Decimal | null
    department_special_order: Decimal | null
    total_carry: Decimal | null
  }

  export type DepartmentSumAggregateOutputType = {
    id: number | null
    department_target: Decimal | null
    department_achieve: Decimal | null
    department_cancel: Decimal | null
    department_special_order: Decimal | null
    total_carry: Decimal | null
  }

  export type DepartmentMinAggregateOutputType = {
    id: number | null
    department_name: string | null
    department_target: Decimal | null
    department_achieve: Decimal | null
    department_cancel: Decimal | null
    department_special_order: Decimal | null
    department_designation: string | null
    project_requirements: string | null
    total_carry: Decimal | null
  }

  export type DepartmentMaxAggregateOutputType = {
    id: number | null
    department_name: string | null
    department_target: Decimal | null
    department_achieve: Decimal | null
    department_cancel: Decimal | null
    department_special_order: Decimal | null
    department_designation: string | null
    project_requirements: string | null
    total_carry: Decimal | null
  }

  export type DepartmentCountAggregateOutputType = {
    id: number
    department_name: number
    department_target: number
    department_achieve: number
    department_cancel: number
    department_special_order: number
    department_designation: number
    project_requirements: number
    total_carry: number
    _all: number
  }


  export type DepartmentAvgAggregateInputType = {
    id?: true
    department_target?: true
    department_achieve?: true
    department_cancel?: true
    department_special_order?: true
    total_carry?: true
  }

  export type DepartmentSumAggregateInputType = {
    id?: true
    department_target?: true
    department_achieve?: true
    department_cancel?: true
    department_special_order?: true
    total_carry?: true
  }

  export type DepartmentMinAggregateInputType = {
    id?: true
    department_name?: true
    department_target?: true
    department_achieve?: true
    department_cancel?: true
    department_special_order?: true
    department_designation?: true
    project_requirements?: true
    total_carry?: true
  }

  export type DepartmentMaxAggregateInputType = {
    id?: true
    department_name?: true
    department_target?: true
    department_achieve?: true
    department_cancel?: true
    department_special_order?: true
    department_designation?: true
    project_requirements?: true
    total_carry?: true
  }

  export type DepartmentCountAggregateInputType = {
    id?: true
    department_name?: true
    department_target?: true
    department_achieve?: true
    department_cancel?: true
    department_special_order?: true
    department_designation?: true
    project_requirements?: true
    total_carry?: true
    _all?: true
  }

  export type DepartmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which department to aggregate.
     */
    where?: departmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of departments to fetch.
     */
    orderBy?: departmentOrderByWithRelationInput | departmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: departmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` departments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned departments
    **/
    _count?: true | DepartmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DepartmentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DepartmentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DepartmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DepartmentMaxAggregateInputType
  }

  export type GetDepartmentAggregateType<T extends DepartmentAggregateArgs> = {
        [P in keyof T & keyof AggregateDepartment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDepartment[P]>
      : GetScalarType<T[P], AggregateDepartment[P]>
  }




  export type departmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: departmentWhereInput
    orderBy?: departmentOrderByWithAggregationInput | departmentOrderByWithAggregationInput[]
    by: DepartmentScalarFieldEnum[] | DepartmentScalarFieldEnum
    having?: departmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DepartmentCountAggregateInputType | true
    _avg?: DepartmentAvgAggregateInputType
    _sum?: DepartmentSumAggregateInputType
    _min?: DepartmentMinAggregateInputType
    _max?: DepartmentMaxAggregateInputType
  }

  export type DepartmentGroupByOutputType = {
    id: number
    department_name: string | null
    department_target: Decimal | null
    department_achieve: Decimal | null
    department_cancel: Decimal | null
    department_special_order: Decimal | null
    department_designation: string | null
    project_requirements: string | null
    total_carry: Decimal | null
    _count: DepartmentCountAggregateOutputType | null
    _avg: DepartmentAvgAggregateOutputType | null
    _sum: DepartmentSumAggregateOutputType | null
    _min: DepartmentMinAggregateOutputType | null
    _max: DepartmentMaxAggregateOutputType | null
  }

  type GetDepartmentGroupByPayload<T extends departmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DepartmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DepartmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DepartmentGroupByOutputType[P]>
            : GetScalarType<T[P], DepartmentGroupByOutputType[P]>
        }
      >
    >


  export type departmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    department_name?: boolean
    department_target?: boolean
    department_achieve?: boolean
    department_cancel?: boolean
    department_special_order?: boolean
    department_designation?: boolean
    project_requirements?: boolean
    total_carry?: boolean
    assign_project?: boolean | department$assign_projectArgs<ExtArgs>
    department_teams?: boolean | department$department_teamsArgs<ExtArgs>
    department_profile?: boolean | department$department_profileArgs<ExtArgs>
    _count?: boolean | DepartmentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["department"]>

  export type departmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    department_name?: boolean
    department_target?: boolean
    department_achieve?: boolean
    department_cancel?: boolean
    department_special_order?: boolean
    department_designation?: boolean
    project_requirements?: boolean
    total_carry?: boolean
  }, ExtArgs["result"]["department"]>

  export type departmentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    department_name?: boolean
    department_target?: boolean
    department_achieve?: boolean
    department_cancel?: boolean
    department_special_order?: boolean
    department_designation?: boolean
    project_requirements?: boolean
    total_carry?: boolean
  }, ExtArgs["result"]["department"]>

  export type departmentSelectScalar = {
    id?: boolean
    department_name?: boolean
    department_target?: boolean
    department_achieve?: boolean
    department_cancel?: boolean
    department_special_order?: boolean
    department_designation?: boolean
    project_requirements?: boolean
    total_carry?: boolean
  }

  export type departmentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "department_name" | "department_target" | "department_achieve" | "department_cancel" | "department_special_order" | "department_designation" | "project_requirements" | "total_carry", ExtArgs["result"]["department"]>
  export type departmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assign_project?: boolean | department$assign_projectArgs<ExtArgs>
    department_teams?: boolean | department$department_teamsArgs<ExtArgs>
    department_profile?: boolean | department$department_profileArgs<ExtArgs>
    _count?: boolean | DepartmentCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type departmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type departmentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $departmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "department"
    objects: {
      assign_project: Prisma.$projectPayload<ExtArgs>[]
      department_teams: Prisma.$teamPayload<ExtArgs>[]
      department_profile: Prisma.$profilePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      department_name: string | null
      department_target: Prisma.Decimal | null
      department_achieve: Prisma.Decimal | null
      department_cancel: Prisma.Decimal | null
      department_special_order: Prisma.Decimal | null
      department_designation: string | null
      project_requirements: string | null
      total_carry: Prisma.Decimal | null
    }, ExtArgs["result"]["department"]>
    composites: {}
  }

  type departmentGetPayload<S extends boolean | null | undefined | departmentDefaultArgs> = $Result.GetResult<Prisma.$departmentPayload, S>

  type departmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<departmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DepartmentCountAggregateInputType | true
    }

  export interface departmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['department'], meta: { name: 'department' } }
    /**
     * Find zero or one Department that matches the filter.
     * @param {departmentFindUniqueArgs} args - Arguments to find a Department
     * @example
     * // Get one Department
     * const department = await prisma.department.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends departmentFindUniqueArgs>(args: SelectSubset<T, departmentFindUniqueArgs<ExtArgs>>): Prisma__departmentClient<$Result.GetResult<Prisma.$departmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Department that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {departmentFindUniqueOrThrowArgs} args - Arguments to find a Department
     * @example
     * // Get one Department
     * const department = await prisma.department.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends departmentFindUniqueOrThrowArgs>(args: SelectSubset<T, departmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__departmentClient<$Result.GetResult<Prisma.$departmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Department that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departmentFindFirstArgs} args - Arguments to find a Department
     * @example
     * // Get one Department
     * const department = await prisma.department.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends departmentFindFirstArgs>(args?: SelectSubset<T, departmentFindFirstArgs<ExtArgs>>): Prisma__departmentClient<$Result.GetResult<Prisma.$departmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Department that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departmentFindFirstOrThrowArgs} args - Arguments to find a Department
     * @example
     * // Get one Department
     * const department = await prisma.department.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends departmentFindFirstOrThrowArgs>(args?: SelectSubset<T, departmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__departmentClient<$Result.GetResult<Prisma.$departmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Departments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Departments
     * const departments = await prisma.department.findMany()
     * 
     * // Get first 10 Departments
     * const departments = await prisma.department.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const departmentWithIdOnly = await prisma.department.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends departmentFindManyArgs>(args?: SelectSubset<T, departmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$departmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Department.
     * @param {departmentCreateArgs} args - Arguments to create a Department.
     * @example
     * // Create one Department
     * const Department = await prisma.department.create({
     *   data: {
     *     // ... data to create a Department
     *   }
     * })
     * 
     */
    create<T extends departmentCreateArgs>(args: SelectSubset<T, departmentCreateArgs<ExtArgs>>): Prisma__departmentClient<$Result.GetResult<Prisma.$departmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Departments.
     * @param {departmentCreateManyArgs} args - Arguments to create many Departments.
     * @example
     * // Create many Departments
     * const department = await prisma.department.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends departmentCreateManyArgs>(args?: SelectSubset<T, departmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Departments and returns the data saved in the database.
     * @param {departmentCreateManyAndReturnArgs} args - Arguments to create many Departments.
     * @example
     * // Create many Departments
     * const department = await prisma.department.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Departments and only return the `id`
     * const departmentWithIdOnly = await prisma.department.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends departmentCreateManyAndReturnArgs>(args?: SelectSubset<T, departmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$departmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Department.
     * @param {departmentDeleteArgs} args - Arguments to delete one Department.
     * @example
     * // Delete one Department
     * const Department = await prisma.department.delete({
     *   where: {
     *     // ... filter to delete one Department
     *   }
     * })
     * 
     */
    delete<T extends departmentDeleteArgs>(args: SelectSubset<T, departmentDeleteArgs<ExtArgs>>): Prisma__departmentClient<$Result.GetResult<Prisma.$departmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Department.
     * @param {departmentUpdateArgs} args - Arguments to update one Department.
     * @example
     * // Update one Department
     * const department = await prisma.department.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends departmentUpdateArgs>(args: SelectSubset<T, departmentUpdateArgs<ExtArgs>>): Prisma__departmentClient<$Result.GetResult<Prisma.$departmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Departments.
     * @param {departmentDeleteManyArgs} args - Arguments to filter Departments to delete.
     * @example
     * // Delete a few Departments
     * const { count } = await prisma.department.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends departmentDeleteManyArgs>(args?: SelectSubset<T, departmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Departments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Departments
     * const department = await prisma.department.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends departmentUpdateManyArgs>(args: SelectSubset<T, departmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Departments and returns the data updated in the database.
     * @param {departmentUpdateManyAndReturnArgs} args - Arguments to update many Departments.
     * @example
     * // Update many Departments
     * const department = await prisma.department.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Departments and only return the `id`
     * const departmentWithIdOnly = await prisma.department.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends departmentUpdateManyAndReturnArgs>(args: SelectSubset<T, departmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$departmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Department.
     * @param {departmentUpsertArgs} args - Arguments to update or create a Department.
     * @example
     * // Update or create a Department
     * const department = await prisma.department.upsert({
     *   create: {
     *     // ... data to create a Department
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Department we want to update
     *   }
     * })
     */
    upsert<T extends departmentUpsertArgs>(args: SelectSubset<T, departmentUpsertArgs<ExtArgs>>): Prisma__departmentClient<$Result.GetResult<Prisma.$departmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Departments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departmentCountArgs} args - Arguments to filter Departments to count.
     * @example
     * // Count the number of Departments
     * const count = await prisma.department.count({
     *   where: {
     *     // ... the filter for the Departments we want to count
     *   }
     * })
    **/
    count<T extends departmentCountArgs>(
      args?: Subset<T, departmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DepartmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Department.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepartmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DepartmentAggregateArgs>(args: Subset<T, DepartmentAggregateArgs>): Prisma.PrismaPromise<GetDepartmentAggregateType<T>>

    /**
     * Group by Department.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {departmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends departmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: departmentGroupByArgs['orderBy'] }
        : { orderBy?: departmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, departmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDepartmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the department model
   */
  readonly fields: departmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for department.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__departmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    assign_project<T extends department$assign_projectArgs<ExtArgs> = {}>(args?: Subset<T, department$assign_projectArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$projectPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    department_teams<T extends department$department_teamsArgs<ExtArgs> = {}>(args?: Subset<T, department$department_teamsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$teamPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    department_profile<T extends department$department_profileArgs<ExtArgs> = {}>(args?: Subset<T, department$department_profileArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the department model
   */
  interface departmentFieldRefs {
    readonly id: FieldRef<"department", 'Int'>
    readonly department_name: FieldRef<"department", 'String'>
    readonly department_target: FieldRef<"department", 'Decimal'>
    readonly department_achieve: FieldRef<"department", 'Decimal'>
    readonly department_cancel: FieldRef<"department", 'Decimal'>
    readonly department_special_order: FieldRef<"department", 'Decimal'>
    readonly department_designation: FieldRef<"department", 'String'>
    readonly project_requirements: FieldRef<"department", 'String'>
    readonly total_carry: FieldRef<"department", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * department findUnique
   */
  export type departmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the department
     */
    select?: departmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the department
     */
    omit?: departmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentInclude<ExtArgs> | null
    /**
     * Filter, which department to fetch.
     */
    where: departmentWhereUniqueInput
  }

  /**
   * department findUniqueOrThrow
   */
  export type departmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the department
     */
    select?: departmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the department
     */
    omit?: departmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentInclude<ExtArgs> | null
    /**
     * Filter, which department to fetch.
     */
    where: departmentWhereUniqueInput
  }

  /**
   * department findFirst
   */
  export type departmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the department
     */
    select?: departmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the department
     */
    omit?: departmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentInclude<ExtArgs> | null
    /**
     * Filter, which department to fetch.
     */
    where?: departmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of departments to fetch.
     */
    orderBy?: departmentOrderByWithRelationInput | departmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for departments.
     */
    cursor?: departmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` departments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of departments.
     */
    distinct?: DepartmentScalarFieldEnum | DepartmentScalarFieldEnum[]
  }

  /**
   * department findFirstOrThrow
   */
  export type departmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the department
     */
    select?: departmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the department
     */
    omit?: departmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentInclude<ExtArgs> | null
    /**
     * Filter, which department to fetch.
     */
    where?: departmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of departments to fetch.
     */
    orderBy?: departmentOrderByWithRelationInput | departmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for departments.
     */
    cursor?: departmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` departments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of departments.
     */
    distinct?: DepartmentScalarFieldEnum | DepartmentScalarFieldEnum[]
  }

  /**
   * department findMany
   */
  export type departmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the department
     */
    select?: departmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the department
     */
    omit?: departmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentInclude<ExtArgs> | null
    /**
     * Filter, which departments to fetch.
     */
    where?: departmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of departments to fetch.
     */
    orderBy?: departmentOrderByWithRelationInput | departmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing departments.
     */
    cursor?: departmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` departments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` departments.
     */
    skip?: number
    distinct?: DepartmentScalarFieldEnum | DepartmentScalarFieldEnum[]
  }

  /**
   * department create
   */
  export type departmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the department
     */
    select?: departmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the department
     */
    omit?: departmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentInclude<ExtArgs> | null
    /**
     * The data needed to create a department.
     */
    data?: XOR<departmentCreateInput, departmentUncheckedCreateInput>
  }

  /**
   * department createMany
   */
  export type departmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many departments.
     */
    data: departmentCreateManyInput | departmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * department createManyAndReturn
   */
  export type departmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the department
     */
    select?: departmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the department
     */
    omit?: departmentOmit<ExtArgs> | null
    /**
     * The data used to create many departments.
     */
    data: departmentCreateManyInput | departmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * department update
   */
  export type departmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the department
     */
    select?: departmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the department
     */
    omit?: departmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentInclude<ExtArgs> | null
    /**
     * The data needed to update a department.
     */
    data: XOR<departmentUpdateInput, departmentUncheckedUpdateInput>
    /**
     * Choose, which department to update.
     */
    where: departmentWhereUniqueInput
  }

  /**
   * department updateMany
   */
  export type departmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update departments.
     */
    data: XOR<departmentUpdateManyMutationInput, departmentUncheckedUpdateManyInput>
    /**
     * Filter which departments to update
     */
    where?: departmentWhereInput
    /**
     * Limit how many departments to update.
     */
    limit?: number
  }

  /**
   * department updateManyAndReturn
   */
  export type departmentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the department
     */
    select?: departmentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the department
     */
    omit?: departmentOmit<ExtArgs> | null
    /**
     * The data used to update departments.
     */
    data: XOR<departmentUpdateManyMutationInput, departmentUncheckedUpdateManyInput>
    /**
     * Filter which departments to update
     */
    where?: departmentWhereInput
    /**
     * Limit how many departments to update.
     */
    limit?: number
  }

  /**
   * department upsert
   */
  export type departmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the department
     */
    select?: departmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the department
     */
    omit?: departmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentInclude<ExtArgs> | null
    /**
     * The filter to search for the department to update in case it exists.
     */
    where: departmentWhereUniqueInput
    /**
     * In case the department found by the `where` argument doesn't exist, create a new department with this data.
     */
    create: XOR<departmentCreateInput, departmentUncheckedCreateInput>
    /**
     * In case the department was found with the provided `where` argument, update it with this data.
     */
    update: XOR<departmentUpdateInput, departmentUncheckedUpdateInput>
  }

  /**
   * department delete
   */
  export type departmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the department
     */
    select?: departmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the department
     */
    omit?: departmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentInclude<ExtArgs> | null
    /**
     * Filter which department to delete.
     */
    where: departmentWhereUniqueInput
  }

  /**
   * department deleteMany
   */
  export type departmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which departments to delete
     */
    where?: departmentWhereInput
    /**
     * Limit how many departments to delete.
     */
    limit?: number
  }

  /**
   * department.assign_project
   */
  export type department$assign_projectArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project
     */
    select?: projectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project
     */
    omit?: projectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectInclude<ExtArgs> | null
    where?: projectWhereInput
    orderBy?: projectOrderByWithRelationInput | projectOrderByWithRelationInput[]
    cursor?: projectWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * department.department_teams
   */
  export type department$department_teamsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team
     */
    select?: teamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team
     */
    omit?: teamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamInclude<ExtArgs> | null
    where?: teamWhereInput
    orderBy?: teamOrderByWithRelationInput | teamOrderByWithRelationInput[]
    cursor?: teamWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TeamScalarFieldEnum | TeamScalarFieldEnum[]
  }

  /**
   * department.department_profile
   */
  export type department$department_profileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    where?: profileWhereInput
    orderBy?: profileOrderByWithRelationInput | profileOrderByWithRelationInput[]
    cursor?: profileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * department without action
   */
  export type departmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the department
     */
    select?: departmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the department
     */
    omit?: departmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentInclude<ExtArgs> | null
  }


  /**
   * Model profile
   */

  export type AggregateProfile = {
    _count: ProfileCountAggregateOutputType | null
    _avg: ProfileAvgAggregateOutputType | null
    _sum: ProfileSumAggregateOutputType | null
    _min: ProfileMinAggregateOutputType | null
    _max: ProfileMaxAggregateOutputType | null
  }

  export type ProfileAvgAggregateOutputType = {
    id: number | null
    order_amount: Decimal | null
    bonus_amount: Decimal | null
    order_count: number | null
    rank: Decimal | null
    cancel_count: number | null
    complete_count: number | null
    no_rating: number | null
    profile_target: Decimal | null
    department_id: number | null
    repeat_order: Decimal | null
    total_rating: Decimal | null
  }

  export type ProfileSumAggregateOutputType = {
    id: number | null
    order_amount: Decimal | null
    bonus_amount: Decimal | null
    order_count: number | null
    rank: Decimal | null
    cancel_count: number | null
    complete_count: number | null
    no_rating: number | null
    profile_target: Decimal | null
    department_id: number | null
    repeat_order: Decimal | null
    total_rating: Decimal | null
  }

  export type ProfileMinAggregateOutputType = {
    id: number | null
    created_date: Date | null
    profile_name: string | null
    order_amount: Decimal | null
    bonus_amount: Decimal | null
    order_count: number | null
    rank: Decimal | null
    cancel_count: number | null
    complete_count: number | null
    no_rating: number | null
    profile_target: Decimal | null
    department_id: number | null
    repeat_order: Decimal | null
    keywords: string | null
    total_rating: Decimal | null
  }

  export type ProfileMaxAggregateOutputType = {
    id: number | null
    created_date: Date | null
    profile_name: string | null
    order_amount: Decimal | null
    bonus_amount: Decimal | null
    order_count: number | null
    rank: Decimal | null
    cancel_count: number | null
    complete_count: number | null
    no_rating: number | null
    profile_target: Decimal | null
    department_id: number | null
    repeat_order: Decimal | null
    keywords: string | null
    total_rating: Decimal | null
  }

  export type ProfileCountAggregateOutputType = {
    id: number
    created_date: number
    profile_name: number
    order_amount: number
    bonus_amount: number
    order_count: number
    rank: number
    cancel_count: number
    complete_count: number
    no_rating: number
    profile_target: number
    department_id: number
    repeat_order: number
    keywords: number
    total_rating: number
    _all: number
  }


  export type ProfileAvgAggregateInputType = {
    id?: true
    order_amount?: true
    bonus_amount?: true
    order_count?: true
    rank?: true
    cancel_count?: true
    complete_count?: true
    no_rating?: true
    profile_target?: true
    department_id?: true
    repeat_order?: true
    total_rating?: true
  }

  export type ProfileSumAggregateInputType = {
    id?: true
    order_amount?: true
    bonus_amount?: true
    order_count?: true
    rank?: true
    cancel_count?: true
    complete_count?: true
    no_rating?: true
    profile_target?: true
    department_id?: true
    repeat_order?: true
    total_rating?: true
  }

  export type ProfileMinAggregateInputType = {
    id?: true
    created_date?: true
    profile_name?: true
    order_amount?: true
    bonus_amount?: true
    order_count?: true
    rank?: true
    cancel_count?: true
    complete_count?: true
    no_rating?: true
    profile_target?: true
    department_id?: true
    repeat_order?: true
    keywords?: true
    total_rating?: true
  }

  export type ProfileMaxAggregateInputType = {
    id?: true
    created_date?: true
    profile_name?: true
    order_amount?: true
    bonus_amount?: true
    order_count?: true
    rank?: true
    cancel_count?: true
    complete_count?: true
    no_rating?: true
    profile_target?: true
    department_id?: true
    repeat_order?: true
    keywords?: true
    total_rating?: true
  }

  export type ProfileCountAggregateInputType = {
    id?: true
    created_date?: true
    profile_name?: true
    order_amount?: true
    bonus_amount?: true
    order_count?: true
    rank?: true
    cancel_count?: true
    complete_count?: true
    no_rating?: true
    profile_target?: true
    department_id?: true
    repeat_order?: true
    keywords?: true
    total_rating?: true
    _all?: true
  }

  export type ProfileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which profile to aggregate.
     */
    where?: profileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of profiles to fetch.
     */
    orderBy?: profileOrderByWithRelationInput | profileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: profileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned profiles
    **/
    _count?: true | ProfileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProfileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProfileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProfileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProfileMaxAggregateInputType
  }

  export type GetProfileAggregateType<T extends ProfileAggregateArgs> = {
        [P in keyof T & keyof AggregateProfile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProfile[P]>
      : GetScalarType<T[P], AggregateProfile[P]>
  }




  export type profileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: profileWhereInput
    orderBy?: profileOrderByWithAggregationInput | profileOrderByWithAggregationInput[]
    by: ProfileScalarFieldEnum[] | ProfileScalarFieldEnum
    having?: profileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProfileCountAggregateInputType | true
    _avg?: ProfileAvgAggregateInputType
    _sum?: ProfileSumAggregateInputType
    _min?: ProfileMinAggregateInputType
    _max?: ProfileMaxAggregateInputType
  }

  export type ProfileGroupByOutputType = {
    id: number
    created_date: Date | null
    profile_name: string | null
    order_amount: Decimal | null
    bonus_amount: Decimal | null
    order_count: number | null
    rank: Decimal | null
    cancel_count: number | null
    complete_count: number | null
    no_rating: number | null
    profile_target: Decimal | null
    department_id: number
    repeat_order: Decimal | null
    keywords: string | null
    total_rating: Decimal | null
    _count: ProfileCountAggregateOutputType | null
    _avg: ProfileAvgAggregateOutputType | null
    _sum: ProfileSumAggregateOutputType | null
    _min: ProfileMinAggregateOutputType | null
    _max: ProfileMaxAggregateOutputType | null
  }

  type GetProfileGroupByPayload<T extends profileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProfileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProfileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProfileGroupByOutputType[P]>
            : GetScalarType<T[P], ProfileGroupByOutputType[P]>
        }
      >
    >


  export type profileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_date?: boolean
    profile_name?: boolean
    order_amount?: boolean
    bonus_amount?: boolean
    order_count?: boolean
    rank?: boolean
    cancel_count?: boolean
    complete_count?: boolean
    no_rating?: boolean
    profile_target?: boolean
    department_id?: boolean
    repeat_order?: boolean
    keywords?: boolean
    total_rating?: boolean
    projects?: boolean | profile$projectsArgs<ExtArgs>
    department?: boolean | profile$departmentArgs<ExtArgs>
    team_members?: boolean | profile$team_membersArgs<ExtArgs>
    _count?: boolean | ProfileCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["profile"]>

  export type profileSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_date?: boolean
    profile_name?: boolean
    order_amount?: boolean
    bonus_amount?: boolean
    order_count?: boolean
    rank?: boolean
    cancel_count?: boolean
    complete_count?: boolean
    no_rating?: boolean
    profile_target?: boolean
    department_id?: boolean
    repeat_order?: boolean
    keywords?: boolean
    total_rating?: boolean
  }, ExtArgs["result"]["profile"]>

  export type profileSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_date?: boolean
    profile_name?: boolean
    order_amount?: boolean
    bonus_amount?: boolean
    order_count?: boolean
    rank?: boolean
    cancel_count?: boolean
    complete_count?: boolean
    no_rating?: boolean
    profile_target?: boolean
    department_id?: boolean
    repeat_order?: boolean
    keywords?: boolean
    total_rating?: boolean
  }, ExtArgs["result"]["profile"]>

  export type profileSelectScalar = {
    id?: boolean
    created_date?: boolean
    profile_name?: boolean
    order_amount?: boolean
    bonus_amount?: boolean
    order_count?: boolean
    rank?: boolean
    cancel_count?: boolean
    complete_count?: boolean
    no_rating?: boolean
    profile_target?: boolean
    department_id?: boolean
    repeat_order?: boolean
    keywords?: boolean
    total_rating?: boolean
  }

  export type profileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "created_date" | "profile_name" | "order_amount" | "bonus_amount" | "order_count" | "rank" | "cancel_count" | "complete_count" | "no_rating" | "profile_target" | "department_id" | "repeat_order" | "keywords" | "total_rating", ExtArgs["result"]["profile"]>
  export type profileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    projects?: boolean | profile$projectsArgs<ExtArgs>
    department?: boolean | profile$departmentArgs<ExtArgs>
    team_members?: boolean | profile$team_membersArgs<ExtArgs>
    _count?: boolean | ProfileCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type profileIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type profileIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $profilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "profile"
    objects: {
      projects: Prisma.$projectPayload<ExtArgs>[]
      department: Prisma.$departmentPayload<ExtArgs>[]
      team_members: Prisma.$team_memberPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      created_date: Date | null
      profile_name: string | null
      order_amount: Prisma.Decimal | null
      bonus_amount: Prisma.Decimal | null
      order_count: number | null
      rank: Prisma.Decimal | null
      cancel_count: number | null
      complete_count: number | null
      no_rating: number | null
      profile_target: Prisma.Decimal | null
      department_id: number
      repeat_order: Prisma.Decimal | null
      keywords: string | null
      total_rating: Prisma.Decimal | null
    }, ExtArgs["result"]["profile"]>
    composites: {}
  }

  type profileGetPayload<S extends boolean | null | undefined | profileDefaultArgs> = $Result.GetResult<Prisma.$profilePayload, S>

  type profileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<profileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProfileCountAggregateInputType | true
    }

  export interface profileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['profile'], meta: { name: 'profile' } }
    /**
     * Find zero or one Profile that matches the filter.
     * @param {profileFindUniqueArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends profileFindUniqueArgs>(args: SelectSubset<T, profileFindUniqueArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Profile that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {profileFindUniqueOrThrowArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends profileFindUniqueOrThrowArgs>(args: SelectSubset<T, profileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Profile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profileFindFirstArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends profileFindFirstArgs>(args?: SelectSubset<T, profileFindFirstArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Profile that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profileFindFirstOrThrowArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends profileFindFirstOrThrowArgs>(args?: SelectSubset<T, profileFindFirstOrThrowArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Profiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Profiles
     * const profiles = await prisma.profile.findMany()
     * 
     * // Get first 10 Profiles
     * const profiles = await prisma.profile.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const profileWithIdOnly = await prisma.profile.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends profileFindManyArgs>(args?: SelectSubset<T, profileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Profile.
     * @param {profileCreateArgs} args - Arguments to create a Profile.
     * @example
     * // Create one Profile
     * const Profile = await prisma.profile.create({
     *   data: {
     *     // ... data to create a Profile
     *   }
     * })
     * 
     */
    create<T extends profileCreateArgs>(args: SelectSubset<T, profileCreateArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Profiles.
     * @param {profileCreateManyArgs} args - Arguments to create many Profiles.
     * @example
     * // Create many Profiles
     * const profile = await prisma.profile.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends profileCreateManyArgs>(args?: SelectSubset<T, profileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Profiles and returns the data saved in the database.
     * @param {profileCreateManyAndReturnArgs} args - Arguments to create many Profiles.
     * @example
     * // Create many Profiles
     * const profile = await prisma.profile.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Profiles and only return the `id`
     * const profileWithIdOnly = await prisma.profile.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends profileCreateManyAndReturnArgs>(args?: SelectSubset<T, profileCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Profile.
     * @param {profileDeleteArgs} args - Arguments to delete one Profile.
     * @example
     * // Delete one Profile
     * const Profile = await prisma.profile.delete({
     *   where: {
     *     // ... filter to delete one Profile
     *   }
     * })
     * 
     */
    delete<T extends profileDeleteArgs>(args: SelectSubset<T, profileDeleteArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Profile.
     * @param {profileUpdateArgs} args - Arguments to update one Profile.
     * @example
     * // Update one Profile
     * const profile = await prisma.profile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends profileUpdateArgs>(args: SelectSubset<T, profileUpdateArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Profiles.
     * @param {profileDeleteManyArgs} args - Arguments to filter Profiles to delete.
     * @example
     * // Delete a few Profiles
     * const { count } = await prisma.profile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends profileDeleteManyArgs>(args?: SelectSubset<T, profileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Profiles
     * const profile = await prisma.profile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends profileUpdateManyArgs>(args: SelectSubset<T, profileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Profiles and returns the data updated in the database.
     * @param {profileUpdateManyAndReturnArgs} args - Arguments to update many Profiles.
     * @example
     * // Update many Profiles
     * const profile = await prisma.profile.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Profiles and only return the `id`
     * const profileWithIdOnly = await prisma.profile.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends profileUpdateManyAndReturnArgs>(args: SelectSubset<T, profileUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Profile.
     * @param {profileUpsertArgs} args - Arguments to update or create a Profile.
     * @example
     * // Update or create a Profile
     * const profile = await prisma.profile.upsert({
     *   create: {
     *     // ... data to create a Profile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Profile we want to update
     *   }
     * })
     */
    upsert<T extends profileUpsertArgs>(args: SelectSubset<T, profileUpsertArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profileCountArgs} args - Arguments to filter Profiles to count.
     * @example
     * // Count the number of Profiles
     * const count = await prisma.profile.count({
     *   where: {
     *     // ... the filter for the Profiles we want to count
     *   }
     * })
    **/
    count<T extends profileCountArgs>(
      args?: Subset<T, profileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProfileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProfileAggregateArgs>(args: Subset<T, ProfileAggregateArgs>): Prisma.PrismaPromise<GetProfileAggregateType<T>>

    /**
     * Group by Profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends profileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: profileGroupByArgs['orderBy'] }
        : { orderBy?: profileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, profileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProfileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the profile model
   */
  readonly fields: profileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for profile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__profileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    projects<T extends profile$projectsArgs<ExtArgs> = {}>(args?: Subset<T, profile$projectsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$projectPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    department<T extends profile$departmentArgs<ExtArgs> = {}>(args?: Subset<T, profile$departmentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$departmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    team_members<T extends profile$team_membersArgs<ExtArgs> = {}>(args?: Subset<T, profile$team_membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$team_memberPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the profile model
   */
  interface profileFieldRefs {
    readonly id: FieldRef<"profile", 'Int'>
    readonly created_date: FieldRef<"profile", 'DateTime'>
    readonly profile_name: FieldRef<"profile", 'String'>
    readonly order_amount: FieldRef<"profile", 'Decimal'>
    readonly bonus_amount: FieldRef<"profile", 'Decimal'>
    readonly order_count: FieldRef<"profile", 'Int'>
    readonly rank: FieldRef<"profile", 'Decimal'>
    readonly cancel_count: FieldRef<"profile", 'Int'>
    readonly complete_count: FieldRef<"profile", 'Int'>
    readonly no_rating: FieldRef<"profile", 'Int'>
    readonly profile_target: FieldRef<"profile", 'Decimal'>
    readonly department_id: FieldRef<"profile", 'Int'>
    readonly repeat_order: FieldRef<"profile", 'Decimal'>
    readonly keywords: FieldRef<"profile", 'String'>
    readonly total_rating: FieldRef<"profile", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * profile findUnique
   */
  export type profileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * Filter, which profile to fetch.
     */
    where: profileWhereUniqueInput
  }

  /**
   * profile findUniqueOrThrow
   */
  export type profileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * Filter, which profile to fetch.
     */
    where: profileWhereUniqueInput
  }

  /**
   * profile findFirst
   */
  export type profileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * Filter, which profile to fetch.
     */
    where?: profileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of profiles to fetch.
     */
    orderBy?: profileOrderByWithRelationInput | profileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for profiles.
     */
    cursor?: profileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of profiles.
     */
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * profile findFirstOrThrow
   */
  export type profileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * Filter, which profile to fetch.
     */
    where?: profileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of profiles to fetch.
     */
    orderBy?: profileOrderByWithRelationInput | profileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for profiles.
     */
    cursor?: profileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of profiles.
     */
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * profile findMany
   */
  export type profileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * Filter, which profiles to fetch.
     */
    where?: profileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of profiles to fetch.
     */
    orderBy?: profileOrderByWithRelationInput | profileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing profiles.
     */
    cursor?: profileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` profiles.
     */
    skip?: number
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * profile create
   */
  export type profileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * The data needed to create a profile.
     */
    data: XOR<profileCreateInput, profileUncheckedCreateInput>
  }

  /**
   * profile createMany
   */
  export type profileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many profiles.
     */
    data: profileCreateManyInput | profileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * profile createManyAndReturn
   */
  export type profileCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * The data used to create many profiles.
     */
    data: profileCreateManyInput | profileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * profile update
   */
  export type profileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * The data needed to update a profile.
     */
    data: XOR<profileUpdateInput, profileUncheckedUpdateInput>
    /**
     * Choose, which profile to update.
     */
    where: profileWhereUniqueInput
  }

  /**
   * profile updateMany
   */
  export type profileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update profiles.
     */
    data: XOR<profileUpdateManyMutationInput, profileUncheckedUpdateManyInput>
    /**
     * Filter which profiles to update
     */
    where?: profileWhereInput
    /**
     * Limit how many profiles to update.
     */
    limit?: number
  }

  /**
   * profile updateManyAndReturn
   */
  export type profileUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * The data used to update profiles.
     */
    data: XOR<profileUpdateManyMutationInput, profileUncheckedUpdateManyInput>
    /**
     * Filter which profiles to update
     */
    where?: profileWhereInput
    /**
     * Limit how many profiles to update.
     */
    limit?: number
  }

  /**
   * profile upsert
   */
  export type profileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * The filter to search for the profile to update in case it exists.
     */
    where: profileWhereUniqueInput
    /**
     * In case the profile found by the `where` argument doesn't exist, create a new profile with this data.
     */
    create: XOR<profileCreateInput, profileUncheckedCreateInput>
    /**
     * In case the profile was found with the provided `where` argument, update it with this data.
     */
    update: XOR<profileUpdateInput, profileUncheckedUpdateInput>
  }

  /**
   * profile delete
   */
  export type profileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * Filter which profile to delete.
     */
    where: profileWhereUniqueInput
  }

  /**
   * profile deleteMany
   */
  export type profileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which profiles to delete
     */
    where?: profileWhereInput
    /**
     * Limit how many profiles to delete.
     */
    limit?: number
  }

  /**
   * profile.projects
   */
  export type profile$projectsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project
     */
    select?: projectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project
     */
    omit?: projectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectInclude<ExtArgs> | null
    where?: projectWhereInput
    orderBy?: projectOrderByWithRelationInput | projectOrderByWithRelationInput[]
    cursor?: projectWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * profile.department
   */
  export type profile$departmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the department
     */
    select?: departmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the department
     */
    omit?: departmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: departmentInclude<ExtArgs> | null
    where?: departmentWhereInput
    orderBy?: departmentOrderByWithRelationInput | departmentOrderByWithRelationInput[]
    cursor?: departmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DepartmentScalarFieldEnum | DepartmentScalarFieldEnum[]
  }

  /**
   * profile.team_members
   */
  export type profile$team_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_member
     */
    select?: team_memberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_member
     */
    omit?: team_memberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_memberInclude<ExtArgs> | null
    where?: team_memberWhereInput
    orderBy?: team_memberOrderByWithRelationInput | team_memberOrderByWithRelationInput[]
    cursor?: team_memberWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Team_memberScalarFieldEnum | Team_memberScalarFieldEnum[]
  }

  /**
   * profile without action
   */
  export type profileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
  }


  /**
   * Model team_member
   */

  export type AggregateTeam_member = {
    _count: Team_memberCountAggregateOutputType | null
    _avg: Team_memberAvgAggregateOutputType | null
    _sum: Team_memberSumAggregateOutputType | null
    _min: Team_memberMinAggregateOutputType | null
    _max: Team_memberMaxAggregateOutputType | null
  }

  export type Team_memberAvgAggregateOutputType = {
    id: number | null
    team_id: number | null
    target: Decimal | null
    rating: Decimal | null
    rewards: Decimal | null
  }

  export type Team_memberSumAggregateOutputType = {
    id: number | null
    team_id: number | null
    target: Decimal | null
    rating: Decimal | null
    rewards: Decimal | null
  }

  export type Team_memberMinAggregateOutputType = {
    id: number | null
    first_name: string | null
    last_name: string | null
    email: string | null
    number: string | null
    permanent_address: string | null
    present_address: string | null
    gender: string | null
    blood_group: string | null
    relationship: string | null
    guardian_relation: string | null
    guardian_number: string | null
    guardian_address: string | null
    team_id: number | null
    religion: string | null
    education: string | null
    dp: string | null
    role: string | null
    target: Decimal | null
    rating: Decimal | null
    rewards: Decimal | null
    account_status: string | null
    password: string | null
    designation: string | null
    uid: string | null
  }

  export type Team_memberMaxAggregateOutputType = {
    id: number | null
    first_name: string | null
    last_name: string | null
    email: string | null
    number: string | null
    permanent_address: string | null
    present_address: string | null
    gender: string | null
    blood_group: string | null
    relationship: string | null
    guardian_relation: string | null
    guardian_number: string | null
    guardian_address: string | null
    team_id: number | null
    religion: string | null
    education: string | null
    dp: string | null
    role: string | null
    target: Decimal | null
    rating: Decimal | null
    rewards: Decimal | null
    account_status: string | null
    password: string | null
    designation: string | null
    uid: string | null
  }

  export type Team_memberCountAggregateOutputType = {
    id: number
    first_name: number
    last_name: number
    email: number
    number: number
    permanent_address: number
    present_address: number
    gender: number
    blood_group: number
    relationship: number
    guardian_relation: number
    guardian_number: number
    guardian_address: number
    team_id: number
    religion: number
    education: number
    dp: number
    role: number
    target: number
    rating: number
    rewards: number
    account_status: number
    password: number
    designation: number
    uid: number
    _all: number
  }


  export type Team_memberAvgAggregateInputType = {
    id?: true
    team_id?: true
    target?: true
    rating?: true
    rewards?: true
  }

  export type Team_memberSumAggregateInputType = {
    id?: true
    team_id?: true
    target?: true
    rating?: true
    rewards?: true
  }

  export type Team_memberMinAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    email?: true
    number?: true
    permanent_address?: true
    present_address?: true
    gender?: true
    blood_group?: true
    relationship?: true
    guardian_relation?: true
    guardian_number?: true
    guardian_address?: true
    team_id?: true
    religion?: true
    education?: true
    dp?: true
    role?: true
    target?: true
    rating?: true
    rewards?: true
    account_status?: true
    password?: true
    designation?: true
    uid?: true
  }

  export type Team_memberMaxAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    email?: true
    number?: true
    permanent_address?: true
    present_address?: true
    gender?: true
    blood_group?: true
    relationship?: true
    guardian_relation?: true
    guardian_number?: true
    guardian_address?: true
    team_id?: true
    religion?: true
    education?: true
    dp?: true
    role?: true
    target?: true
    rating?: true
    rewards?: true
    account_status?: true
    password?: true
    designation?: true
    uid?: true
  }

  export type Team_memberCountAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    email?: true
    number?: true
    permanent_address?: true
    present_address?: true
    gender?: true
    blood_group?: true
    relationship?: true
    guardian_relation?: true
    guardian_number?: true
    guardian_address?: true
    team_id?: true
    religion?: true
    education?: true
    dp?: true
    role?: true
    target?: true
    rating?: true
    rewards?: true
    account_status?: true
    password?: true
    designation?: true
    uid?: true
    _all?: true
  }

  export type Team_memberAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which team_member to aggregate.
     */
    where?: team_memberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of team_members to fetch.
     */
    orderBy?: team_memberOrderByWithRelationInput | team_memberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: team_memberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` team_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` team_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned team_members
    **/
    _count?: true | Team_memberCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Team_memberAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Team_memberSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Team_memberMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Team_memberMaxAggregateInputType
  }

  export type GetTeam_memberAggregateType<T extends Team_memberAggregateArgs> = {
        [P in keyof T & keyof AggregateTeam_member]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTeam_member[P]>
      : GetScalarType<T[P], AggregateTeam_member[P]>
  }




  export type team_memberGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: team_memberWhereInput
    orderBy?: team_memberOrderByWithAggregationInput | team_memberOrderByWithAggregationInput[]
    by: Team_memberScalarFieldEnum[] | Team_memberScalarFieldEnum
    having?: team_memberScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Team_memberCountAggregateInputType | true
    _avg?: Team_memberAvgAggregateInputType
    _sum?: Team_memberSumAggregateInputType
    _min?: Team_memberMinAggregateInputType
    _max?: Team_memberMaxAggregateInputType
  }

  export type Team_memberGroupByOutputType = {
    id: number
    first_name: string | null
    last_name: string | null
    email: string | null
    number: string | null
    permanent_address: string | null
    present_address: string | null
    gender: string | null
    blood_group: string | null
    relationship: string | null
    guardian_relation: string | null
    guardian_number: string | null
    guardian_address: string | null
    team_id: number | null
    religion: string | null
    education: string | null
    dp: string | null
    role: string | null
    target: Decimal | null
    rating: Decimal | null
    rewards: Decimal | null
    account_status: string | null
    password: string | null
    designation: string | null
    uid: string | null
    _count: Team_memberCountAggregateOutputType | null
    _avg: Team_memberAvgAggregateOutputType | null
    _sum: Team_memberSumAggregateOutputType | null
    _min: Team_memberMinAggregateOutputType | null
    _max: Team_memberMaxAggregateOutputType | null
  }

  type GetTeam_memberGroupByPayload<T extends team_memberGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Team_memberGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Team_memberGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Team_memberGroupByOutputType[P]>
            : GetScalarType<T[P], Team_memberGroupByOutputType[P]>
        }
      >
    >


  export type team_memberSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    number?: boolean
    permanent_address?: boolean
    present_address?: boolean
    gender?: boolean
    blood_group?: boolean
    relationship?: boolean
    guardian_relation?: boolean
    guardian_number?: boolean
    guardian_address?: boolean
    team_id?: boolean
    religion?: boolean
    education?: boolean
    dp?: boolean
    role?: boolean
    target?: boolean
    rating?: boolean
    rewards?: boolean
    account_status?: boolean
    password?: boolean
    designation?: boolean
    uid?: boolean
    member_distribution?: boolean | team_member$member_distributionArgs<ExtArgs>
    project?: boolean | team_member$projectArgs<ExtArgs>
    team?: boolean | team_member$teamArgs<ExtArgs>
    today_task?: boolean | team_member$today_taskArgs<ExtArgs>
    assigned_projects?: boolean | team_member$assigned_projectsArgs<ExtArgs>
    profile?: boolean | team_member$profileArgs<ExtArgs>
    _count?: boolean | Team_memberCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["team_member"]>

  export type team_memberSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    number?: boolean
    permanent_address?: boolean
    present_address?: boolean
    gender?: boolean
    blood_group?: boolean
    relationship?: boolean
    guardian_relation?: boolean
    guardian_number?: boolean
    guardian_address?: boolean
    team_id?: boolean
    religion?: boolean
    education?: boolean
    dp?: boolean
    role?: boolean
    target?: boolean
    rating?: boolean
    rewards?: boolean
    account_status?: boolean
    password?: boolean
    designation?: boolean
    uid?: boolean
    team?: boolean | team_member$teamArgs<ExtArgs>
  }, ExtArgs["result"]["team_member"]>

  export type team_memberSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    number?: boolean
    permanent_address?: boolean
    present_address?: boolean
    gender?: boolean
    blood_group?: boolean
    relationship?: boolean
    guardian_relation?: boolean
    guardian_number?: boolean
    guardian_address?: boolean
    team_id?: boolean
    religion?: boolean
    education?: boolean
    dp?: boolean
    role?: boolean
    target?: boolean
    rating?: boolean
    rewards?: boolean
    account_status?: boolean
    password?: boolean
    designation?: boolean
    uid?: boolean
    team?: boolean | team_member$teamArgs<ExtArgs>
  }, ExtArgs["result"]["team_member"]>

  export type team_memberSelectScalar = {
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    number?: boolean
    permanent_address?: boolean
    present_address?: boolean
    gender?: boolean
    blood_group?: boolean
    relationship?: boolean
    guardian_relation?: boolean
    guardian_number?: boolean
    guardian_address?: boolean
    team_id?: boolean
    religion?: boolean
    education?: boolean
    dp?: boolean
    role?: boolean
    target?: boolean
    rating?: boolean
    rewards?: boolean
    account_status?: boolean
    password?: boolean
    designation?: boolean
    uid?: boolean
  }

  export type team_memberOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "first_name" | "last_name" | "email" | "number" | "permanent_address" | "present_address" | "gender" | "blood_group" | "relationship" | "guardian_relation" | "guardian_number" | "guardian_address" | "team_id" | "religion" | "education" | "dp" | "role" | "target" | "rating" | "rewards" | "account_status" | "password" | "designation" | "uid", ExtArgs["result"]["team_member"]>
  export type team_memberInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    member_distribution?: boolean | team_member$member_distributionArgs<ExtArgs>
    project?: boolean | team_member$projectArgs<ExtArgs>
    team?: boolean | team_member$teamArgs<ExtArgs>
    today_task?: boolean | team_member$today_taskArgs<ExtArgs>
    assigned_projects?: boolean | team_member$assigned_projectsArgs<ExtArgs>
    profile?: boolean | team_member$profileArgs<ExtArgs>
    _count?: boolean | Team_memberCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type team_memberIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    team?: boolean | team_member$teamArgs<ExtArgs>
  }
  export type team_memberIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    team?: boolean | team_member$teamArgs<ExtArgs>
  }

  export type $team_memberPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "team_member"
    objects: {
      member_distribution: Prisma.$member_distributionPayload<ExtArgs>[]
      project: Prisma.$projectPayload<ExtArgs>[]
      team: Prisma.$teamPayload<ExtArgs> | null
      today_task: Prisma.$today_taskPayload<ExtArgs>[]
      assigned_projects: Prisma.$projectPayload<ExtArgs>[]
      profile: Prisma.$profilePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      first_name: string | null
      last_name: string | null
      email: string | null
      number: string | null
      permanent_address: string | null
      present_address: string | null
      gender: string | null
      blood_group: string | null
      relationship: string | null
      guardian_relation: string | null
      guardian_number: string | null
      guardian_address: string | null
      team_id: number | null
      religion: string | null
      education: string | null
      dp: string | null
      role: string | null
      target: Prisma.Decimal | null
      rating: Prisma.Decimal | null
      rewards: Prisma.Decimal | null
      account_status: string | null
      password: string | null
      designation: string | null
      uid: string | null
    }, ExtArgs["result"]["team_member"]>
    composites: {}
  }

  type team_memberGetPayload<S extends boolean | null | undefined | team_memberDefaultArgs> = $Result.GetResult<Prisma.$team_memberPayload, S>

  type team_memberCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<team_memberFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Team_memberCountAggregateInputType | true
    }

  export interface team_memberDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['team_member'], meta: { name: 'team_member' } }
    /**
     * Find zero or one Team_member that matches the filter.
     * @param {team_memberFindUniqueArgs} args - Arguments to find a Team_member
     * @example
     * // Get one Team_member
     * const team_member = await prisma.team_member.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends team_memberFindUniqueArgs>(args: SelectSubset<T, team_memberFindUniqueArgs<ExtArgs>>): Prisma__team_memberClient<$Result.GetResult<Prisma.$team_memberPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Team_member that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {team_memberFindUniqueOrThrowArgs} args - Arguments to find a Team_member
     * @example
     * // Get one Team_member
     * const team_member = await prisma.team_member.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends team_memberFindUniqueOrThrowArgs>(args: SelectSubset<T, team_memberFindUniqueOrThrowArgs<ExtArgs>>): Prisma__team_memberClient<$Result.GetResult<Prisma.$team_memberPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Team_member that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_memberFindFirstArgs} args - Arguments to find a Team_member
     * @example
     * // Get one Team_member
     * const team_member = await prisma.team_member.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends team_memberFindFirstArgs>(args?: SelectSubset<T, team_memberFindFirstArgs<ExtArgs>>): Prisma__team_memberClient<$Result.GetResult<Prisma.$team_memberPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Team_member that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_memberFindFirstOrThrowArgs} args - Arguments to find a Team_member
     * @example
     * // Get one Team_member
     * const team_member = await prisma.team_member.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends team_memberFindFirstOrThrowArgs>(args?: SelectSubset<T, team_memberFindFirstOrThrowArgs<ExtArgs>>): Prisma__team_memberClient<$Result.GetResult<Prisma.$team_memberPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Team_members that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_memberFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Team_members
     * const team_members = await prisma.team_member.findMany()
     * 
     * // Get first 10 Team_members
     * const team_members = await prisma.team_member.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const team_memberWithIdOnly = await prisma.team_member.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends team_memberFindManyArgs>(args?: SelectSubset<T, team_memberFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$team_memberPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Team_member.
     * @param {team_memberCreateArgs} args - Arguments to create a Team_member.
     * @example
     * // Create one Team_member
     * const Team_member = await prisma.team_member.create({
     *   data: {
     *     // ... data to create a Team_member
     *   }
     * })
     * 
     */
    create<T extends team_memberCreateArgs>(args: SelectSubset<T, team_memberCreateArgs<ExtArgs>>): Prisma__team_memberClient<$Result.GetResult<Prisma.$team_memberPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Team_members.
     * @param {team_memberCreateManyArgs} args - Arguments to create many Team_members.
     * @example
     * // Create many Team_members
     * const team_member = await prisma.team_member.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends team_memberCreateManyArgs>(args?: SelectSubset<T, team_memberCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Team_members and returns the data saved in the database.
     * @param {team_memberCreateManyAndReturnArgs} args - Arguments to create many Team_members.
     * @example
     * // Create many Team_members
     * const team_member = await prisma.team_member.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Team_members and only return the `id`
     * const team_memberWithIdOnly = await prisma.team_member.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends team_memberCreateManyAndReturnArgs>(args?: SelectSubset<T, team_memberCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$team_memberPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Team_member.
     * @param {team_memberDeleteArgs} args - Arguments to delete one Team_member.
     * @example
     * // Delete one Team_member
     * const Team_member = await prisma.team_member.delete({
     *   where: {
     *     // ... filter to delete one Team_member
     *   }
     * })
     * 
     */
    delete<T extends team_memberDeleteArgs>(args: SelectSubset<T, team_memberDeleteArgs<ExtArgs>>): Prisma__team_memberClient<$Result.GetResult<Prisma.$team_memberPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Team_member.
     * @param {team_memberUpdateArgs} args - Arguments to update one Team_member.
     * @example
     * // Update one Team_member
     * const team_member = await prisma.team_member.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends team_memberUpdateArgs>(args: SelectSubset<T, team_memberUpdateArgs<ExtArgs>>): Prisma__team_memberClient<$Result.GetResult<Prisma.$team_memberPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Team_members.
     * @param {team_memberDeleteManyArgs} args - Arguments to filter Team_members to delete.
     * @example
     * // Delete a few Team_members
     * const { count } = await prisma.team_member.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends team_memberDeleteManyArgs>(args?: SelectSubset<T, team_memberDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Team_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_memberUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Team_members
     * const team_member = await prisma.team_member.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends team_memberUpdateManyArgs>(args: SelectSubset<T, team_memberUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Team_members and returns the data updated in the database.
     * @param {team_memberUpdateManyAndReturnArgs} args - Arguments to update many Team_members.
     * @example
     * // Update many Team_members
     * const team_member = await prisma.team_member.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Team_members and only return the `id`
     * const team_memberWithIdOnly = await prisma.team_member.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends team_memberUpdateManyAndReturnArgs>(args: SelectSubset<T, team_memberUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$team_memberPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Team_member.
     * @param {team_memberUpsertArgs} args - Arguments to update or create a Team_member.
     * @example
     * // Update or create a Team_member
     * const team_member = await prisma.team_member.upsert({
     *   create: {
     *     // ... data to create a Team_member
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Team_member we want to update
     *   }
     * })
     */
    upsert<T extends team_memberUpsertArgs>(args: SelectSubset<T, team_memberUpsertArgs<ExtArgs>>): Prisma__team_memberClient<$Result.GetResult<Prisma.$team_memberPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Team_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_memberCountArgs} args - Arguments to filter Team_members to count.
     * @example
     * // Count the number of Team_members
     * const count = await prisma.team_member.count({
     *   where: {
     *     // ... the filter for the Team_members we want to count
     *   }
     * })
    **/
    count<T extends team_memberCountArgs>(
      args?: Subset<T, team_memberCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Team_memberCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Team_member.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Team_memberAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Team_memberAggregateArgs>(args: Subset<T, Team_memberAggregateArgs>): Prisma.PrismaPromise<GetTeam_memberAggregateType<T>>

    /**
     * Group by Team_member.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {team_memberGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends team_memberGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: team_memberGroupByArgs['orderBy'] }
        : { orderBy?: team_memberGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, team_memberGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTeam_memberGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the team_member model
   */
  readonly fields: team_memberFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for team_member.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__team_memberClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    member_distribution<T extends team_member$member_distributionArgs<ExtArgs> = {}>(args?: Subset<T, team_member$member_distributionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$member_distributionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    project<T extends team_member$projectArgs<ExtArgs> = {}>(args?: Subset<T, team_member$projectArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$projectPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    team<T extends team_member$teamArgs<ExtArgs> = {}>(args?: Subset<T, team_member$teamArgs<ExtArgs>>): Prisma__teamClient<$Result.GetResult<Prisma.$teamPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    today_task<T extends team_member$today_taskArgs<ExtArgs> = {}>(args?: Subset<T, team_member$today_taskArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$today_taskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    assigned_projects<T extends team_member$assigned_projectsArgs<ExtArgs> = {}>(args?: Subset<T, team_member$assigned_projectsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$projectPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    profile<T extends team_member$profileArgs<ExtArgs> = {}>(args?: Subset<T, team_member$profileArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the team_member model
   */
  interface team_memberFieldRefs {
    readonly id: FieldRef<"team_member", 'Int'>
    readonly first_name: FieldRef<"team_member", 'String'>
    readonly last_name: FieldRef<"team_member", 'String'>
    readonly email: FieldRef<"team_member", 'String'>
    readonly number: FieldRef<"team_member", 'String'>
    readonly permanent_address: FieldRef<"team_member", 'String'>
    readonly present_address: FieldRef<"team_member", 'String'>
    readonly gender: FieldRef<"team_member", 'String'>
    readonly blood_group: FieldRef<"team_member", 'String'>
    readonly relationship: FieldRef<"team_member", 'String'>
    readonly guardian_relation: FieldRef<"team_member", 'String'>
    readonly guardian_number: FieldRef<"team_member", 'String'>
    readonly guardian_address: FieldRef<"team_member", 'String'>
    readonly team_id: FieldRef<"team_member", 'Int'>
    readonly religion: FieldRef<"team_member", 'String'>
    readonly education: FieldRef<"team_member", 'String'>
    readonly dp: FieldRef<"team_member", 'String'>
    readonly role: FieldRef<"team_member", 'String'>
    readonly target: FieldRef<"team_member", 'Decimal'>
    readonly rating: FieldRef<"team_member", 'Decimal'>
    readonly rewards: FieldRef<"team_member", 'Decimal'>
    readonly account_status: FieldRef<"team_member", 'String'>
    readonly password: FieldRef<"team_member", 'String'>
    readonly designation: FieldRef<"team_member", 'String'>
    readonly uid: FieldRef<"team_member", 'String'>
  }
    

  // Custom InputTypes
  /**
   * team_member findUnique
   */
  export type team_memberFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_member
     */
    select?: team_memberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_member
     */
    omit?: team_memberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_memberInclude<ExtArgs> | null
    /**
     * Filter, which team_member to fetch.
     */
    where: team_memberWhereUniqueInput
  }

  /**
   * team_member findUniqueOrThrow
   */
  export type team_memberFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_member
     */
    select?: team_memberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_member
     */
    omit?: team_memberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_memberInclude<ExtArgs> | null
    /**
     * Filter, which team_member to fetch.
     */
    where: team_memberWhereUniqueInput
  }

  /**
   * team_member findFirst
   */
  export type team_memberFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_member
     */
    select?: team_memberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_member
     */
    omit?: team_memberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_memberInclude<ExtArgs> | null
    /**
     * Filter, which team_member to fetch.
     */
    where?: team_memberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of team_members to fetch.
     */
    orderBy?: team_memberOrderByWithRelationInput | team_memberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for team_members.
     */
    cursor?: team_memberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` team_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` team_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of team_members.
     */
    distinct?: Team_memberScalarFieldEnum | Team_memberScalarFieldEnum[]
  }

  /**
   * team_member findFirstOrThrow
   */
  export type team_memberFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_member
     */
    select?: team_memberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_member
     */
    omit?: team_memberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_memberInclude<ExtArgs> | null
    /**
     * Filter, which team_member to fetch.
     */
    where?: team_memberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of team_members to fetch.
     */
    orderBy?: team_memberOrderByWithRelationInput | team_memberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for team_members.
     */
    cursor?: team_memberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` team_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` team_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of team_members.
     */
    distinct?: Team_memberScalarFieldEnum | Team_memberScalarFieldEnum[]
  }

  /**
   * team_member findMany
   */
  export type team_memberFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_member
     */
    select?: team_memberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_member
     */
    omit?: team_memberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_memberInclude<ExtArgs> | null
    /**
     * Filter, which team_members to fetch.
     */
    where?: team_memberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of team_members to fetch.
     */
    orderBy?: team_memberOrderByWithRelationInput | team_memberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing team_members.
     */
    cursor?: team_memberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` team_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` team_members.
     */
    skip?: number
    distinct?: Team_memberScalarFieldEnum | Team_memberScalarFieldEnum[]
  }

  /**
   * team_member create
   */
  export type team_memberCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_member
     */
    select?: team_memberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_member
     */
    omit?: team_memberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_memberInclude<ExtArgs> | null
    /**
     * The data needed to create a team_member.
     */
    data?: XOR<team_memberCreateInput, team_memberUncheckedCreateInput>
  }

  /**
   * team_member createMany
   */
  export type team_memberCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many team_members.
     */
    data: team_memberCreateManyInput | team_memberCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * team_member createManyAndReturn
   */
  export type team_memberCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_member
     */
    select?: team_memberSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the team_member
     */
    omit?: team_memberOmit<ExtArgs> | null
    /**
     * The data used to create many team_members.
     */
    data: team_memberCreateManyInput | team_memberCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_memberIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * team_member update
   */
  export type team_memberUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_member
     */
    select?: team_memberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_member
     */
    omit?: team_memberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_memberInclude<ExtArgs> | null
    /**
     * The data needed to update a team_member.
     */
    data: XOR<team_memberUpdateInput, team_memberUncheckedUpdateInput>
    /**
     * Choose, which team_member to update.
     */
    where: team_memberWhereUniqueInput
  }

  /**
   * team_member updateMany
   */
  export type team_memberUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update team_members.
     */
    data: XOR<team_memberUpdateManyMutationInput, team_memberUncheckedUpdateManyInput>
    /**
     * Filter which team_members to update
     */
    where?: team_memberWhereInput
    /**
     * Limit how many team_members to update.
     */
    limit?: number
  }

  /**
   * team_member updateManyAndReturn
   */
  export type team_memberUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_member
     */
    select?: team_memberSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the team_member
     */
    omit?: team_memberOmit<ExtArgs> | null
    /**
     * The data used to update team_members.
     */
    data: XOR<team_memberUpdateManyMutationInput, team_memberUncheckedUpdateManyInput>
    /**
     * Filter which team_members to update
     */
    where?: team_memberWhereInput
    /**
     * Limit how many team_members to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_memberIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * team_member upsert
   */
  export type team_memberUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_member
     */
    select?: team_memberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_member
     */
    omit?: team_memberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_memberInclude<ExtArgs> | null
    /**
     * The filter to search for the team_member to update in case it exists.
     */
    where: team_memberWhereUniqueInput
    /**
     * In case the team_member found by the `where` argument doesn't exist, create a new team_member with this data.
     */
    create: XOR<team_memberCreateInput, team_memberUncheckedCreateInput>
    /**
     * In case the team_member was found with the provided `where` argument, update it with this data.
     */
    update: XOR<team_memberUpdateInput, team_memberUncheckedUpdateInput>
  }

  /**
   * team_member delete
   */
  export type team_memberDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_member
     */
    select?: team_memberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_member
     */
    omit?: team_memberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_memberInclude<ExtArgs> | null
    /**
     * Filter which team_member to delete.
     */
    where: team_memberWhereUniqueInput
  }

  /**
   * team_member deleteMany
   */
  export type team_memberDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which team_members to delete
     */
    where?: team_memberWhereInput
    /**
     * Limit how many team_members to delete.
     */
    limit?: number
  }

  /**
   * team_member.member_distribution
   */
  export type team_member$member_distributionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the member_distribution
     */
    select?: member_distributionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the member_distribution
     */
    omit?: member_distributionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: member_distributionInclude<ExtArgs> | null
    where?: member_distributionWhereInput
    orderBy?: member_distributionOrderByWithRelationInput | member_distributionOrderByWithRelationInput[]
    cursor?: member_distributionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Member_distributionScalarFieldEnum | Member_distributionScalarFieldEnum[]
  }

  /**
   * team_member.project
   */
  export type team_member$projectArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project
     */
    select?: projectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project
     */
    omit?: projectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectInclude<ExtArgs> | null
    where?: projectWhereInput
    orderBy?: projectOrderByWithRelationInput | projectOrderByWithRelationInput[]
    cursor?: projectWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * team_member.team
   */
  export type team_member$teamArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team
     */
    select?: teamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team
     */
    omit?: teamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamInclude<ExtArgs> | null
    where?: teamWhereInput
  }

  /**
   * team_member.today_task
   */
  export type team_member$today_taskArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the today_task
     */
    select?: today_taskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the today_task
     */
    omit?: today_taskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: today_taskInclude<ExtArgs> | null
    where?: today_taskWhereInput
    orderBy?: today_taskOrderByWithRelationInput | today_taskOrderByWithRelationInput[]
    cursor?: today_taskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Today_taskScalarFieldEnum | Today_taskScalarFieldEnum[]
  }

  /**
   * team_member.assigned_projects
   */
  export type team_member$assigned_projectsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the project
     */
    select?: projectSelect<ExtArgs> | null
    /**
     * Omit specific fields from the project
     */
    omit?: projectOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: projectInclude<ExtArgs> | null
    where?: projectWhereInput
    orderBy?: projectOrderByWithRelationInput | projectOrderByWithRelationInput[]
    cursor?: projectWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProjectScalarFieldEnum | ProjectScalarFieldEnum[]
  }

  /**
   * team_member.profile
   */
  export type team_member$profileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the profile
     */
    omit?: profileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    where?: profileWhereInput
    orderBy?: profileOrderByWithRelationInput | profileOrderByWithRelationInput[]
    cursor?: profileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * team_member without action
   */
  export type team_memberDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_member
     */
    select?: team_memberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_member
     */
    omit?: team_memberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_memberInclude<ExtArgs> | null
  }


  /**
   * Model member_distribution
   */

  export type AggregateMember_distribution = {
    _count: Member_distributionCountAggregateOutputType | null
    _avg: Member_distributionAvgAggregateOutputType | null
    _sum: Member_distributionSumAggregateOutputType | null
    _min: Member_distributionMinAggregateOutputType | null
    _max: Member_distributionMaxAggregateOutputType | null
  }

  export type Member_distributionAvgAggregateOutputType = {
    id: number | null
    team_member_id: number | null
    amount: Decimal | null
    project_id: number | null
  }

  export type Member_distributionSumAggregateOutputType = {
    id: number | null
    team_member_id: number | null
    amount: Decimal | null
    project_id: number | null
  }

  export type Member_distributionMinAggregateOutputType = {
    id: number | null
    team_member_id: number | null
    amount: Decimal | null
    project_id: number | null
  }

  export type Member_distributionMaxAggregateOutputType = {
    id: number | null
    team_member_id: number | null
    amount: Decimal | null
    project_id: number | null
  }

  export type Member_distributionCountAggregateOutputType = {
    id: number
    team_member_id: number
    amount: number
    project_id: number
    _all: number
  }


  export type Member_distributionAvgAggregateInputType = {
    id?: true
    team_member_id?: true
    amount?: true
    project_id?: true
  }

  export type Member_distributionSumAggregateInputType = {
    id?: true
    team_member_id?: true
    amount?: true
    project_id?: true
  }

  export type Member_distributionMinAggregateInputType = {
    id?: true
    team_member_id?: true
    amount?: true
    project_id?: true
  }

  export type Member_distributionMaxAggregateInputType = {
    id?: true
    team_member_id?: true
    amount?: true
    project_id?: true
  }

  export type Member_distributionCountAggregateInputType = {
    id?: true
    team_member_id?: true
    amount?: true
    project_id?: true
    _all?: true
  }

  export type Member_distributionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which member_distribution to aggregate.
     */
    where?: member_distributionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of member_distributions to fetch.
     */
    orderBy?: member_distributionOrderByWithRelationInput | member_distributionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: member_distributionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` member_distributions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` member_distributions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned member_distributions
    **/
    _count?: true | Member_distributionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Member_distributionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Member_distributionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Member_distributionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Member_distributionMaxAggregateInputType
  }

  export type GetMember_distributionAggregateType<T extends Member_distributionAggregateArgs> = {
        [P in keyof T & keyof AggregateMember_distribution]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMember_distribution[P]>
      : GetScalarType<T[P], AggregateMember_distribution[P]>
  }




  export type member_distributionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: member_distributionWhereInput
    orderBy?: member_distributionOrderByWithAggregationInput | member_distributionOrderByWithAggregationInput[]
    by: Member_distributionScalarFieldEnum[] | Member_distributionScalarFieldEnum
    having?: member_distributionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Member_distributionCountAggregateInputType | true
    _avg?: Member_distributionAvgAggregateInputType
    _sum?: Member_distributionSumAggregateInputType
    _min?: Member_distributionMinAggregateInputType
    _max?: Member_distributionMaxAggregateInputType
  }

  export type Member_distributionGroupByOutputType = {
    id: number
    team_member_id: number
    amount: Decimal | null
    project_id: number
    _count: Member_distributionCountAggregateOutputType | null
    _avg: Member_distributionAvgAggregateOutputType | null
    _sum: Member_distributionSumAggregateOutputType | null
    _min: Member_distributionMinAggregateOutputType | null
    _max: Member_distributionMaxAggregateOutputType | null
  }

  type GetMember_distributionGroupByPayload<T extends member_distributionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Member_distributionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Member_distributionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Member_distributionGroupByOutputType[P]>
            : GetScalarType<T[P], Member_distributionGroupByOutputType[P]>
        }
      >
    >


  export type member_distributionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    team_member_id?: boolean
    amount?: boolean
    project_id?: boolean
    team_member?: boolean | team_memberDefaultArgs<ExtArgs>
    project?: boolean | projectDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["member_distribution"]>

  export type member_distributionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    team_member_id?: boolean
    amount?: boolean
    project_id?: boolean
    team_member?: boolean | team_memberDefaultArgs<ExtArgs>
    project?: boolean | projectDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["member_distribution"]>

  export type member_distributionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    team_member_id?: boolean
    amount?: boolean
    project_id?: boolean
    team_member?: boolean | team_memberDefaultArgs<ExtArgs>
    project?: boolean | projectDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["member_distribution"]>

  export type member_distributionSelectScalar = {
    id?: boolean
    team_member_id?: boolean
    amount?: boolean
    project_id?: boolean
  }

  export type member_distributionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "team_member_id" | "amount" | "project_id", ExtArgs["result"]["member_distribution"]>
  export type member_distributionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    team_member?: boolean | team_memberDefaultArgs<ExtArgs>
    project?: boolean | projectDefaultArgs<ExtArgs>
  }
  export type member_distributionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    team_member?: boolean | team_memberDefaultArgs<ExtArgs>
    project?: boolean | projectDefaultArgs<ExtArgs>
  }
  export type member_distributionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    team_member?: boolean | team_memberDefaultArgs<ExtArgs>
    project?: boolean | projectDefaultArgs<ExtArgs>
  }

  export type $member_distributionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "member_distribution"
    objects: {
      team_member: Prisma.$team_memberPayload<ExtArgs>
      project: Prisma.$projectPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      team_member_id: number
      amount: Prisma.Decimal | null
      project_id: number
    }, ExtArgs["result"]["member_distribution"]>
    composites: {}
  }

  type member_distributionGetPayload<S extends boolean | null | undefined | member_distributionDefaultArgs> = $Result.GetResult<Prisma.$member_distributionPayload, S>

  type member_distributionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<member_distributionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Member_distributionCountAggregateInputType | true
    }

  export interface member_distributionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['member_distribution'], meta: { name: 'member_distribution' } }
    /**
     * Find zero or one Member_distribution that matches the filter.
     * @param {member_distributionFindUniqueArgs} args - Arguments to find a Member_distribution
     * @example
     * // Get one Member_distribution
     * const member_distribution = await prisma.member_distribution.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends member_distributionFindUniqueArgs>(args: SelectSubset<T, member_distributionFindUniqueArgs<ExtArgs>>): Prisma__member_distributionClient<$Result.GetResult<Prisma.$member_distributionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Member_distribution that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {member_distributionFindUniqueOrThrowArgs} args - Arguments to find a Member_distribution
     * @example
     * // Get one Member_distribution
     * const member_distribution = await prisma.member_distribution.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends member_distributionFindUniqueOrThrowArgs>(args: SelectSubset<T, member_distributionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__member_distributionClient<$Result.GetResult<Prisma.$member_distributionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Member_distribution that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {member_distributionFindFirstArgs} args - Arguments to find a Member_distribution
     * @example
     * // Get one Member_distribution
     * const member_distribution = await prisma.member_distribution.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends member_distributionFindFirstArgs>(args?: SelectSubset<T, member_distributionFindFirstArgs<ExtArgs>>): Prisma__member_distributionClient<$Result.GetResult<Prisma.$member_distributionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Member_distribution that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {member_distributionFindFirstOrThrowArgs} args - Arguments to find a Member_distribution
     * @example
     * // Get one Member_distribution
     * const member_distribution = await prisma.member_distribution.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends member_distributionFindFirstOrThrowArgs>(args?: SelectSubset<T, member_distributionFindFirstOrThrowArgs<ExtArgs>>): Prisma__member_distributionClient<$Result.GetResult<Prisma.$member_distributionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Member_distributions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {member_distributionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Member_distributions
     * const member_distributions = await prisma.member_distribution.findMany()
     * 
     * // Get first 10 Member_distributions
     * const member_distributions = await prisma.member_distribution.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const member_distributionWithIdOnly = await prisma.member_distribution.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends member_distributionFindManyArgs>(args?: SelectSubset<T, member_distributionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$member_distributionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Member_distribution.
     * @param {member_distributionCreateArgs} args - Arguments to create a Member_distribution.
     * @example
     * // Create one Member_distribution
     * const Member_distribution = await prisma.member_distribution.create({
     *   data: {
     *     // ... data to create a Member_distribution
     *   }
     * })
     * 
     */
    create<T extends member_distributionCreateArgs>(args: SelectSubset<T, member_distributionCreateArgs<ExtArgs>>): Prisma__member_distributionClient<$Result.GetResult<Prisma.$member_distributionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Member_distributions.
     * @param {member_distributionCreateManyArgs} args - Arguments to create many Member_distributions.
     * @example
     * // Create many Member_distributions
     * const member_distribution = await prisma.member_distribution.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends member_distributionCreateManyArgs>(args?: SelectSubset<T, member_distributionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Member_distributions and returns the data saved in the database.
     * @param {member_distributionCreateManyAndReturnArgs} args - Arguments to create many Member_distributions.
     * @example
     * // Create many Member_distributions
     * const member_distribution = await prisma.member_distribution.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Member_distributions and only return the `id`
     * const member_distributionWithIdOnly = await prisma.member_distribution.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends member_distributionCreateManyAndReturnArgs>(args?: SelectSubset<T, member_distributionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$member_distributionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Member_distribution.
     * @param {member_distributionDeleteArgs} args - Arguments to delete one Member_distribution.
     * @example
     * // Delete one Member_distribution
     * const Member_distribution = await prisma.member_distribution.delete({
     *   where: {
     *     // ... filter to delete one Member_distribution
     *   }
     * })
     * 
     */
    delete<T extends member_distributionDeleteArgs>(args: SelectSubset<T, member_distributionDeleteArgs<ExtArgs>>): Prisma__member_distributionClient<$Result.GetResult<Prisma.$member_distributionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Member_distribution.
     * @param {member_distributionUpdateArgs} args - Arguments to update one Member_distribution.
     * @example
     * // Update one Member_distribution
     * const member_distribution = await prisma.member_distribution.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends member_distributionUpdateArgs>(args: SelectSubset<T, member_distributionUpdateArgs<ExtArgs>>): Prisma__member_distributionClient<$Result.GetResult<Prisma.$member_distributionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Member_distributions.
     * @param {member_distributionDeleteManyArgs} args - Arguments to filter Member_distributions to delete.
     * @example
     * // Delete a few Member_distributions
     * const { count } = await prisma.member_distribution.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends member_distributionDeleteManyArgs>(args?: SelectSubset<T, member_distributionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Member_distributions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {member_distributionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Member_distributions
     * const member_distribution = await prisma.member_distribution.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends member_distributionUpdateManyArgs>(args: SelectSubset<T, member_distributionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Member_distributions and returns the data updated in the database.
     * @param {member_distributionUpdateManyAndReturnArgs} args - Arguments to update many Member_distributions.
     * @example
     * // Update many Member_distributions
     * const member_distribution = await prisma.member_distribution.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Member_distributions and only return the `id`
     * const member_distributionWithIdOnly = await prisma.member_distribution.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends member_distributionUpdateManyAndReturnArgs>(args: SelectSubset<T, member_distributionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$member_distributionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Member_distribution.
     * @param {member_distributionUpsertArgs} args - Arguments to update or create a Member_distribution.
     * @example
     * // Update or create a Member_distribution
     * const member_distribution = await prisma.member_distribution.upsert({
     *   create: {
     *     // ... data to create a Member_distribution
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Member_distribution we want to update
     *   }
     * })
     */
    upsert<T extends member_distributionUpsertArgs>(args: SelectSubset<T, member_distributionUpsertArgs<ExtArgs>>): Prisma__member_distributionClient<$Result.GetResult<Prisma.$member_distributionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Member_distributions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {member_distributionCountArgs} args - Arguments to filter Member_distributions to count.
     * @example
     * // Count the number of Member_distributions
     * const count = await prisma.member_distribution.count({
     *   where: {
     *     // ... the filter for the Member_distributions we want to count
     *   }
     * })
    **/
    count<T extends member_distributionCountArgs>(
      args?: Subset<T, member_distributionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Member_distributionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Member_distribution.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Member_distributionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Member_distributionAggregateArgs>(args: Subset<T, Member_distributionAggregateArgs>): Prisma.PrismaPromise<GetMember_distributionAggregateType<T>>

    /**
     * Group by Member_distribution.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {member_distributionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends member_distributionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: member_distributionGroupByArgs['orderBy'] }
        : { orderBy?: member_distributionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, member_distributionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMember_distributionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the member_distribution model
   */
  readonly fields: member_distributionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for member_distribution.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__member_distributionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    team_member<T extends team_memberDefaultArgs<ExtArgs> = {}>(args?: Subset<T, team_memberDefaultArgs<ExtArgs>>): Prisma__team_memberClient<$Result.GetResult<Prisma.$team_memberPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    project<T extends projectDefaultArgs<ExtArgs> = {}>(args?: Subset<T, projectDefaultArgs<ExtArgs>>): Prisma__projectClient<$Result.GetResult<Prisma.$projectPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the member_distribution model
   */
  interface member_distributionFieldRefs {
    readonly id: FieldRef<"member_distribution", 'Int'>
    readonly team_member_id: FieldRef<"member_distribution", 'Int'>
    readonly amount: FieldRef<"member_distribution", 'Decimal'>
    readonly project_id: FieldRef<"member_distribution", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * member_distribution findUnique
   */
  export type member_distributionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the member_distribution
     */
    select?: member_distributionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the member_distribution
     */
    omit?: member_distributionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: member_distributionInclude<ExtArgs> | null
    /**
     * Filter, which member_distribution to fetch.
     */
    where: member_distributionWhereUniqueInput
  }

  /**
   * member_distribution findUniqueOrThrow
   */
  export type member_distributionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the member_distribution
     */
    select?: member_distributionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the member_distribution
     */
    omit?: member_distributionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: member_distributionInclude<ExtArgs> | null
    /**
     * Filter, which member_distribution to fetch.
     */
    where: member_distributionWhereUniqueInput
  }

  /**
   * member_distribution findFirst
   */
  export type member_distributionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the member_distribution
     */
    select?: member_distributionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the member_distribution
     */
    omit?: member_distributionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: member_distributionInclude<ExtArgs> | null
    /**
     * Filter, which member_distribution to fetch.
     */
    where?: member_distributionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of member_distributions to fetch.
     */
    orderBy?: member_distributionOrderByWithRelationInput | member_distributionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for member_distributions.
     */
    cursor?: member_distributionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` member_distributions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` member_distributions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of member_distributions.
     */
    distinct?: Member_distributionScalarFieldEnum | Member_distributionScalarFieldEnum[]
  }

  /**
   * member_distribution findFirstOrThrow
   */
  export type member_distributionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the member_distribution
     */
    select?: member_distributionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the member_distribution
     */
    omit?: member_distributionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: member_distributionInclude<ExtArgs> | null
    /**
     * Filter, which member_distribution to fetch.
     */
    where?: member_distributionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of member_distributions to fetch.
     */
    orderBy?: member_distributionOrderByWithRelationInput | member_distributionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for member_distributions.
     */
    cursor?: member_distributionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` member_distributions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` member_distributions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of member_distributions.
     */
    distinct?: Member_distributionScalarFieldEnum | Member_distributionScalarFieldEnum[]
  }

  /**
   * member_distribution findMany
   */
  export type member_distributionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the member_distribution
     */
    select?: member_distributionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the member_distribution
     */
    omit?: member_distributionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: member_distributionInclude<ExtArgs> | null
    /**
     * Filter, which member_distributions to fetch.
     */
    where?: member_distributionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of member_distributions to fetch.
     */
    orderBy?: member_distributionOrderByWithRelationInput | member_distributionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing member_distributions.
     */
    cursor?: member_distributionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` member_distributions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` member_distributions.
     */
    skip?: number
    distinct?: Member_distributionScalarFieldEnum | Member_distributionScalarFieldEnum[]
  }

  /**
   * member_distribution create
   */
  export type member_distributionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the member_distribution
     */
    select?: member_distributionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the member_distribution
     */
    omit?: member_distributionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: member_distributionInclude<ExtArgs> | null
    /**
     * The data needed to create a member_distribution.
     */
    data: XOR<member_distributionCreateInput, member_distributionUncheckedCreateInput>
  }

  /**
   * member_distribution createMany
   */
  export type member_distributionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many member_distributions.
     */
    data: member_distributionCreateManyInput | member_distributionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * member_distribution createManyAndReturn
   */
  export type member_distributionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the member_distribution
     */
    select?: member_distributionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the member_distribution
     */
    omit?: member_distributionOmit<ExtArgs> | null
    /**
     * The data used to create many member_distributions.
     */
    data: member_distributionCreateManyInput | member_distributionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: member_distributionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * member_distribution update
   */
  export type member_distributionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the member_distribution
     */
    select?: member_distributionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the member_distribution
     */
    omit?: member_distributionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: member_distributionInclude<ExtArgs> | null
    /**
     * The data needed to update a member_distribution.
     */
    data: XOR<member_distributionUpdateInput, member_distributionUncheckedUpdateInput>
    /**
     * Choose, which member_distribution to update.
     */
    where: member_distributionWhereUniqueInput
  }

  /**
   * member_distribution updateMany
   */
  export type member_distributionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update member_distributions.
     */
    data: XOR<member_distributionUpdateManyMutationInput, member_distributionUncheckedUpdateManyInput>
    /**
     * Filter which member_distributions to update
     */
    where?: member_distributionWhereInput
    /**
     * Limit how many member_distributions to update.
     */
    limit?: number
  }

  /**
   * member_distribution updateManyAndReturn
   */
  export type member_distributionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the member_distribution
     */
    select?: member_distributionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the member_distribution
     */
    omit?: member_distributionOmit<ExtArgs> | null
    /**
     * The data used to update member_distributions.
     */
    data: XOR<member_distributionUpdateManyMutationInput, member_distributionUncheckedUpdateManyInput>
    /**
     * Filter which member_distributions to update
     */
    where?: member_distributionWhereInput
    /**
     * Limit how many member_distributions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: member_distributionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * member_distribution upsert
   */
  export type member_distributionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the member_distribution
     */
    select?: member_distributionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the member_distribution
     */
    omit?: member_distributionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: member_distributionInclude<ExtArgs> | null
    /**
     * The filter to search for the member_distribution to update in case it exists.
     */
    where: member_distributionWhereUniqueInput
    /**
     * In case the member_distribution found by the `where` argument doesn't exist, create a new member_distribution with this data.
     */
    create: XOR<member_distributionCreateInput, member_distributionUncheckedCreateInput>
    /**
     * In case the member_distribution was found with the provided `where` argument, update it with this data.
     */
    update: XOR<member_distributionUpdateInput, member_distributionUncheckedUpdateInput>
  }

  /**
   * member_distribution delete
   */
  export type member_distributionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the member_distribution
     */
    select?: member_distributionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the member_distribution
     */
    omit?: member_distributionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: member_distributionInclude<ExtArgs> | null
    /**
     * Filter which member_distribution to delete.
     */
    where: member_distributionWhereUniqueInput
  }

  /**
   * member_distribution deleteMany
   */
  export type member_distributionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which member_distributions to delete
     */
    where?: member_distributionWhereInput
    /**
     * Limit how many member_distributions to delete.
     */
    limit?: number
  }

  /**
   * member_distribution without action
   */
  export type member_distributionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the member_distribution
     */
    select?: member_distributionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the member_distribution
     */
    omit?: member_distributionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: member_distributionInclude<ExtArgs> | null
  }


  /**
   * Model revision
   */

  export type AggregateRevision = {
    _count: RevisionCountAggregateOutputType | null
    _avg: RevisionAvgAggregateOutputType | null
    _sum: RevisionSumAggregateOutputType | null
    _min: RevisionMinAggregateOutputType | null
    _max: RevisionMaxAggregateOutputType | null
  }

  export type RevisionAvgAggregateOutputType = {
    id: number | null
    project_id: number | null
  }

  export type RevisionSumAggregateOutputType = {
    id: number | null
    project_id: number | null
  }

  export type RevisionMinAggregateOutputType = {
    id: number | null
    project_id: number | null
    revision_date: Date | null
    revision_comments: string | null
    delivery_date: Date | null
    metting_link: string | null
    metting_date: Date | null
  }

  export type RevisionMaxAggregateOutputType = {
    id: number | null
    project_id: number | null
    revision_date: Date | null
    revision_comments: string | null
    delivery_date: Date | null
    metting_link: string | null
    metting_date: Date | null
  }

  export type RevisionCountAggregateOutputType = {
    id: number
    project_id: number
    revision_date: number
    revision_comments: number
    delivery_date: number
    metting_link: number
    metting_date: number
    _all: number
  }


  export type RevisionAvgAggregateInputType = {
    id?: true
    project_id?: true
  }

  export type RevisionSumAggregateInputType = {
    id?: true
    project_id?: true
  }

  export type RevisionMinAggregateInputType = {
    id?: true
    project_id?: true
    revision_date?: true
    revision_comments?: true
    delivery_date?: true
    metting_link?: true
    metting_date?: true
  }

  export type RevisionMaxAggregateInputType = {
    id?: true
    project_id?: true
    revision_date?: true
    revision_comments?: true
    delivery_date?: true
    metting_link?: true
    metting_date?: true
  }

  export type RevisionCountAggregateInputType = {
    id?: true
    project_id?: true
    revision_date?: true
    revision_comments?: true
    delivery_date?: true
    metting_link?: true
    metting_date?: true
    _all?: true
  }

  export type RevisionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which revision to aggregate.
     */
    where?: revisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of revisions to fetch.
     */
    orderBy?: revisionOrderByWithRelationInput | revisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: revisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` revisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` revisions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned revisions
    **/
    _count?: true | RevisionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RevisionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RevisionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RevisionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RevisionMaxAggregateInputType
  }

  export type GetRevisionAggregateType<T extends RevisionAggregateArgs> = {
        [P in keyof T & keyof AggregateRevision]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRevision[P]>
      : GetScalarType<T[P], AggregateRevision[P]>
  }




  export type revisionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: revisionWhereInput
    orderBy?: revisionOrderByWithAggregationInput | revisionOrderByWithAggregationInput[]
    by: RevisionScalarFieldEnum[] | RevisionScalarFieldEnum
    having?: revisionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RevisionCountAggregateInputType | true
    _avg?: RevisionAvgAggregateInputType
    _sum?: RevisionSumAggregateInputType
    _min?: RevisionMinAggregateInputType
    _max?: RevisionMaxAggregateInputType
  }

  export type RevisionGroupByOutputType = {
    id: number
    project_id: number
    revision_date: Date | null
    revision_comments: string | null
    delivery_date: Date | null
    metting_link: string | null
    metting_date: Date | null
    _count: RevisionCountAggregateOutputType | null
    _avg: RevisionAvgAggregateOutputType | null
    _sum: RevisionSumAggregateOutputType | null
    _min: RevisionMinAggregateOutputType | null
    _max: RevisionMaxAggregateOutputType | null
  }

  type GetRevisionGroupByPayload<T extends revisionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RevisionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RevisionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RevisionGroupByOutputType[P]>
            : GetScalarType<T[P], RevisionGroupByOutputType[P]>
        }
      >
    >


  export type revisionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    revision_date?: boolean
    revision_comments?: boolean
    delivery_date?: boolean
    metting_link?: boolean
    metting_date?: boolean
    team?: boolean | revision$teamArgs<ExtArgs>
    _count?: boolean | RevisionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["revision"]>

  export type revisionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    revision_date?: boolean
    revision_comments?: boolean
    delivery_date?: boolean
    metting_link?: boolean
    metting_date?: boolean
  }, ExtArgs["result"]["revision"]>

  export type revisionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    revision_date?: boolean
    revision_comments?: boolean
    delivery_date?: boolean
    metting_link?: boolean
    metting_date?: boolean
  }, ExtArgs["result"]["revision"]>

  export type revisionSelectScalar = {
    id?: boolean
    project_id?: boolean
    revision_date?: boolean
    revision_comments?: boolean
    delivery_date?: boolean
    metting_link?: boolean
    metting_date?: boolean
  }

  export type revisionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "project_id" | "revision_date" | "revision_comments" | "delivery_date" | "metting_link" | "metting_date", ExtArgs["result"]["revision"]>
  export type revisionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    team?: boolean | revision$teamArgs<ExtArgs>
    _count?: boolean | RevisionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type revisionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type revisionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $revisionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "revision"
    objects: {
      team: Prisma.$teamPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      project_id: number
      revision_date: Date | null
      revision_comments: string | null
      delivery_date: Date | null
      metting_link: string | null
      metting_date: Date | null
    }, ExtArgs["result"]["revision"]>
    composites: {}
  }

  type revisionGetPayload<S extends boolean | null | undefined | revisionDefaultArgs> = $Result.GetResult<Prisma.$revisionPayload, S>

  type revisionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<revisionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RevisionCountAggregateInputType | true
    }

  export interface revisionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['revision'], meta: { name: 'revision' } }
    /**
     * Find zero or one Revision that matches the filter.
     * @param {revisionFindUniqueArgs} args - Arguments to find a Revision
     * @example
     * // Get one Revision
     * const revision = await prisma.revision.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends revisionFindUniqueArgs>(args: SelectSubset<T, revisionFindUniqueArgs<ExtArgs>>): Prisma__revisionClient<$Result.GetResult<Prisma.$revisionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Revision that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {revisionFindUniqueOrThrowArgs} args - Arguments to find a Revision
     * @example
     * // Get one Revision
     * const revision = await prisma.revision.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends revisionFindUniqueOrThrowArgs>(args: SelectSubset<T, revisionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__revisionClient<$Result.GetResult<Prisma.$revisionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Revision that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {revisionFindFirstArgs} args - Arguments to find a Revision
     * @example
     * // Get one Revision
     * const revision = await prisma.revision.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends revisionFindFirstArgs>(args?: SelectSubset<T, revisionFindFirstArgs<ExtArgs>>): Prisma__revisionClient<$Result.GetResult<Prisma.$revisionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Revision that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {revisionFindFirstOrThrowArgs} args - Arguments to find a Revision
     * @example
     * // Get one Revision
     * const revision = await prisma.revision.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends revisionFindFirstOrThrowArgs>(args?: SelectSubset<T, revisionFindFirstOrThrowArgs<ExtArgs>>): Prisma__revisionClient<$Result.GetResult<Prisma.$revisionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Revisions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {revisionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Revisions
     * const revisions = await prisma.revision.findMany()
     * 
     * // Get first 10 Revisions
     * const revisions = await prisma.revision.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const revisionWithIdOnly = await prisma.revision.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends revisionFindManyArgs>(args?: SelectSubset<T, revisionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$revisionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Revision.
     * @param {revisionCreateArgs} args - Arguments to create a Revision.
     * @example
     * // Create one Revision
     * const Revision = await prisma.revision.create({
     *   data: {
     *     // ... data to create a Revision
     *   }
     * })
     * 
     */
    create<T extends revisionCreateArgs>(args: SelectSubset<T, revisionCreateArgs<ExtArgs>>): Prisma__revisionClient<$Result.GetResult<Prisma.$revisionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Revisions.
     * @param {revisionCreateManyArgs} args - Arguments to create many Revisions.
     * @example
     * // Create many Revisions
     * const revision = await prisma.revision.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends revisionCreateManyArgs>(args?: SelectSubset<T, revisionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Revisions and returns the data saved in the database.
     * @param {revisionCreateManyAndReturnArgs} args - Arguments to create many Revisions.
     * @example
     * // Create many Revisions
     * const revision = await prisma.revision.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Revisions and only return the `id`
     * const revisionWithIdOnly = await prisma.revision.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends revisionCreateManyAndReturnArgs>(args?: SelectSubset<T, revisionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$revisionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Revision.
     * @param {revisionDeleteArgs} args - Arguments to delete one Revision.
     * @example
     * // Delete one Revision
     * const Revision = await prisma.revision.delete({
     *   where: {
     *     // ... filter to delete one Revision
     *   }
     * })
     * 
     */
    delete<T extends revisionDeleteArgs>(args: SelectSubset<T, revisionDeleteArgs<ExtArgs>>): Prisma__revisionClient<$Result.GetResult<Prisma.$revisionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Revision.
     * @param {revisionUpdateArgs} args - Arguments to update one Revision.
     * @example
     * // Update one Revision
     * const revision = await prisma.revision.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends revisionUpdateArgs>(args: SelectSubset<T, revisionUpdateArgs<ExtArgs>>): Prisma__revisionClient<$Result.GetResult<Prisma.$revisionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Revisions.
     * @param {revisionDeleteManyArgs} args - Arguments to filter Revisions to delete.
     * @example
     * // Delete a few Revisions
     * const { count } = await prisma.revision.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends revisionDeleteManyArgs>(args?: SelectSubset<T, revisionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Revisions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {revisionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Revisions
     * const revision = await prisma.revision.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends revisionUpdateManyArgs>(args: SelectSubset<T, revisionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Revisions and returns the data updated in the database.
     * @param {revisionUpdateManyAndReturnArgs} args - Arguments to update many Revisions.
     * @example
     * // Update many Revisions
     * const revision = await prisma.revision.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Revisions and only return the `id`
     * const revisionWithIdOnly = await prisma.revision.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends revisionUpdateManyAndReturnArgs>(args: SelectSubset<T, revisionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$revisionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Revision.
     * @param {revisionUpsertArgs} args - Arguments to update or create a Revision.
     * @example
     * // Update or create a Revision
     * const revision = await prisma.revision.upsert({
     *   create: {
     *     // ... data to create a Revision
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Revision we want to update
     *   }
     * })
     */
    upsert<T extends revisionUpsertArgs>(args: SelectSubset<T, revisionUpsertArgs<ExtArgs>>): Prisma__revisionClient<$Result.GetResult<Prisma.$revisionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Revisions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {revisionCountArgs} args - Arguments to filter Revisions to count.
     * @example
     * // Count the number of Revisions
     * const count = await prisma.revision.count({
     *   where: {
     *     // ... the filter for the Revisions we want to count
     *   }
     * })
    **/
    count<T extends revisionCountArgs>(
      args?: Subset<T, revisionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RevisionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Revision.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RevisionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RevisionAggregateArgs>(args: Subset<T, RevisionAggregateArgs>): Prisma.PrismaPromise<GetRevisionAggregateType<T>>

    /**
     * Group by Revision.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {revisionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends revisionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: revisionGroupByArgs['orderBy'] }
        : { orderBy?: revisionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, revisionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRevisionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the revision model
   */
  readonly fields: revisionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for revision.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__revisionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    team<T extends revision$teamArgs<ExtArgs> = {}>(args?: Subset<T, revision$teamArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$teamPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the revision model
   */
  interface revisionFieldRefs {
    readonly id: FieldRef<"revision", 'Int'>
    readonly project_id: FieldRef<"revision", 'Int'>
    readonly revision_date: FieldRef<"revision", 'DateTime'>
    readonly revision_comments: FieldRef<"revision", 'String'>
    readonly delivery_date: FieldRef<"revision", 'DateTime'>
    readonly metting_link: FieldRef<"revision", 'String'>
    readonly metting_date: FieldRef<"revision", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * revision findUnique
   */
  export type revisionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revision
     */
    select?: revisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the revision
     */
    omit?: revisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: revisionInclude<ExtArgs> | null
    /**
     * Filter, which revision to fetch.
     */
    where: revisionWhereUniqueInput
  }

  /**
   * revision findUniqueOrThrow
   */
  export type revisionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revision
     */
    select?: revisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the revision
     */
    omit?: revisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: revisionInclude<ExtArgs> | null
    /**
     * Filter, which revision to fetch.
     */
    where: revisionWhereUniqueInput
  }

  /**
   * revision findFirst
   */
  export type revisionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revision
     */
    select?: revisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the revision
     */
    omit?: revisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: revisionInclude<ExtArgs> | null
    /**
     * Filter, which revision to fetch.
     */
    where?: revisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of revisions to fetch.
     */
    orderBy?: revisionOrderByWithRelationInput | revisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for revisions.
     */
    cursor?: revisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` revisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` revisions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of revisions.
     */
    distinct?: RevisionScalarFieldEnum | RevisionScalarFieldEnum[]
  }

  /**
   * revision findFirstOrThrow
   */
  export type revisionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revision
     */
    select?: revisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the revision
     */
    omit?: revisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: revisionInclude<ExtArgs> | null
    /**
     * Filter, which revision to fetch.
     */
    where?: revisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of revisions to fetch.
     */
    orderBy?: revisionOrderByWithRelationInput | revisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for revisions.
     */
    cursor?: revisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` revisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` revisions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of revisions.
     */
    distinct?: RevisionScalarFieldEnum | RevisionScalarFieldEnum[]
  }

  /**
   * revision findMany
   */
  export type revisionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revision
     */
    select?: revisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the revision
     */
    omit?: revisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: revisionInclude<ExtArgs> | null
    /**
     * Filter, which revisions to fetch.
     */
    where?: revisionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of revisions to fetch.
     */
    orderBy?: revisionOrderByWithRelationInput | revisionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing revisions.
     */
    cursor?: revisionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` revisions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` revisions.
     */
    skip?: number
    distinct?: RevisionScalarFieldEnum | RevisionScalarFieldEnum[]
  }

  /**
   * revision create
   */
  export type revisionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revision
     */
    select?: revisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the revision
     */
    omit?: revisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: revisionInclude<ExtArgs> | null
    /**
     * The data needed to create a revision.
     */
    data: XOR<revisionCreateInput, revisionUncheckedCreateInput>
  }

  /**
   * revision createMany
   */
  export type revisionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many revisions.
     */
    data: revisionCreateManyInput | revisionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * revision createManyAndReturn
   */
  export type revisionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revision
     */
    select?: revisionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the revision
     */
    omit?: revisionOmit<ExtArgs> | null
    /**
     * The data used to create many revisions.
     */
    data: revisionCreateManyInput | revisionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * revision update
   */
  export type revisionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revision
     */
    select?: revisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the revision
     */
    omit?: revisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: revisionInclude<ExtArgs> | null
    /**
     * The data needed to update a revision.
     */
    data: XOR<revisionUpdateInput, revisionUncheckedUpdateInput>
    /**
     * Choose, which revision to update.
     */
    where: revisionWhereUniqueInput
  }

  /**
   * revision updateMany
   */
  export type revisionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update revisions.
     */
    data: XOR<revisionUpdateManyMutationInput, revisionUncheckedUpdateManyInput>
    /**
     * Filter which revisions to update
     */
    where?: revisionWhereInput
    /**
     * Limit how many revisions to update.
     */
    limit?: number
  }

  /**
   * revision updateManyAndReturn
   */
  export type revisionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revision
     */
    select?: revisionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the revision
     */
    omit?: revisionOmit<ExtArgs> | null
    /**
     * The data used to update revisions.
     */
    data: XOR<revisionUpdateManyMutationInput, revisionUncheckedUpdateManyInput>
    /**
     * Filter which revisions to update
     */
    where?: revisionWhereInput
    /**
     * Limit how many revisions to update.
     */
    limit?: number
  }

  /**
   * revision upsert
   */
  export type revisionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revision
     */
    select?: revisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the revision
     */
    omit?: revisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: revisionInclude<ExtArgs> | null
    /**
     * The filter to search for the revision to update in case it exists.
     */
    where: revisionWhereUniqueInput
    /**
     * In case the revision found by the `where` argument doesn't exist, create a new revision with this data.
     */
    create: XOR<revisionCreateInput, revisionUncheckedCreateInput>
    /**
     * In case the revision was found with the provided `where` argument, update it with this data.
     */
    update: XOR<revisionUpdateInput, revisionUncheckedUpdateInput>
  }

  /**
   * revision delete
   */
  export type revisionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revision
     */
    select?: revisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the revision
     */
    omit?: revisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: revisionInclude<ExtArgs> | null
    /**
     * Filter which revision to delete.
     */
    where: revisionWhereUniqueInput
  }

  /**
   * revision deleteMany
   */
  export type revisionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which revisions to delete
     */
    where?: revisionWhereInput
    /**
     * Limit how many revisions to delete.
     */
    limit?: number
  }

  /**
   * revision.team
   */
  export type revision$teamArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team
     */
    select?: teamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team
     */
    omit?: teamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamInclude<ExtArgs> | null
    where?: teamWhereInput
    orderBy?: teamOrderByWithRelationInput | teamOrderByWithRelationInput[]
    cursor?: teamWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TeamScalarFieldEnum | TeamScalarFieldEnum[]
  }

  /**
   * revision without action
   */
  export type revisionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the revision
     */
    select?: revisionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the revision
     */
    omit?: revisionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: revisionInclude<ExtArgs> | null
  }


  /**
   * Model today_task
   */

  export type AggregateToday_task = {
    _count: Today_taskCountAggregateOutputType | null
    _avg: Today_taskAvgAggregateOutputType | null
    _sum: Today_taskSumAggregateOutputType | null
    _min: Today_taskMinAggregateOutputType | null
    _max: Today_taskMaxAggregateOutputType | null
  }

  export type Today_taskAvgAggregateOutputType = {
    id: number | null
    project_id: number | null
    team_id: number | null
    team_member_id: number | null
  }

  export type Today_taskSumAggregateOutputType = {
    id: number | null
    project_id: number | null
    team_id: number | null
    team_member_id: number | null
  }

  export type Today_taskMinAggregateOutputType = {
    id: number | null
    project_id: number | null
    client_name: string | null
    expected_finish_time: string | null
    team_id: number | null
    ops_status: string | null
    team_member_id: number | null
  }

  export type Today_taskMaxAggregateOutputType = {
    id: number | null
    project_id: number | null
    client_name: string | null
    expected_finish_time: string | null
    team_id: number | null
    ops_status: string | null
    team_member_id: number | null
  }

  export type Today_taskCountAggregateOutputType = {
    id: number
    project_id: number
    client_name: number
    expected_finish_time: number
    team_id: number
    ops_status: number
    team_member_id: number
    _all: number
  }


  export type Today_taskAvgAggregateInputType = {
    id?: true
    project_id?: true
    team_id?: true
    team_member_id?: true
  }

  export type Today_taskSumAggregateInputType = {
    id?: true
    project_id?: true
    team_id?: true
    team_member_id?: true
  }

  export type Today_taskMinAggregateInputType = {
    id?: true
    project_id?: true
    client_name?: true
    expected_finish_time?: true
    team_id?: true
    ops_status?: true
    team_member_id?: true
  }

  export type Today_taskMaxAggregateInputType = {
    id?: true
    project_id?: true
    client_name?: true
    expected_finish_time?: true
    team_id?: true
    ops_status?: true
    team_member_id?: true
  }

  export type Today_taskCountAggregateInputType = {
    id?: true
    project_id?: true
    client_name?: true
    expected_finish_time?: true
    team_id?: true
    ops_status?: true
    team_member_id?: true
    _all?: true
  }

  export type Today_taskAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which today_task to aggregate.
     */
    where?: today_taskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of today_tasks to fetch.
     */
    orderBy?: today_taskOrderByWithRelationInput | today_taskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: today_taskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` today_tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` today_tasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned today_tasks
    **/
    _count?: true | Today_taskCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Today_taskAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Today_taskSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Today_taskMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Today_taskMaxAggregateInputType
  }

  export type GetToday_taskAggregateType<T extends Today_taskAggregateArgs> = {
        [P in keyof T & keyof AggregateToday_task]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateToday_task[P]>
      : GetScalarType<T[P], AggregateToday_task[P]>
  }




  export type today_taskGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: today_taskWhereInput
    orderBy?: today_taskOrderByWithAggregationInput | today_taskOrderByWithAggregationInput[]
    by: Today_taskScalarFieldEnum[] | Today_taskScalarFieldEnum
    having?: today_taskScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Today_taskCountAggregateInputType | true
    _avg?: Today_taskAvgAggregateInputType
    _sum?: Today_taskSumAggregateInputType
    _min?: Today_taskMinAggregateInputType
    _max?: Today_taskMaxAggregateInputType
  }

  export type Today_taskGroupByOutputType = {
    id: number
    project_id: number
    client_name: string | null
    expected_finish_time: string | null
    team_id: number | null
    ops_status: string | null
    team_member_id: number | null
    _count: Today_taskCountAggregateOutputType | null
    _avg: Today_taskAvgAggregateOutputType | null
    _sum: Today_taskSumAggregateOutputType | null
    _min: Today_taskMinAggregateOutputType | null
    _max: Today_taskMaxAggregateOutputType | null
  }

  type GetToday_taskGroupByPayload<T extends today_taskGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Today_taskGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Today_taskGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Today_taskGroupByOutputType[P]>
            : GetScalarType<T[P], Today_taskGroupByOutputType[P]>
        }
      >
    >


  export type today_taskSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    client_name?: boolean
    expected_finish_time?: boolean
    team_id?: boolean
    ops_status?: boolean
    team_member_id?: boolean
    project?: boolean | projectDefaultArgs<ExtArgs>
    team?: boolean | today_task$teamArgs<ExtArgs>
    team_member?: boolean | today_task$team_memberArgs<ExtArgs>
  }, ExtArgs["result"]["today_task"]>

  export type today_taskSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    client_name?: boolean
    expected_finish_time?: boolean
    team_id?: boolean
    ops_status?: boolean
    team_member_id?: boolean
    project?: boolean | projectDefaultArgs<ExtArgs>
    team?: boolean | today_task$teamArgs<ExtArgs>
    team_member?: boolean | today_task$team_memberArgs<ExtArgs>
  }, ExtArgs["result"]["today_task"]>

  export type today_taskSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    project_id?: boolean
    client_name?: boolean
    expected_finish_time?: boolean
    team_id?: boolean
    ops_status?: boolean
    team_member_id?: boolean
    project?: boolean | projectDefaultArgs<ExtArgs>
    team?: boolean | today_task$teamArgs<ExtArgs>
    team_member?: boolean | today_task$team_memberArgs<ExtArgs>
  }, ExtArgs["result"]["today_task"]>

  export type today_taskSelectScalar = {
    id?: boolean
    project_id?: boolean
    client_name?: boolean
    expected_finish_time?: boolean
    team_id?: boolean
    ops_status?: boolean
    team_member_id?: boolean
  }

  export type today_taskOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "project_id" | "client_name" | "expected_finish_time" | "team_id" | "ops_status" | "team_member_id", ExtArgs["result"]["today_task"]>
  export type today_taskInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project?: boolean | projectDefaultArgs<ExtArgs>
    team?: boolean | today_task$teamArgs<ExtArgs>
    team_member?: boolean | today_task$team_memberArgs<ExtArgs>
  }
  export type today_taskIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project?: boolean | projectDefaultArgs<ExtArgs>
    team?: boolean | today_task$teamArgs<ExtArgs>
    team_member?: boolean | today_task$team_memberArgs<ExtArgs>
  }
  export type today_taskIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    project?: boolean | projectDefaultArgs<ExtArgs>
    team?: boolean | today_task$teamArgs<ExtArgs>
    team_member?: boolean | today_task$team_memberArgs<ExtArgs>
  }

  export type $today_taskPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "today_task"
    objects: {
      project: Prisma.$projectPayload<ExtArgs>
      team: Prisma.$teamPayload<ExtArgs> | null
      team_member: Prisma.$team_memberPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      project_id: number
      client_name: string | null
      expected_finish_time: string | null
      team_id: number | null
      ops_status: string | null
      team_member_id: number | null
    }, ExtArgs["result"]["today_task"]>
    composites: {}
  }

  type today_taskGetPayload<S extends boolean | null | undefined | today_taskDefaultArgs> = $Result.GetResult<Prisma.$today_taskPayload, S>

  type today_taskCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<today_taskFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Today_taskCountAggregateInputType | true
    }

  export interface today_taskDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['today_task'], meta: { name: 'today_task' } }
    /**
     * Find zero or one Today_task that matches the filter.
     * @param {today_taskFindUniqueArgs} args - Arguments to find a Today_task
     * @example
     * // Get one Today_task
     * const today_task = await prisma.today_task.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends today_taskFindUniqueArgs>(args: SelectSubset<T, today_taskFindUniqueArgs<ExtArgs>>): Prisma__today_taskClient<$Result.GetResult<Prisma.$today_taskPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Today_task that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {today_taskFindUniqueOrThrowArgs} args - Arguments to find a Today_task
     * @example
     * // Get one Today_task
     * const today_task = await prisma.today_task.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends today_taskFindUniqueOrThrowArgs>(args: SelectSubset<T, today_taskFindUniqueOrThrowArgs<ExtArgs>>): Prisma__today_taskClient<$Result.GetResult<Prisma.$today_taskPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Today_task that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {today_taskFindFirstArgs} args - Arguments to find a Today_task
     * @example
     * // Get one Today_task
     * const today_task = await prisma.today_task.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends today_taskFindFirstArgs>(args?: SelectSubset<T, today_taskFindFirstArgs<ExtArgs>>): Prisma__today_taskClient<$Result.GetResult<Prisma.$today_taskPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Today_task that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {today_taskFindFirstOrThrowArgs} args - Arguments to find a Today_task
     * @example
     * // Get one Today_task
     * const today_task = await prisma.today_task.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends today_taskFindFirstOrThrowArgs>(args?: SelectSubset<T, today_taskFindFirstOrThrowArgs<ExtArgs>>): Prisma__today_taskClient<$Result.GetResult<Prisma.$today_taskPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Today_tasks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {today_taskFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Today_tasks
     * const today_tasks = await prisma.today_task.findMany()
     * 
     * // Get first 10 Today_tasks
     * const today_tasks = await prisma.today_task.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const today_taskWithIdOnly = await prisma.today_task.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends today_taskFindManyArgs>(args?: SelectSubset<T, today_taskFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$today_taskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Today_task.
     * @param {today_taskCreateArgs} args - Arguments to create a Today_task.
     * @example
     * // Create one Today_task
     * const Today_task = await prisma.today_task.create({
     *   data: {
     *     // ... data to create a Today_task
     *   }
     * })
     * 
     */
    create<T extends today_taskCreateArgs>(args: SelectSubset<T, today_taskCreateArgs<ExtArgs>>): Prisma__today_taskClient<$Result.GetResult<Prisma.$today_taskPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Today_tasks.
     * @param {today_taskCreateManyArgs} args - Arguments to create many Today_tasks.
     * @example
     * // Create many Today_tasks
     * const today_task = await prisma.today_task.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends today_taskCreateManyArgs>(args?: SelectSubset<T, today_taskCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Today_tasks and returns the data saved in the database.
     * @param {today_taskCreateManyAndReturnArgs} args - Arguments to create many Today_tasks.
     * @example
     * // Create many Today_tasks
     * const today_task = await prisma.today_task.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Today_tasks and only return the `id`
     * const today_taskWithIdOnly = await prisma.today_task.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends today_taskCreateManyAndReturnArgs>(args?: SelectSubset<T, today_taskCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$today_taskPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Today_task.
     * @param {today_taskDeleteArgs} args - Arguments to delete one Today_task.
     * @example
     * // Delete one Today_task
     * const Today_task = await prisma.today_task.delete({
     *   where: {
     *     // ... filter to delete one Today_task
     *   }
     * })
     * 
     */
    delete<T extends today_taskDeleteArgs>(args: SelectSubset<T, today_taskDeleteArgs<ExtArgs>>): Prisma__today_taskClient<$Result.GetResult<Prisma.$today_taskPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Today_task.
     * @param {today_taskUpdateArgs} args - Arguments to update one Today_task.
     * @example
     * // Update one Today_task
     * const today_task = await prisma.today_task.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends today_taskUpdateArgs>(args: SelectSubset<T, today_taskUpdateArgs<ExtArgs>>): Prisma__today_taskClient<$Result.GetResult<Prisma.$today_taskPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Today_tasks.
     * @param {today_taskDeleteManyArgs} args - Arguments to filter Today_tasks to delete.
     * @example
     * // Delete a few Today_tasks
     * const { count } = await prisma.today_task.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends today_taskDeleteManyArgs>(args?: SelectSubset<T, today_taskDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Today_tasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {today_taskUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Today_tasks
     * const today_task = await prisma.today_task.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends today_taskUpdateManyArgs>(args: SelectSubset<T, today_taskUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Today_tasks and returns the data updated in the database.
     * @param {today_taskUpdateManyAndReturnArgs} args - Arguments to update many Today_tasks.
     * @example
     * // Update many Today_tasks
     * const today_task = await prisma.today_task.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Today_tasks and only return the `id`
     * const today_taskWithIdOnly = await prisma.today_task.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends today_taskUpdateManyAndReturnArgs>(args: SelectSubset<T, today_taskUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$today_taskPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Today_task.
     * @param {today_taskUpsertArgs} args - Arguments to update or create a Today_task.
     * @example
     * // Update or create a Today_task
     * const today_task = await prisma.today_task.upsert({
     *   create: {
     *     // ... data to create a Today_task
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Today_task we want to update
     *   }
     * })
     */
    upsert<T extends today_taskUpsertArgs>(args: SelectSubset<T, today_taskUpsertArgs<ExtArgs>>): Prisma__today_taskClient<$Result.GetResult<Prisma.$today_taskPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Today_tasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {today_taskCountArgs} args - Arguments to filter Today_tasks to count.
     * @example
     * // Count the number of Today_tasks
     * const count = await prisma.today_task.count({
     *   where: {
     *     // ... the filter for the Today_tasks we want to count
     *   }
     * })
    **/
    count<T extends today_taskCountArgs>(
      args?: Subset<T, today_taskCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Today_taskCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Today_task.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Today_taskAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Today_taskAggregateArgs>(args: Subset<T, Today_taskAggregateArgs>): Prisma.PrismaPromise<GetToday_taskAggregateType<T>>

    /**
     * Group by Today_task.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {today_taskGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends today_taskGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: today_taskGroupByArgs['orderBy'] }
        : { orderBy?: today_taskGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, today_taskGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetToday_taskGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the today_task model
   */
  readonly fields: today_taskFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for today_task.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__today_taskClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    project<T extends projectDefaultArgs<ExtArgs> = {}>(args?: Subset<T, projectDefaultArgs<ExtArgs>>): Prisma__projectClient<$Result.GetResult<Prisma.$projectPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    team<T extends today_task$teamArgs<ExtArgs> = {}>(args?: Subset<T, today_task$teamArgs<ExtArgs>>): Prisma__teamClient<$Result.GetResult<Prisma.$teamPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    team_member<T extends today_task$team_memberArgs<ExtArgs> = {}>(args?: Subset<T, today_task$team_memberArgs<ExtArgs>>): Prisma__team_memberClient<$Result.GetResult<Prisma.$team_memberPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the today_task model
   */
  interface today_taskFieldRefs {
    readonly id: FieldRef<"today_task", 'Int'>
    readonly project_id: FieldRef<"today_task", 'Int'>
    readonly client_name: FieldRef<"today_task", 'String'>
    readonly expected_finish_time: FieldRef<"today_task", 'String'>
    readonly team_id: FieldRef<"today_task", 'Int'>
    readonly ops_status: FieldRef<"today_task", 'String'>
    readonly team_member_id: FieldRef<"today_task", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * today_task findUnique
   */
  export type today_taskFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the today_task
     */
    select?: today_taskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the today_task
     */
    omit?: today_taskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: today_taskInclude<ExtArgs> | null
    /**
     * Filter, which today_task to fetch.
     */
    where: today_taskWhereUniqueInput
  }

  /**
   * today_task findUniqueOrThrow
   */
  export type today_taskFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the today_task
     */
    select?: today_taskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the today_task
     */
    omit?: today_taskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: today_taskInclude<ExtArgs> | null
    /**
     * Filter, which today_task to fetch.
     */
    where: today_taskWhereUniqueInput
  }

  /**
   * today_task findFirst
   */
  export type today_taskFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the today_task
     */
    select?: today_taskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the today_task
     */
    omit?: today_taskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: today_taskInclude<ExtArgs> | null
    /**
     * Filter, which today_task to fetch.
     */
    where?: today_taskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of today_tasks to fetch.
     */
    orderBy?: today_taskOrderByWithRelationInput | today_taskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for today_tasks.
     */
    cursor?: today_taskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` today_tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` today_tasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of today_tasks.
     */
    distinct?: Today_taskScalarFieldEnum | Today_taskScalarFieldEnum[]
  }

  /**
   * today_task findFirstOrThrow
   */
  export type today_taskFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the today_task
     */
    select?: today_taskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the today_task
     */
    omit?: today_taskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: today_taskInclude<ExtArgs> | null
    /**
     * Filter, which today_task to fetch.
     */
    where?: today_taskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of today_tasks to fetch.
     */
    orderBy?: today_taskOrderByWithRelationInput | today_taskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for today_tasks.
     */
    cursor?: today_taskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` today_tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` today_tasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of today_tasks.
     */
    distinct?: Today_taskScalarFieldEnum | Today_taskScalarFieldEnum[]
  }

  /**
   * today_task findMany
   */
  export type today_taskFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the today_task
     */
    select?: today_taskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the today_task
     */
    omit?: today_taskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: today_taskInclude<ExtArgs> | null
    /**
     * Filter, which today_tasks to fetch.
     */
    where?: today_taskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of today_tasks to fetch.
     */
    orderBy?: today_taskOrderByWithRelationInput | today_taskOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing today_tasks.
     */
    cursor?: today_taskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` today_tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` today_tasks.
     */
    skip?: number
    distinct?: Today_taskScalarFieldEnum | Today_taskScalarFieldEnum[]
  }

  /**
   * today_task create
   */
  export type today_taskCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the today_task
     */
    select?: today_taskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the today_task
     */
    omit?: today_taskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: today_taskInclude<ExtArgs> | null
    /**
     * The data needed to create a today_task.
     */
    data: XOR<today_taskCreateInput, today_taskUncheckedCreateInput>
  }

  /**
   * today_task createMany
   */
  export type today_taskCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many today_tasks.
     */
    data: today_taskCreateManyInput | today_taskCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * today_task createManyAndReturn
   */
  export type today_taskCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the today_task
     */
    select?: today_taskSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the today_task
     */
    omit?: today_taskOmit<ExtArgs> | null
    /**
     * The data used to create many today_tasks.
     */
    data: today_taskCreateManyInput | today_taskCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: today_taskIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * today_task update
   */
  export type today_taskUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the today_task
     */
    select?: today_taskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the today_task
     */
    omit?: today_taskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: today_taskInclude<ExtArgs> | null
    /**
     * The data needed to update a today_task.
     */
    data: XOR<today_taskUpdateInput, today_taskUncheckedUpdateInput>
    /**
     * Choose, which today_task to update.
     */
    where: today_taskWhereUniqueInput
  }

  /**
   * today_task updateMany
   */
  export type today_taskUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update today_tasks.
     */
    data: XOR<today_taskUpdateManyMutationInput, today_taskUncheckedUpdateManyInput>
    /**
     * Filter which today_tasks to update
     */
    where?: today_taskWhereInput
    /**
     * Limit how many today_tasks to update.
     */
    limit?: number
  }

  /**
   * today_task updateManyAndReturn
   */
  export type today_taskUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the today_task
     */
    select?: today_taskSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the today_task
     */
    omit?: today_taskOmit<ExtArgs> | null
    /**
     * The data used to update today_tasks.
     */
    data: XOR<today_taskUpdateManyMutationInput, today_taskUncheckedUpdateManyInput>
    /**
     * Filter which today_tasks to update
     */
    where?: today_taskWhereInput
    /**
     * Limit how many today_tasks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: today_taskIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * today_task upsert
   */
  export type today_taskUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the today_task
     */
    select?: today_taskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the today_task
     */
    omit?: today_taskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: today_taskInclude<ExtArgs> | null
    /**
     * The filter to search for the today_task to update in case it exists.
     */
    where: today_taskWhereUniqueInput
    /**
     * In case the today_task found by the `where` argument doesn't exist, create a new today_task with this data.
     */
    create: XOR<today_taskCreateInput, today_taskUncheckedCreateInput>
    /**
     * In case the today_task was found with the provided `where` argument, update it with this data.
     */
    update: XOR<today_taskUpdateInput, today_taskUncheckedUpdateInput>
  }

  /**
   * today_task delete
   */
  export type today_taskDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the today_task
     */
    select?: today_taskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the today_task
     */
    omit?: today_taskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: today_taskInclude<ExtArgs> | null
    /**
     * Filter which today_task to delete.
     */
    where: today_taskWhereUniqueInput
  }

  /**
   * today_task deleteMany
   */
  export type today_taskDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which today_tasks to delete
     */
    where?: today_taskWhereInput
    /**
     * Limit how many today_tasks to delete.
     */
    limit?: number
  }

  /**
   * today_task.team
   */
  export type today_task$teamArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team
     */
    select?: teamSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team
     */
    omit?: teamOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: teamInclude<ExtArgs> | null
    where?: teamWhereInput
  }

  /**
   * today_task.team_member
   */
  export type today_task$team_memberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the team_member
     */
    select?: team_memberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the team_member
     */
    omit?: team_memberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: team_memberInclude<ExtArgs> | null
    where?: team_memberWhereInput
  }

  /**
   * today_task without action
   */
  export type today_taskDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the today_task
     */
    select?: today_taskSelect<ExtArgs> | null
    /**
     * Omit specific fields from the today_task
     */
    omit?: today_taskOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: today_taskInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ProjectScalarFieldEnum: {
    id: 'id',
    order_id: 'order_id',
    date: 'date',
    project_name: 'project_name',
    ops_status: 'ops_status',
    sales_comments: 'sales_comments',
    opsleader_comments: 'opsleader_comments',
    sheet_link: 'sheet_link',
    ordered_by: 'ordered_by',
    deli_last_date: 'deli_last_date',
    status: 'status',
    order_amount: 'order_amount',
    after_fiverr_amount: 'after_fiverr_amount',
    bonus: 'bonus',
    after_Fiverr_bonus: 'after_Fiverr_bonus',
    rating: 'rating',
    department_id: 'department_id',
    project_requirements: 'project_requirements',
    profile_id: 'profile_id',
    team_id: 'team_id',
    Assigned_date: 'Assigned_date',
    extension: 'extension',
    is_delivered: 'is_delivered',
    revision: 'revision',
    delivery_date: 'delivery_date',
    update_at: 'update_at'
  };

  export type ProjectScalarFieldEnum = (typeof ProjectScalarFieldEnum)[keyof typeof ProjectScalarFieldEnum]


  export const TeamScalarFieldEnum: {
    id: 'id',
    team_name: 'team_name',
    department_id: 'department_id',
    team_achieve: 'team_achieve',
    team_cancel: 'team_cancel',
    total_carry: 'total_carry',
    team_target: 'team_target'
  };

  export type TeamScalarFieldEnum = (typeof TeamScalarFieldEnum)[keyof typeof TeamScalarFieldEnum]


  export const DepartmentScalarFieldEnum: {
    id: 'id',
    department_name: 'department_name',
    department_target: 'department_target',
    department_achieve: 'department_achieve',
    department_cancel: 'department_cancel',
    department_special_order: 'department_special_order',
    department_designation: 'department_designation',
    project_requirements: 'project_requirements',
    total_carry: 'total_carry'
  };

  export type DepartmentScalarFieldEnum = (typeof DepartmentScalarFieldEnum)[keyof typeof DepartmentScalarFieldEnum]


  export const ProfileScalarFieldEnum: {
    id: 'id',
    created_date: 'created_date',
    profile_name: 'profile_name',
    order_amount: 'order_amount',
    bonus_amount: 'bonus_amount',
    order_count: 'order_count',
    rank: 'rank',
    cancel_count: 'cancel_count',
    complete_count: 'complete_count',
    no_rating: 'no_rating',
    profile_target: 'profile_target',
    department_id: 'department_id',
    repeat_order: 'repeat_order',
    keywords: 'keywords',
    total_rating: 'total_rating'
  };

  export type ProfileScalarFieldEnum = (typeof ProfileScalarFieldEnum)[keyof typeof ProfileScalarFieldEnum]


  export const Team_memberScalarFieldEnum: {
    id: 'id',
    first_name: 'first_name',
    last_name: 'last_name',
    email: 'email',
    number: 'number',
    permanent_address: 'permanent_address',
    present_address: 'present_address',
    gender: 'gender',
    blood_group: 'blood_group',
    relationship: 'relationship',
    guardian_relation: 'guardian_relation',
    guardian_number: 'guardian_number',
    guardian_address: 'guardian_address',
    team_id: 'team_id',
    religion: 'religion',
    education: 'education',
    dp: 'dp',
    role: 'role',
    target: 'target',
    rating: 'rating',
    rewards: 'rewards',
    account_status: 'account_status',
    password: 'password',
    designation: 'designation',
    uid: 'uid'
  };

  export type Team_memberScalarFieldEnum = (typeof Team_memberScalarFieldEnum)[keyof typeof Team_memberScalarFieldEnum]


  export const Member_distributionScalarFieldEnum: {
    id: 'id',
    team_member_id: 'team_member_id',
    amount: 'amount',
    project_id: 'project_id'
  };

  export type Member_distributionScalarFieldEnum = (typeof Member_distributionScalarFieldEnum)[keyof typeof Member_distributionScalarFieldEnum]


  export const RevisionScalarFieldEnum: {
    id: 'id',
    project_id: 'project_id',
    revision_date: 'revision_date',
    revision_comments: 'revision_comments',
    delivery_date: 'delivery_date',
    metting_link: 'metting_link',
    metting_date: 'metting_date'
  };

  export type RevisionScalarFieldEnum = (typeof RevisionScalarFieldEnum)[keyof typeof RevisionScalarFieldEnum]


  export const Today_taskScalarFieldEnum: {
    id: 'id',
    project_id: 'project_id',
    client_name: 'client_name',
    expected_finish_time: 'expected_finish_time',
    team_id: 'team_id',
    ops_status: 'ops_status',
    team_member_id: 'team_member_id'
  };

  export type Today_taskScalarFieldEnum = (typeof Today_taskScalarFieldEnum)[keyof typeof Today_taskScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type projectWhereInput = {
    AND?: projectWhereInput | projectWhereInput[]
    OR?: projectWhereInput[]
    NOT?: projectWhereInput | projectWhereInput[]
    id?: IntFilter<"project"> | number
    order_id?: StringNullableFilter<"project"> | string | null
    date?: DateTimeNullableFilter<"project"> | Date | string | null
    project_name?: StringNullableFilter<"project"> | string | null
    ops_status?: StringNullableFilter<"project"> | string | null
    sales_comments?: StringNullableFilter<"project"> | string | null
    opsleader_comments?: StringNullableFilter<"project"> | string | null
    sheet_link?: StringNullableFilter<"project"> | string | null
    ordered_by?: IntFilter<"project"> | number
    deli_last_date?: DateTimeNullableFilter<"project"> | Date | string | null
    status?: StringNullableFilter<"project"> | string | null
    order_amount?: DecimalNullableFilter<"project"> | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: DecimalNullableFilter<"project"> | Decimal | DecimalJsLike | number | string | null
    bonus?: DecimalNullableFilter<"project"> | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: DecimalNullableFilter<"project"> | Decimal | DecimalJsLike | number | string | null
    rating?: IntNullableFilter<"project"> | number | null
    department_id?: IntFilter<"project"> | number
    project_requirements?: StringNullableFilter<"project"> | string | null
    profile_id?: IntNullableFilter<"project"> | number | null
    team_id?: IntNullableFilter<"project"> | number | null
    Assigned_date?: DateTimeNullableFilter<"project"> | Date | string | null
    extension?: IntNullableFilter<"project"> | number | null
    is_delivered?: BoolNullableFilter<"project"> | boolean | null
    revision?: IntNullableFilter<"project"> | number | null
    delivery_date?: DateTimeNullableFilter<"project"> | Date | string | null
    update_at?: DateTimeNullableFilter<"project"> | Date | string | null
    department?: XOR<DepartmentScalarRelationFilter, departmentWhereInput>
    team_member?: XOR<Team_memberScalarRelationFilter, team_memberWhereInput>
    profile?: XOR<ProfileNullableScalarRelationFilter, profileWhereInput> | null
    team?: XOR<TeamNullableScalarRelationFilter, teamWhereInput> | null
    today_task?: Today_taskListRelationFilter
    team_members?: Team_memberListRelationFilter
    member_distribution?: Member_distributionListRelationFilter
  }

  export type projectOrderByWithRelationInput = {
    id?: SortOrder
    order_id?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    project_name?: SortOrderInput | SortOrder
    ops_status?: SortOrderInput | SortOrder
    sales_comments?: SortOrderInput | SortOrder
    opsleader_comments?: SortOrderInput | SortOrder
    sheet_link?: SortOrderInput | SortOrder
    ordered_by?: SortOrder
    deli_last_date?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    order_amount?: SortOrderInput | SortOrder
    after_fiverr_amount?: SortOrderInput | SortOrder
    bonus?: SortOrderInput | SortOrder
    after_Fiverr_bonus?: SortOrderInput | SortOrder
    rating?: SortOrderInput | SortOrder
    department_id?: SortOrder
    project_requirements?: SortOrderInput | SortOrder
    profile_id?: SortOrderInput | SortOrder
    team_id?: SortOrderInput | SortOrder
    Assigned_date?: SortOrderInput | SortOrder
    extension?: SortOrderInput | SortOrder
    is_delivered?: SortOrderInput | SortOrder
    revision?: SortOrderInput | SortOrder
    delivery_date?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    department?: departmentOrderByWithRelationInput
    team_member?: team_memberOrderByWithRelationInput
    profile?: profileOrderByWithRelationInput
    team?: teamOrderByWithRelationInput
    today_task?: today_taskOrderByRelationAggregateInput
    team_members?: team_memberOrderByRelationAggregateInput
    member_distribution?: member_distributionOrderByRelationAggregateInput
  }

  export type projectWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    project_name?: string
    AND?: projectWhereInput | projectWhereInput[]
    OR?: projectWhereInput[]
    NOT?: projectWhereInput | projectWhereInput[]
    order_id?: StringNullableFilter<"project"> | string | null
    date?: DateTimeNullableFilter<"project"> | Date | string | null
    ops_status?: StringNullableFilter<"project"> | string | null
    sales_comments?: StringNullableFilter<"project"> | string | null
    opsleader_comments?: StringNullableFilter<"project"> | string | null
    sheet_link?: StringNullableFilter<"project"> | string | null
    ordered_by?: IntFilter<"project"> | number
    deli_last_date?: DateTimeNullableFilter<"project"> | Date | string | null
    status?: StringNullableFilter<"project"> | string | null
    order_amount?: DecimalNullableFilter<"project"> | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: DecimalNullableFilter<"project"> | Decimal | DecimalJsLike | number | string | null
    bonus?: DecimalNullableFilter<"project"> | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: DecimalNullableFilter<"project"> | Decimal | DecimalJsLike | number | string | null
    rating?: IntNullableFilter<"project"> | number | null
    department_id?: IntFilter<"project"> | number
    project_requirements?: StringNullableFilter<"project"> | string | null
    profile_id?: IntNullableFilter<"project"> | number | null
    team_id?: IntNullableFilter<"project"> | number | null
    Assigned_date?: DateTimeNullableFilter<"project"> | Date | string | null
    extension?: IntNullableFilter<"project"> | number | null
    is_delivered?: BoolNullableFilter<"project"> | boolean | null
    revision?: IntNullableFilter<"project"> | number | null
    delivery_date?: DateTimeNullableFilter<"project"> | Date | string | null
    update_at?: DateTimeNullableFilter<"project"> | Date | string | null
    department?: XOR<DepartmentScalarRelationFilter, departmentWhereInput>
    team_member?: XOR<Team_memberScalarRelationFilter, team_memberWhereInput>
    profile?: XOR<ProfileNullableScalarRelationFilter, profileWhereInput> | null
    team?: XOR<TeamNullableScalarRelationFilter, teamWhereInput> | null
    today_task?: Today_taskListRelationFilter
    team_members?: Team_memberListRelationFilter
    member_distribution?: Member_distributionListRelationFilter
  }, "id" | "project_name">

  export type projectOrderByWithAggregationInput = {
    id?: SortOrder
    order_id?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    project_name?: SortOrderInput | SortOrder
    ops_status?: SortOrderInput | SortOrder
    sales_comments?: SortOrderInput | SortOrder
    opsleader_comments?: SortOrderInput | SortOrder
    sheet_link?: SortOrderInput | SortOrder
    ordered_by?: SortOrder
    deli_last_date?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    order_amount?: SortOrderInput | SortOrder
    after_fiverr_amount?: SortOrderInput | SortOrder
    bonus?: SortOrderInput | SortOrder
    after_Fiverr_bonus?: SortOrderInput | SortOrder
    rating?: SortOrderInput | SortOrder
    department_id?: SortOrder
    project_requirements?: SortOrderInput | SortOrder
    profile_id?: SortOrderInput | SortOrder
    team_id?: SortOrderInput | SortOrder
    Assigned_date?: SortOrderInput | SortOrder
    extension?: SortOrderInput | SortOrder
    is_delivered?: SortOrderInput | SortOrder
    revision?: SortOrderInput | SortOrder
    delivery_date?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    _count?: projectCountOrderByAggregateInput
    _avg?: projectAvgOrderByAggregateInput
    _max?: projectMaxOrderByAggregateInput
    _min?: projectMinOrderByAggregateInput
    _sum?: projectSumOrderByAggregateInput
  }

  export type projectScalarWhereWithAggregatesInput = {
    AND?: projectScalarWhereWithAggregatesInput | projectScalarWhereWithAggregatesInput[]
    OR?: projectScalarWhereWithAggregatesInput[]
    NOT?: projectScalarWhereWithAggregatesInput | projectScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"project"> | number
    order_id?: StringNullableWithAggregatesFilter<"project"> | string | null
    date?: DateTimeNullableWithAggregatesFilter<"project"> | Date | string | null
    project_name?: StringNullableWithAggregatesFilter<"project"> | string | null
    ops_status?: StringNullableWithAggregatesFilter<"project"> | string | null
    sales_comments?: StringNullableWithAggregatesFilter<"project"> | string | null
    opsleader_comments?: StringNullableWithAggregatesFilter<"project"> | string | null
    sheet_link?: StringNullableWithAggregatesFilter<"project"> | string | null
    ordered_by?: IntWithAggregatesFilter<"project"> | number
    deli_last_date?: DateTimeNullableWithAggregatesFilter<"project"> | Date | string | null
    status?: StringNullableWithAggregatesFilter<"project"> | string | null
    order_amount?: DecimalNullableWithAggregatesFilter<"project"> | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: DecimalNullableWithAggregatesFilter<"project"> | Decimal | DecimalJsLike | number | string | null
    bonus?: DecimalNullableWithAggregatesFilter<"project"> | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: DecimalNullableWithAggregatesFilter<"project"> | Decimal | DecimalJsLike | number | string | null
    rating?: IntNullableWithAggregatesFilter<"project"> | number | null
    department_id?: IntWithAggregatesFilter<"project"> | number
    project_requirements?: StringNullableWithAggregatesFilter<"project"> | string | null
    profile_id?: IntNullableWithAggregatesFilter<"project"> | number | null
    team_id?: IntNullableWithAggregatesFilter<"project"> | number | null
    Assigned_date?: DateTimeNullableWithAggregatesFilter<"project"> | Date | string | null
    extension?: IntNullableWithAggregatesFilter<"project"> | number | null
    is_delivered?: BoolNullableWithAggregatesFilter<"project"> | boolean | null
    revision?: IntNullableWithAggregatesFilter<"project"> | number | null
    delivery_date?: DateTimeNullableWithAggregatesFilter<"project"> | Date | string | null
    update_at?: DateTimeNullableWithAggregatesFilter<"project"> | Date | string | null
  }

  export type teamWhereInput = {
    AND?: teamWhereInput | teamWhereInput[]
    OR?: teamWhereInput[]
    NOT?: teamWhereInput | teamWhereInput[]
    id?: IntFilter<"team"> | number
    team_name?: StringNullableFilter<"team"> | string | null
    department_id?: IntFilter<"team"> | number
    team_achieve?: DecimalNullableFilter<"team"> | Decimal | DecimalJsLike | number | string | null
    team_cancel?: IntNullableFilter<"team"> | number | null
    total_carry?: DecimalNullableFilter<"team"> | Decimal | DecimalJsLike | number | string | null
    team_target?: DecimalNullableFilter<"team"> | Decimal | DecimalJsLike | number | string | null
    project?: ProjectListRelationFilter
    department?: XOR<DepartmentScalarRelationFilter, departmentWhereInput>
    team_member?: Team_memberListRelationFilter
    today_task?: Today_taskListRelationFilter
    revision?: RevisionListRelationFilter
  }

  export type teamOrderByWithRelationInput = {
    id?: SortOrder
    team_name?: SortOrderInput | SortOrder
    department_id?: SortOrder
    team_achieve?: SortOrderInput | SortOrder
    team_cancel?: SortOrderInput | SortOrder
    total_carry?: SortOrderInput | SortOrder
    team_target?: SortOrderInput | SortOrder
    project?: projectOrderByRelationAggregateInput
    department?: departmentOrderByWithRelationInput
    team_member?: team_memberOrderByRelationAggregateInput
    today_task?: today_taskOrderByRelationAggregateInput
    revision?: revisionOrderByRelationAggregateInput
  }

  export type teamWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    team_name?: string
    AND?: teamWhereInput | teamWhereInput[]
    OR?: teamWhereInput[]
    NOT?: teamWhereInput | teamWhereInput[]
    department_id?: IntFilter<"team"> | number
    team_achieve?: DecimalNullableFilter<"team"> | Decimal | DecimalJsLike | number | string | null
    team_cancel?: IntNullableFilter<"team"> | number | null
    total_carry?: DecimalNullableFilter<"team"> | Decimal | DecimalJsLike | number | string | null
    team_target?: DecimalNullableFilter<"team"> | Decimal | DecimalJsLike | number | string | null
    project?: ProjectListRelationFilter
    department?: XOR<DepartmentScalarRelationFilter, departmentWhereInput>
    team_member?: Team_memberListRelationFilter
    today_task?: Today_taskListRelationFilter
    revision?: RevisionListRelationFilter
  }, "id" | "team_name">

  export type teamOrderByWithAggregationInput = {
    id?: SortOrder
    team_name?: SortOrderInput | SortOrder
    department_id?: SortOrder
    team_achieve?: SortOrderInput | SortOrder
    team_cancel?: SortOrderInput | SortOrder
    total_carry?: SortOrderInput | SortOrder
    team_target?: SortOrderInput | SortOrder
    _count?: teamCountOrderByAggregateInput
    _avg?: teamAvgOrderByAggregateInput
    _max?: teamMaxOrderByAggregateInput
    _min?: teamMinOrderByAggregateInput
    _sum?: teamSumOrderByAggregateInput
  }

  export type teamScalarWhereWithAggregatesInput = {
    AND?: teamScalarWhereWithAggregatesInput | teamScalarWhereWithAggregatesInput[]
    OR?: teamScalarWhereWithAggregatesInput[]
    NOT?: teamScalarWhereWithAggregatesInput | teamScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"team"> | number
    team_name?: StringNullableWithAggregatesFilter<"team"> | string | null
    department_id?: IntWithAggregatesFilter<"team"> | number
    team_achieve?: DecimalNullableWithAggregatesFilter<"team"> | Decimal | DecimalJsLike | number | string | null
    team_cancel?: IntNullableWithAggregatesFilter<"team"> | number | null
    total_carry?: DecimalNullableWithAggregatesFilter<"team"> | Decimal | DecimalJsLike | number | string | null
    team_target?: DecimalNullableWithAggregatesFilter<"team"> | Decimal | DecimalJsLike | number | string | null
  }

  export type departmentWhereInput = {
    AND?: departmentWhereInput | departmentWhereInput[]
    OR?: departmentWhereInput[]
    NOT?: departmentWhereInput | departmentWhereInput[]
    id?: IntFilter<"department"> | number
    department_name?: StringNullableFilter<"department"> | string | null
    department_target?: DecimalNullableFilter<"department"> | Decimal | DecimalJsLike | number | string | null
    department_achieve?: DecimalNullableFilter<"department"> | Decimal | DecimalJsLike | number | string | null
    department_cancel?: DecimalNullableFilter<"department"> | Decimal | DecimalJsLike | number | string | null
    department_special_order?: DecimalNullableFilter<"department"> | Decimal | DecimalJsLike | number | string | null
    department_designation?: StringNullableFilter<"department"> | string | null
    project_requirements?: StringNullableFilter<"department"> | string | null
    total_carry?: DecimalNullableFilter<"department"> | Decimal | DecimalJsLike | number | string | null
    assign_project?: ProjectListRelationFilter
    department_teams?: TeamListRelationFilter
    department_profile?: ProfileListRelationFilter
  }

  export type departmentOrderByWithRelationInput = {
    id?: SortOrder
    department_name?: SortOrderInput | SortOrder
    department_target?: SortOrderInput | SortOrder
    department_achieve?: SortOrderInput | SortOrder
    department_cancel?: SortOrderInput | SortOrder
    department_special_order?: SortOrderInput | SortOrder
    department_designation?: SortOrderInput | SortOrder
    project_requirements?: SortOrderInput | SortOrder
    total_carry?: SortOrderInput | SortOrder
    assign_project?: projectOrderByRelationAggregateInput
    department_teams?: teamOrderByRelationAggregateInput
    department_profile?: profileOrderByRelationAggregateInput
  }

  export type departmentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    department_name?: string
    AND?: departmentWhereInput | departmentWhereInput[]
    OR?: departmentWhereInput[]
    NOT?: departmentWhereInput | departmentWhereInput[]
    department_target?: DecimalNullableFilter<"department"> | Decimal | DecimalJsLike | number | string | null
    department_achieve?: DecimalNullableFilter<"department"> | Decimal | DecimalJsLike | number | string | null
    department_cancel?: DecimalNullableFilter<"department"> | Decimal | DecimalJsLike | number | string | null
    department_special_order?: DecimalNullableFilter<"department"> | Decimal | DecimalJsLike | number | string | null
    department_designation?: StringNullableFilter<"department"> | string | null
    project_requirements?: StringNullableFilter<"department"> | string | null
    total_carry?: DecimalNullableFilter<"department"> | Decimal | DecimalJsLike | number | string | null
    assign_project?: ProjectListRelationFilter
    department_teams?: TeamListRelationFilter
    department_profile?: ProfileListRelationFilter
  }, "id" | "department_name">

  export type departmentOrderByWithAggregationInput = {
    id?: SortOrder
    department_name?: SortOrderInput | SortOrder
    department_target?: SortOrderInput | SortOrder
    department_achieve?: SortOrderInput | SortOrder
    department_cancel?: SortOrderInput | SortOrder
    department_special_order?: SortOrderInput | SortOrder
    department_designation?: SortOrderInput | SortOrder
    project_requirements?: SortOrderInput | SortOrder
    total_carry?: SortOrderInput | SortOrder
    _count?: departmentCountOrderByAggregateInput
    _avg?: departmentAvgOrderByAggregateInput
    _max?: departmentMaxOrderByAggregateInput
    _min?: departmentMinOrderByAggregateInput
    _sum?: departmentSumOrderByAggregateInput
  }

  export type departmentScalarWhereWithAggregatesInput = {
    AND?: departmentScalarWhereWithAggregatesInput | departmentScalarWhereWithAggregatesInput[]
    OR?: departmentScalarWhereWithAggregatesInput[]
    NOT?: departmentScalarWhereWithAggregatesInput | departmentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"department"> | number
    department_name?: StringNullableWithAggregatesFilter<"department"> | string | null
    department_target?: DecimalNullableWithAggregatesFilter<"department"> | Decimal | DecimalJsLike | number | string | null
    department_achieve?: DecimalNullableWithAggregatesFilter<"department"> | Decimal | DecimalJsLike | number | string | null
    department_cancel?: DecimalNullableWithAggregatesFilter<"department"> | Decimal | DecimalJsLike | number | string | null
    department_special_order?: DecimalNullableWithAggregatesFilter<"department"> | Decimal | DecimalJsLike | number | string | null
    department_designation?: StringNullableWithAggregatesFilter<"department"> | string | null
    project_requirements?: StringNullableWithAggregatesFilter<"department"> | string | null
    total_carry?: DecimalNullableWithAggregatesFilter<"department"> | Decimal | DecimalJsLike | number | string | null
  }

  export type profileWhereInput = {
    AND?: profileWhereInput | profileWhereInput[]
    OR?: profileWhereInput[]
    NOT?: profileWhereInput | profileWhereInput[]
    id?: IntFilter<"profile"> | number
    created_date?: DateTimeNullableFilter<"profile"> | Date | string | null
    profile_name?: StringNullableFilter<"profile"> | string | null
    order_amount?: DecimalNullableFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    bonus_amount?: DecimalNullableFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    order_count?: IntNullableFilter<"profile"> | number | null
    rank?: DecimalNullableFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    cancel_count?: IntNullableFilter<"profile"> | number | null
    complete_count?: IntNullableFilter<"profile"> | number | null
    no_rating?: IntNullableFilter<"profile"> | number | null
    profile_target?: DecimalNullableFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    department_id?: IntFilter<"profile"> | number
    repeat_order?: DecimalNullableFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    keywords?: StringNullableFilter<"profile"> | string | null
    total_rating?: DecimalNullableFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    projects?: ProjectListRelationFilter
    department?: DepartmentListRelationFilter
    team_members?: Team_memberListRelationFilter
  }

  export type profileOrderByWithRelationInput = {
    id?: SortOrder
    created_date?: SortOrderInput | SortOrder
    profile_name?: SortOrderInput | SortOrder
    order_amount?: SortOrderInput | SortOrder
    bonus_amount?: SortOrderInput | SortOrder
    order_count?: SortOrderInput | SortOrder
    rank?: SortOrderInput | SortOrder
    cancel_count?: SortOrderInput | SortOrder
    complete_count?: SortOrderInput | SortOrder
    no_rating?: SortOrderInput | SortOrder
    profile_target?: SortOrderInput | SortOrder
    department_id?: SortOrder
    repeat_order?: SortOrderInput | SortOrder
    keywords?: SortOrderInput | SortOrder
    total_rating?: SortOrderInput | SortOrder
    projects?: projectOrderByRelationAggregateInput
    department?: departmentOrderByRelationAggregateInput
    team_members?: team_memberOrderByRelationAggregateInput
  }

  export type profileWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    profile_name?: string
    AND?: profileWhereInput | profileWhereInput[]
    OR?: profileWhereInput[]
    NOT?: profileWhereInput | profileWhereInput[]
    created_date?: DateTimeNullableFilter<"profile"> | Date | string | null
    order_amount?: DecimalNullableFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    bonus_amount?: DecimalNullableFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    order_count?: IntNullableFilter<"profile"> | number | null
    rank?: DecimalNullableFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    cancel_count?: IntNullableFilter<"profile"> | number | null
    complete_count?: IntNullableFilter<"profile"> | number | null
    no_rating?: IntNullableFilter<"profile"> | number | null
    profile_target?: DecimalNullableFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    department_id?: IntFilter<"profile"> | number
    repeat_order?: DecimalNullableFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    keywords?: StringNullableFilter<"profile"> | string | null
    total_rating?: DecimalNullableFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    projects?: ProjectListRelationFilter
    department?: DepartmentListRelationFilter
    team_members?: Team_memberListRelationFilter
  }, "id" | "profile_name">

  export type profileOrderByWithAggregationInput = {
    id?: SortOrder
    created_date?: SortOrderInput | SortOrder
    profile_name?: SortOrderInput | SortOrder
    order_amount?: SortOrderInput | SortOrder
    bonus_amount?: SortOrderInput | SortOrder
    order_count?: SortOrderInput | SortOrder
    rank?: SortOrderInput | SortOrder
    cancel_count?: SortOrderInput | SortOrder
    complete_count?: SortOrderInput | SortOrder
    no_rating?: SortOrderInput | SortOrder
    profile_target?: SortOrderInput | SortOrder
    department_id?: SortOrder
    repeat_order?: SortOrderInput | SortOrder
    keywords?: SortOrderInput | SortOrder
    total_rating?: SortOrderInput | SortOrder
    _count?: profileCountOrderByAggregateInput
    _avg?: profileAvgOrderByAggregateInput
    _max?: profileMaxOrderByAggregateInput
    _min?: profileMinOrderByAggregateInput
    _sum?: profileSumOrderByAggregateInput
  }

  export type profileScalarWhereWithAggregatesInput = {
    AND?: profileScalarWhereWithAggregatesInput | profileScalarWhereWithAggregatesInput[]
    OR?: profileScalarWhereWithAggregatesInput[]
    NOT?: profileScalarWhereWithAggregatesInput | profileScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"profile"> | number
    created_date?: DateTimeNullableWithAggregatesFilter<"profile"> | Date | string | null
    profile_name?: StringNullableWithAggregatesFilter<"profile"> | string | null
    order_amount?: DecimalNullableWithAggregatesFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    bonus_amount?: DecimalNullableWithAggregatesFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    order_count?: IntNullableWithAggregatesFilter<"profile"> | number | null
    rank?: DecimalNullableWithAggregatesFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    cancel_count?: IntNullableWithAggregatesFilter<"profile"> | number | null
    complete_count?: IntNullableWithAggregatesFilter<"profile"> | number | null
    no_rating?: IntNullableWithAggregatesFilter<"profile"> | number | null
    profile_target?: DecimalNullableWithAggregatesFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    department_id?: IntWithAggregatesFilter<"profile"> | number
    repeat_order?: DecimalNullableWithAggregatesFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    keywords?: StringNullableWithAggregatesFilter<"profile"> | string | null
    total_rating?: DecimalNullableWithAggregatesFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
  }

  export type team_memberWhereInput = {
    AND?: team_memberWhereInput | team_memberWhereInput[]
    OR?: team_memberWhereInput[]
    NOT?: team_memberWhereInput | team_memberWhereInput[]
    id?: IntFilter<"team_member"> | number
    first_name?: StringNullableFilter<"team_member"> | string | null
    last_name?: StringNullableFilter<"team_member"> | string | null
    email?: StringNullableFilter<"team_member"> | string | null
    number?: StringNullableFilter<"team_member"> | string | null
    permanent_address?: StringNullableFilter<"team_member"> | string | null
    present_address?: StringNullableFilter<"team_member"> | string | null
    gender?: StringNullableFilter<"team_member"> | string | null
    blood_group?: StringNullableFilter<"team_member"> | string | null
    relationship?: StringNullableFilter<"team_member"> | string | null
    guardian_relation?: StringNullableFilter<"team_member"> | string | null
    guardian_number?: StringNullableFilter<"team_member"> | string | null
    guardian_address?: StringNullableFilter<"team_member"> | string | null
    team_id?: IntNullableFilter<"team_member"> | number | null
    religion?: StringNullableFilter<"team_member"> | string | null
    education?: StringNullableFilter<"team_member"> | string | null
    dp?: StringNullableFilter<"team_member"> | string | null
    role?: StringNullableFilter<"team_member"> | string | null
    target?: DecimalNullableFilter<"team_member"> | Decimal | DecimalJsLike | number | string | null
    rating?: DecimalNullableFilter<"team_member"> | Decimal | DecimalJsLike | number | string | null
    rewards?: DecimalNullableFilter<"team_member"> | Decimal | DecimalJsLike | number | string | null
    account_status?: StringNullableFilter<"team_member"> | string | null
    password?: StringNullableFilter<"team_member"> | string | null
    designation?: StringNullableFilter<"team_member"> | string | null
    uid?: StringNullableFilter<"team_member"> | string | null
    member_distribution?: Member_distributionListRelationFilter
    project?: ProjectListRelationFilter
    team?: XOR<TeamNullableScalarRelationFilter, teamWhereInput> | null
    today_task?: Today_taskListRelationFilter
    assigned_projects?: ProjectListRelationFilter
    profile?: ProfileListRelationFilter
  }

  export type team_memberOrderByWithRelationInput = {
    id?: SortOrder
    first_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    number?: SortOrderInput | SortOrder
    permanent_address?: SortOrderInput | SortOrder
    present_address?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    blood_group?: SortOrderInput | SortOrder
    relationship?: SortOrderInput | SortOrder
    guardian_relation?: SortOrderInput | SortOrder
    guardian_number?: SortOrderInput | SortOrder
    guardian_address?: SortOrderInput | SortOrder
    team_id?: SortOrderInput | SortOrder
    religion?: SortOrderInput | SortOrder
    education?: SortOrderInput | SortOrder
    dp?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    target?: SortOrderInput | SortOrder
    rating?: SortOrderInput | SortOrder
    rewards?: SortOrderInput | SortOrder
    account_status?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    designation?: SortOrderInput | SortOrder
    uid?: SortOrderInput | SortOrder
    member_distribution?: member_distributionOrderByRelationAggregateInput
    project?: projectOrderByRelationAggregateInput
    team?: teamOrderByWithRelationInput
    today_task?: today_taskOrderByRelationAggregateInput
    assigned_projects?: projectOrderByRelationAggregateInput
    profile?: profileOrderByRelationAggregateInput
  }

  export type team_memberWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    uid?: string
    AND?: team_memberWhereInput | team_memberWhereInput[]
    OR?: team_memberWhereInput[]
    NOT?: team_memberWhereInput | team_memberWhereInput[]
    first_name?: StringNullableFilter<"team_member"> | string | null
    last_name?: StringNullableFilter<"team_member"> | string | null
    number?: StringNullableFilter<"team_member"> | string | null
    permanent_address?: StringNullableFilter<"team_member"> | string | null
    present_address?: StringNullableFilter<"team_member"> | string | null
    gender?: StringNullableFilter<"team_member"> | string | null
    blood_group?: StringNullableFilter<"team_member"> | string | null
    relationship?: StringNullableFilter<"team_member"> | string | null
    guardian_relation?: StringNullableFilter<"team_member"> | string | null
    guardian_number?: StringNullableFilter<"team_member"> | string | null
    guardian_address?: StringNullableFilter<"team_member"> | string | null
    team_id?: IntNullableFilter<"team_member"> | number | null
    religion?: StringNullableFilter<"team_member"> | string | null
    education?: StringNullableFilter<"team_member"> | string | null
    dp?: StringNullableFilter<"team_member"> | string | null
    role?: StringNullableFilter<"team_member"> | string | null
    target?: DecimalNullableFilter<"team_member"> | Decimal | DecimalJsLike | number | string | null
    rating?: DecimalNullableFilter<"team_member"> | Decimal | DecimalJsLike | number | string | null
    rewards?: DecimalNullableFilter<"team_member"> | Decimal | DecimalJsLike | number | string | null
    account_status?: StringNullableFilter<"team_member"> | string | null
    password?: StringNullableFilter<"team_member"> | string | null
    designation?: StringNullableFilter<"team_member"> | string | null
    member_distribution?: Member_distributionListRelationFilter
    project?: ProjectListRelationFilter
    team?: XOR<TeamNullableScalarRelationFilter, teamWhereInput> | null
    today_task?: Today_taskListRelationFilter
    assigned_projects?: ProjectListRelationFilter
    profile?: ProfileListRelationFilter
  }, "id" | "email" | "uid">

  export type team_memberOrderByWithAggregationInput = {
    id?: SortOrder
    first_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    number?: SortOrderInput | SortOrder
    permanent_address?: SortOrderInput | SortOrder
    present_address?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    blood_group?: SortOrderInput | SortOrder
    relationship?: SortOrderInput | SortOrder
    guardian_relation?: SortOrderInput | SortOrder
    guardian_number?: SortOrderInput | SortOrder
    guardian_address?: SortOrderInput | SortOrder
    team_id?: SortOrderInput | SortOrder
    religion?: SortOrderInput | SortOrder
    education?: SortOrderInput | SortOrder
    dp?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    target?: SortOrderInput | SortOrder
    rating?: SortOrderInput | SortOrder
    rewards?: SortOrderInput | SortOrder
    account_status?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    designation?: SortOrderInput | SortOrder
    uid?: SortOrderInput | SortOrder
    _count?: team_memberCountOrderByAggregateInput
    _avg?: team_memberAvgOrderByAggregateInput
    _max?: team_memberMaxOrderByAggregateInput
    _min?: team_memberMinOrderByAggregateInput
    _sum?: team_memberSumOrderByAggregateInput
  }

  export type team_memberScalarWhereWithAggregatesInput = {
    AND?: team_memberScalarWhereWithAggregatesInput | team_memberScalarWhereWithAggregatesInput[]
    OR?: team_memberScalarWhereWithAggregatesInput[]
    NOT?: team_memberScalarWhereWithAggregatesInput | team_memberScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"team_member"> | number
    first_name?: StringNullableWithAggregatesFilter<"team_member"> | string | null
    last_name?: StringNullableWithAggregatesFilter<"team_member"> | string | null
    email?: StringNullableWithAggregatesFilter<"team_member"> | string | null
    number?: StringNullableWithAggregatesFilter<"team_member"> | string | null
    permanent_address?: StringNullableWithAggregatesFilter<"team_member"> | string | null
    present_address?: StringNullableWithAggregatesFilter<"team_member"> | string | null
    gender?: StringNullableWithAggregatesFilter<"team_member"> | string | null
    blood_group?: StringNullableWithAggregatesFilter<"team_member"> | string | null
    relationship?: StringNullableWithAggregatesFilter<"team_member"> | string | null
    guardian_relation?: StringNullableWithAggregatesFilter<"team_member"> | string | null
    guardian_number?: StringNullableWithAggregatesFilter<"team_member"> | string | null
    guardian_address?: StringNullableWithAggregatesFilter<"team_member"> | string | null
    team_id?: IntNullableWithAggregatesFilter<"team_member"> | number | null
    religion?: StringNullableWithAggregatesFilter<"team_member"> | string | null
    education?: StringNullableWithAggregatesFilter<"team_member"> | string | null
    dp?: StringNullableWithAggregatesFilter<"team_member"> | string | null
    role?: StringNullableWithAggregatesFilter<"team_member"> | string | null
    target?: DecimalNullableWithAggregatesFilter<"team_member"> | Decimal | DecimalJsLike | number | string | null
    rating?: DecimalNullableWithAggregatesFilter<"team_member"> | Decimal | DecimalJsLike | number | string | null
    rewards?: DecimalNullableWithAggregatesFilter<"team_member"> | Decimal | DecimalJsLike | number | string | null
    account_status?: StringNullableWithAggregatesFilter<"team_member"> | string | null
    password?: StringNullableWithAggregatesFilter<"team_member"> | string | null
    designation?: StringNullableWithAggregatesFilter<"team_member"> | string | null
    uid?: StringNullableWithAggregatesFilter<"team_member"> | string | null
  }

  export type member_distributionWhereInput = {
    AND?: member_distributionWhereInput | member_distributionWhereInput[]
    OR?: member_distributionWhereInput[]
    NOT?: member_distributionWhereInput | member_distributionWhereInput[]
    id?: IntFilter<"member_distribution"> | number
    team_member_id?: IntFilter<"member_distribution"> | number
    amount?: DecimalNullableFilter<"member_distribution"> | Decimal | DecimalJsLike | number | string | null
    project_id?: IntFilter<"member_distribution"> | number
    team_member?: XOR<Team_memberScalarRelationFilter, team_memberWhereInput>
    project?: XOR<ProjectScalarRelationFilter, projectWhereInput>
  }

  export type member_distributionOrderByWithRelationInput = {
    id?: SortOrder
    team_member_id?: SortOrder
    amount?: SortOrderInput | SortOrder
    project_id?: SortOrder
    team_member?: team_memberOrderByWithRelationInput
    project?: projectOrderByWithRelationInput
  }

  export type member_distributionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: member_distributionWhereInput | member_distributionWhereInput[]
    OR?: member_distributionWhereInput[]
    NOT?: member_distributionWhereInput | member_distributionWhereInput[]
    team_member_id?: IntFilter<"member_distribution"> | number
    amount?: DecimalNullableFilter<"member_distribution"> | Decimal | DecimalJsLike | number | string | null
    project_id?: IntFilter<"member_distribution"> | number
    team_member?: XOR<Team_memberScalarRelationFilter, team_memberWhereInput>
    project?: XOR<ProjectScalarRelationFilter, projectWhereInput>
  }, "id">

  export type member_distributionOrderByWithAggregationInput = {
    id?: SortOrder
    team_member_id?: SortOrder
    amount?: SortOrderInput | SortOrder
    project_id?: SortOrder
    _count?: member_distributionCountOrderByAggregateInput
    _avg?: member_distributionAvgOrderByAggregateInput
    _max?: member_distributionMaxOrderByAggregateInput
    _min?: member_distributionMinOrderByAggregateInput
    _sum?: member_distributionSumOrderByAggregateInput
  }

  export type member_distributionScalarWhereWithAggregatesInput = {
    AND?: member_distributionScalarWhereWithAggregatesInput | member_distributionScalarWhereWithAggregatesInput[]
    OR?: member_distributionScalarWhereWithAggregatesInput[]
    NOT?: member_distributionScalarWhereWithAggregatesInput | member_distributionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"member_distribution"> | number
    team_member_id?: IntWithAggregatesFilter<"member_distribution"> | number
    amount?: DecimalNullableWithAggregatesFilter<"member_distribution"> | Decimal | DecimalJsLike | number | string | null
    project_id?: IntWithAggregatesFilter<"member_distribution"> | number
  }

  export type revisionWhereInput = {
    AND?: revisionWhereInput | revisionWhereInput[]
    OR?: revisionWhereInput[]
    NOT?: revisionWhereInput | revisionWhereInput[]
    id?: IntFilter<"revision"> | number
    project_id?: IntFilter<"revision"> | number
    revision_date?: DateTimeNullableFilter<"revision"> | Date | string | null
    revision_comments?: StringNullableFilter<"revision"> | string | null
    delivery_date?: DateTimeNullableFilter<"revision"> | Date | string | null
    metting_link?: StringNullableFilter<"revision"> | string | null
    metting_date?: DateTimeNullableFilter<"revision"> | Date | string | null
    team?: TeamListRelationFilter
  }

  export type revisionOrderByWithRelationInput = {
    id?: SortOrder
    project_id?: SortOrder
    revision_date?: SortOrderInput | SortOrder
    revision_comments?: SortOrderInput | SortOrder
    delivery_date?: SortOrderInput | SortOrder
    metting_link?: SortOrderInput | SortOrder
    metting_date?: SortOrderInput | SortOrder
    team?: teamOrderByRelationAggregateInput
  }

  export type revisionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: revisionWhereInput | revisionWhereInput[]
    OR?: revisionWhereInput[]
    NOT?: revisionWhereInput | revisionWhereInput[]
    project_id?: IntFilter<"revision"> | number
    revision_date?: DateTimeNullableFilter<"revision"> | Date | string | null
    revision_comments?: StringNullableFilter<"revision"> | string | null
    delivery_date?: DateTimeNullableFilter<"revision"> | Date | string | null
    metting_link?: StringNullableFilter<"revision"> | string | null
    metting_date?: DateTimeNullableFilter<"revision"> | Date | string | null
    team?: TeamListRelationFilter
  }, "id">

  export type revisionOrderByWithAggregationInput = {
    id?: SortOrder
    project_id?: SortOrder
    revision_date?: SortOrderInput | SortOrder
    revision_comments?: SortOrderInput | SortOrder
    delivery_date?: SortOrderInput | SortOrder
    metting_link?: SortOrderInput | SortOrder
    metting_date?: SortOrderInput | SortOrder
    _count?: revisionCountOrderByAggregateInput
    _avg?: revisionAvgOrderByAggregateInput
    _max?: revisionMaxOrderByAggregateInput
    _min?: revisionMinOrderByAggregateInput
    _sum?: revisionSumOrderByAggregateInput
  }

  export type revisionScalarWhereWithAggregatesInput = {
    AND?: revisionScalarWhereWithAggregatesInput | revisionScalarWhereWithAggregatesInput[]
    OR?: revisionScalarWhereWithAggregatesInput[]
    NOT?: revisionScalarWhereWithAggregatesInput | revisionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"revision"> | number
    project_id?: IntWithAggregatesFilter<"revision"> | number
    revision_date?: DateTimeNullableWithAggregatesFilter<"revision"> | Date | string | null
    revision_comments?: StringNullableWithAggregatesFilter<"revision"> | string | null
    delivery_date?: DateTimeNullableWithAggregatesFilter<"revision"> | Date | string | null
    metting_link?: StringNullableWithAggregatesFilter<"revision"> | string | null
    metting_date?: DateTimeNullableWithAggregatesFilter<"revision"> | Date | string | null
  }

  export type today_taskWhereInput = {
    AND?: today_taskWhereInput | today_taskWhereInput[]
    OR?: today_taskWhereInput[]
    NOT?: today_taskWhereInput | today_taskWhereInput[]
    id?: IntFilter<"today_task"> | number
    project_id?: IntFilter<"today_task"> | number
    client_name?: StringNullableFilter<"today_task"> | string | null
    expected_finish_time?: StringNullableFilter<"today_task"> | string | null
    team_id?: IntNullableFilter<"today_task"> | number | null
    ops_status?: StringNullableFilter<"today_task"> | string | null
    team_member_id?: IntNullableFilter<"today_task"> | number | null
    project?: XOR<ProjectScalarRelationFilter, projectWhereInput>
    team?: XOR<TeamNullableScalarRelationFilter, teamWhereInput> | null
    team_member?: XOR<Team_memberNullableScalarRelationFilter, team_memberWhereInput> | null
  }

  export type today_taskOrderByWithRelationInput = {
    id?: SortOrder
    project_id?: SortOrder
    client_name?: SortOrderInput | SortOrder
    expected_finish_time?: SortOrderInput | SortOrder
    team_id?: SortOrderInput | SortOrder
    ops_status?: SortOrderInput | SortOrder
    team_member_id?: SortOrderInput | SortOrder
    project?: projectOrderByWithRelationInput
    team?: teamOrderByWithRelationInput
    team_member?: team_memberOrderByWithRelationInput
  }

  export type today_taskWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: today_taskWhereInput | today_taskWhereInput[]
    OR?: today_taskWhereInput[]
    NOT?: today_taskWhereInput | today_taskWhereInput[]
    project_id?: IntFilter<"today_task"> | number
    client_name?: StringNullableFilter<"today_task"> | string | null
    expected_finish_time?: StringNullableFilter<"today_task"> | string | null
    team_id?: IntNullableFilter<"today_task"> | number | null
    ops_status?: StringNullableFilter<"today_task"> | string | null
    team_member_id?: IntNullableFilter<"today_task"> | number | null
    project?: XOR<ProjectScalarRelationFilter, projectWhereInput>
    team?: XOR<TeamNullableScalarRelationFilter, teamWhereInput> | null
    team_member?: XOR<Team_memberNullableScalarRelationFilter, team_memberWhereInput> | null
  }, "id">

  export type today_taskOrderByWithAggregationInput = {
    id?: SortOrder
    project_id?: SortOrder
    client_name?: SortOrderInput | SortOrder
    expected_finish_time?: SortOrderInput | SortOrder
    team_id?: SortOrderInput | SortOrder
    ops_status?: SortOrderInput | SortOrder
    team_member_id?: SortOrderInput | SortOrder
    _count?: today_taskCountOrderByAggregateInput
    _avg?: today_taskAvgOrderByAggregateInput
    _max?: today_taskMaxOrderByAggregateInput
    _min?: today_taskMinOrderByAggregateInput
    _sum?: today_taskSumOrderByAggregateInput
  }

  export type today_taskScalarWhereWithAggregatesInput = {
    AND?: today_taskScalarWhereWithAggregatesInput | today_taskScalarWhereWithAggregatesInput[]
    OR?: today_taskScalarWhereWithAggregatesInput[]
    NOT?: today_taskScalarWhereWithAggregatesInput | today_taskScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"today_task"> | number
    project_id?: IntWithAggregatesFilter<"today_task"> | number
    client_name?: StringNullableWithAggregatesFilter<"today_task"> | string | null
    expected_finish_time?: StringNullableWithAggregatesFilter<"today_task"> | string | null
    team_id?: IntNullableWithAggregatesFilter<"today_task"> | number | null
    ops_status?: StringNullableWithAggregatesFilter<"today_task"> | string | null
    team_member_id?: IntNullableWithAggregatesFilter<"today_task"> | number | null
  }

  export type projectCreateInput = {
    order_id?: string | null
    date?: Date | string | null
    project_name?: string | null
    ops_status?: string | null
    sales_comments?: string | null
    opsleader_comments?: string | null
    sheet_link?: string | null
    deli_last_date?: Date | string | null
    status?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: Decimal | DecimalJsLike | number | string | null
    rating?: number | null
    project_requirements?: string | null
    Assigned_date?: Date | string | null
    extension?: number | null
    is_delivered?: boolean | null
    revision?: number | null
    delivery_date?: Date | string | null
    update_at?: Date | string | null
    department: departmentCreateNestedOneWithoutAssign_projectInput
    team_member: team_memberCreateNestedOneWithoutProjectInput
    profile?: profileCreateNestedOneWithoutProjectsInput
    team?: teamCreateNestedOneWithoutProjectInput
    today_task?: today_taskCreateNestedManyWithoutProjectInput
    team_members?: team_memberCreateNestedManyWithoutAssigned_projectsInput
    member_distribution?: member_distributionCreateNestedManyWithoutProjectInput
  }

  export type projectUncheckedCreateInput = {
    id?: number
    order_id?: string | null
    date?: Date | string | null
    project_name?: string | null
    ops_status?: string | null
    sales_comments?: string | null
    opsleader_comments?: string | null
    sheet_link?: string | null
    ordered_by: number
    deli_last_date?: Date | string | null
    status?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: Decimal | DecimalJsLike | number | string | null
    rating?: number | null
    department_id: number
    project_requirements?: string | null
    profile_id?: number | null
    team_id?: number | null
    Assigned_date?: Date | string | null
    extension?: number | null
    is_delivered?: boolean | null
    revision?: number | null
    delivery_date?: Date | string | null
    update_at?: Date | string | null
    today_task?: today_taskUncheckedCreateNestedManyWithoutProjectInput
    team_members?: team_memberUncheckedCreateNestedManyWithoutAssigned_projectsInput
    member_distribution?: member_distributionUncheckedCreateNestedManyWithoutProjectInput
  }

  export type projectUpdateInput = {
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    department?: departmentUpdateOneRequiredWithoutAssign_projectNestedInput
    team_member?: team_memberUpdateOneRequiredWithoutProjectNestedInput
    profile?: profileUpdateOneWithoutProjectsNestedInput
    team?: teamUpdateOneWithoutProjectNestedInput
    today_task?: today_taskUpdateManyWithoutProjectNestedInput
    team_members?: team_memberUpdateManyWithoutAssigned_projectsNestedInput
    member_distribution?: member_distributionUpdateManyWithoutProjectNestedInput
  }

  export type projectUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    ordered_by?: IntFieldUpdateOperationsInput | number
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: IntFieldUpdateOperationsInput | number
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    profile_id?: NullableIntFieldUpdateOperationsInput | number | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    today_task?: today_taskUncheckedUpdateManyWithoutProjectNestedInput
    team_members?: team_memberUncheckedUpdateManyWithoutAssigned_projectsNestedInput
    member_distribution?: member_distributionUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type projectCreateManyInput = {
    id?: number
    order_id?: string | null
    date?: Date | string | null
    project_name?: string | null
    ops_status?: string | null
    sales_comments?: string | null
    opsleader_comments?: string | null
    sheet_link?: string | null
    ordered_by: number
    deli_last_date?: Date | string | null
    status?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: Decimal | DecimalJsLike | number | string | null
    rating?: number | null
    department_id: number
    project_requirements?: string | null
    profile_id?: number | null
    team_id?: number | null
    Assigned_date?: Date | string | null
    extension?: number | null
    is_delivered?: boolean | null
    revision?: number | null
    delivery_date?: Date | string | null
    update_at?: Date | string | null
  }

  export type projectUpdateManyMutationInput = {
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type projectUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    ordered_by?: IntFieldUpdateOperationsInput | number
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: IntFieldUpdateOperationsInput | number
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    profile_id?: NullableIntFieldUpdateOperationsInput | number | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type teamCreateInput = {
    team_name?: string | null
    team_achieve?: Decimal | DecimalJsLike | number | string | null
    team_cancel?: number | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    team_target?: Decimal | DecimalJsLike | number | string | null
    project?: projectCreateNestedManyWithoutTeamInput
    department: departmentCreateNestedOneWithoutDepartment_teamsInput
    team_member?: team_memberCreateNestedManyWithoutTeamInput
    today_task?: today_taskCreateNestedManyWithoutTeamInput
    revision?: revisionCreateNestedManyWithoutTeamInput
  }

  export type teamUncheckedCreateInput = {
    id?: number
    team_name?: string | null
    department_id: number
    team_achieve?: Decimal | DecimalJsLike | number | string | null
    team_cancel?: number | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    team_target?: Decimal | DecimalJsLike | number | string | null
    project?: projectUncheckedCreateNestedManyWithoutTeamInput
    team_member?: team_memberUncheckedCreateNestedManyWithoutTeamInput
    today_task?: today_taskUncheckedCreateNestedManyWithoutTeamInput
    revision?: revisionUncheckedCreateNestedManyWithoutTeamInput
  }

  export type teamUpdateInput = {
    team_name?: NullableStringFieldUpdateOperationsInput | string | null
    team_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_cancel?: NullableIntFieldUpdateOperationsInput | number | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    project?: projectUpdateManyWithoutTeamNestedInput
    department?: departmentUpdateOneRequiredWithoutDepartment_teamsNestedInput
    team_member?: team_memberUpdateManyWithoutTeamNestedInput
    today_task?: today_taskUpdateManyWithoutTeamNestedInput
    revision?: revisionUpdateManyWithoutTeamNestedInput
  }

  export type teamUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_name?: NullableStringFieldUpdateOperationsInput | string | null
    department_id?: IntFieldUpdateOperationsInput | number
    team_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_cancel?: NullableIntFieldUpdateOperationsInput | number | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    project?: projectUncheckedUpdateManyWithoutTeamNestedInput
    team_member?: team_memberUncheckedUpdateManyWithoutTeamNestedInput
    today_task?: today_taskUncheckedUpdateManyWithoutTeamNestedInput
    revision?: revisionUncheckedUpdateManyWithoutTeamNestedInput
  }

  export type teamCreateManyInput = {
    id?: number
    team_name?: string | null
    department_id: number
    team_achieve?: Decimal | DecimalJsLike | number | string | null
    team_cancel?: number | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    team_target?: Decimal | DecimalJsLike | number | string | null
  }

  export type teamUpdateManyMutationInput = {
    team_name?: NullableStringFieldUpdateOperationsInput | string | null
    team_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_cancel?: NullableIntFieldUpdateOperationsInput | number | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type teamUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_name?: NullableStringFieldUpdateOperationsInput | string | null
    department_id?: IntFieldUpdateOperationsInput | number
    team_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_cancel?: NullableIntFieldUpdateOperationsInput | number | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type departmentCreateInput = {
    department_name?: string | null
    department_target?: Decimal | DecimalJsLike | number | string | null
    department_achieve?: Decimal | DecimalJsLike | number | string | null
    department_cancel?: Decimal | DecimalJsLike | number | string | null
    department_special_order?: Decimal | DecimalJsLike | number | string | null
    department_designation?: string | null
    project_requirements?: string | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    assign_project?: projectCreateNestedManyWithoutDepartmentInput
    department_teams?: teamCreateNestedManyWithoutDepartmentInput
    department_profile?: profileCreateNestedManyWithoutDepartmentInput
  }

  export type departmentUncheckedCreateInput = {
    id?: number
    department_name?: string | null
    department_target?: Decimal | DecimalJsLike | number | string | null
    department_achieve?: Decimal | DecimalJsLike | number | string | null
    department_cancel?: Decimal | DecimalJsLike | number | string | null
    department_special_order?: Decimal | DecimalJsLike | number | string | null
    department_designation?: string | null
    project_requirements?: string | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    assign_project?: projectUncheckedCreateNestedManyWithoutDepartmentInput
    department_teams?: teamUncheckedCreateNestedManyWithoutDepartmentInput
    department_profile?: profileUncheckedCreateNestedManyWithoutDepartmentInput
  }

  export type departmentUpdateInput = {
    department_name?: NullableStringFieldUpdateOperationsInput | string | null
    department_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_cancel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_special_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_designation?: NullableStringFieldUpdateOperationsInput | string | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    assign_project?: projectUpdateManyWithoutDepartmentNestedInput
    department_teams?: teamUpdateManyWithoutDepartmentNestedInput
    department_profile?: profileUpdateManyWithoutDepartmentNestedInput
  }

  export type departmentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    department_name?: NullableStringFieldUpdateOperationsInput | string | null
    department_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_cancel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_special_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_designation?: NullableStringFieldUpdateOperationsInput | string | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    assign_project?: projectUncheckedUpdateManyWithoutDepartmentNestedInput
    department_teams?: teamUncheckedUpdateManyWithoutDepartmentNestedInput
    department_profile?: profileUncheckedUpdateManyWithoutDepartmentNestedInput
  }

  export type departmentCreateManyInput = {
    id?: number
    department_name?: string | null
    department_target?: Decimal | DecimalJsLike | number | string | null
    department_achieve?: Decimal | DecimalJsLike | number | string | null
    department_cancel?: Decimal | DecimalJsLike | number | string | null
    department_special_order?: Decimal | DecimalJsLike | number | string | null
    department_designation?: string | null
    project_requirements?: string | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
  }

  export type departmentUpdateManyMutationInput = {
    department_name?: NullableStringFieldUpdateOperationsInput | string | null
    department_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_cancel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_special_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_designation?: NullableStringFieldUpdateOperationsInput | string | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type departmentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    department_name?: NullableStringFieldUpdateOperationsInput | string | null
    department_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_cancel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_special_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_designation?: NullableStringFieldUpdateOperationsInput | string | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type profileCreateInput = {
    created_date?: Date | string | null
    profile_name?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    bonus_amount?: Decimal | DecimalJsLike | number | string | null
    order_count?: number | null
    rank?: Decimal | DecimalJsLike | number | string | null
    cancel_count?: number | null
    complete_count?: number | null
    no_rating?: number | null
    profile_target?: Decimal | DecimalJsLike | number | string | null
    department_id: number
    repeat_order?: Decimal | DecimalJsLike | number | string | null
    keywords?: string | null
    total_rating?: Decimal | DecimalJsLike | number | string | null
    projects?: projectCreateNestedManyWithoutProfileInput
    department?: departmentCreateNestedManyWithoutDepartment_profileInput
    team_members?: team_memberCreateNestedManyWithoutProfileInput
  }

  export type profileUncheckedCreateInput = {
    id?: number
    created_date?: Date | string | null
    profile_name?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    bonus_amount?: Decimal | DecimalJsLike | number | string | null
    order_count?: number | null
    rank?: Decimal | DecimalJsLike | number | string | null
    cancel_count?: number | null
    complete_count?: number | null
    no_rating?: number | null
    profile_target?: Decimal | DecimalJsLike | number | string | null
    department_id: number
    repeat_order?: Decimal | DecimalJsLike | number | string | null
    keywords?: string | null
    total_rating?: Decimal | DecimalJsLike | number | string | null
    projects?: projectUncheckedCreateNestedManyWithoutProfileInput
    department?: departmentUncheckedCreateNestedManyWithoutDepartment_profileInput
    team_members?: team_memberUncheckedCreateNestedManyWithoutProfileInput
  }

  export type profileUpdateInput = {
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile_name?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    order_count?: NullableIntFieldUpdateOperationsInput | number | null
    rank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cancel_count?: NullableIntFieldUpdateOperationsInput | number | null
    complete_count?: NullableIntFieldUpdateOperationsInput | number | null
    no_rating?: NullableIntFieldUpdateOperationsInput | number | null
    profile_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_id?: IntFieldUpdateOperationsInput | number
    repeat_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    keywords?: NullableStringFieldUpdateOperationsInput | string | null
    total_rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    projects?: projectUpdateManyWithoutProfileNestedInput
    department?: departmentUpdateManyWithoutDepartment_profileNestedInput
    team_members?: team_memberUpdateManyWithoutProfileNestedInput
  }

  export type profileUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile_name?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    order_count?: NullableIntFieldUpdateOperationsInput | number | null
    rank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cancel_count?: NullableIntFieldUpdateOperationsInput | number | null
    complete_count?: NullableIntFieldUpdateOperationsInput | number | null
    no_rating?: NullableIntFieldUpdateOperationsInput | number | null
    profile_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_id?: IntFieldUpdateOperationsInput | number
    repeat_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    keywords?: NullableStringFieldUpdateOperationsInput | string | null
    total_rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    projects?: projectUncheckedUpdateManyWithoutProfileNestedInput
    department?: departmentUncheckedUpdateManyWithoutDepartment_profileNestedInput
    team_members?: team_memberUncheckedUpdateManyWithoutProfileNestedInput
  }

  export type profileCreateManyInput = {
    id?: number
    created_date?: Date | string | null
    profile_name?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    bonus_amount?: Decimal | DecimalJsLike | number | string | null
    order_count?: number | null
    rank?: Decimal | DecimalJsLike | number | string | null
    cancel_count?: number | null
    complete_count?: number | null
    no_rating?: number | null
    profile_target?: Decimal | DecimalJsLike | number | string | null
    department_id: number
    repeat_order?: Decimal | DecimalJsLike | number | string | null
    keywords?: string | null
    total_rating?: Decimal | DecimalJsLike | number | string | null
  }

  export type profileUpdateManyMutationInput = {
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile_name?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    order_count?: NullableIntFieldUpdateOperationsInput | number | null
    rank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cancel_count?: NullableIntFieldUpdateOperationsInput | number | null
    complete_count?: NullableIntFieldUpdateOperationsInput | number | null
    no_rating?: NullableIntFieldUpdateOperationsInput | number | null
    profile_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_id?: IntFieldUpdateOperationsInput | number
    repeat_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    keywords?: NullableStringFieldUpdateOperationsInput | string | null
    total_rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type profileUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile_name?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    order_count?: NullableIntFieldUpdateOperationsInput | number | null
    rank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cancel_count?: NullableIntFieldUpdateOperationsInput | number | null
    complete_count?: NullableIntFieldUpdateOperationsInput | number | null
    no_rating?: NullableIntFieldUpdateOperationsInput | number | null
    profile_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_id?: IntFieldUpdateOperationsInput | number
    repeat_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    keywords?: NullableStringFieldUpdateOperationsInput | string | null
    total_rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type team_memberCreateInput = {
    first_name?: string | null
    last_name?: string | null
    email?: string | null
    number?: string | null
    permanent_address?: string | null
    present_address?: string | null
    gender?: string | null
    blood_group?: string | null
    relationship?: string | null
    guardian_relation?: string | null
    guardian_number?: string | null
    guardian_address?: string | null
    religion?: string | null
    education?: string | null
    dp?: string | null
    role?: string | null
    target?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    rewards?: Decimal | DecimalJsLike | number | string | null
    account_status?: string | null
    password?: string | null
    designation?: string | null
    uid?: string | null
    member_distribution?: member_distributionCreateNestedManyWithoutTeam_memberInput
    project?: projectCreateNestedManyWithoutTeam_memberInput
    team?: teamCreateNestedOneWithoutTeam_memberInput
    today_task?: today_taskCreateNestedManyWithoutTeam_memberInput
    assigned_projects?: projectCreateNestedManyWithoutTeam_membersInput
    profile?: profileCreateNestedManyWithoutTeam_membersInput
  }

  export type team_memberUncheckedCreateInput = {
    id?: number
    first_name?: string | null
    last_name?: string | null
    email?: string | null
    number?: string | null
    permanent_address?: string | null
    present_address?: string | null
    gender?: string | null
    blood_group?: string | null
    relationship?: string | null
    guardian_relation?: string | null
    guardian_number?: string | null
    guardian_address?: string | null
    team_id?: number | null
    religion?: string | null
    education?: string | null
    dp?: string | null
    role?: string | null
    target?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    rewards?: Decimal | DecimalJsLike | number | string | null
    account_status?: string | null
    password?: string | null
    designation?: string | null
    uid?: string | null
    member_distribution?: member_distributionUncheckedCreateNestedManyWithoutTeam_memberInput
    project?: projectUncheckedCreateNestedManyWithoutTeam_memberInput
    today_task?: today_taskUncheckedCreateNestedManyWithoutTeam_memberInput
    assigned_projects?: projectUncheckedCreateNestedManyWithoutTeam_membersInput
    profile?: profileUncheckedCreateNestedManyWithoutTeam_membersInput
  }

  export type team_memberUpdateInput = {
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    permanent_address?: NullableStringFieldUpdateOperationsInput | string | null
    present_address?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_relation?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_number?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_address?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    dp?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rewards?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    account_status?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    uid?: NullableStringFieldUpdateOperationsInput | string | null
    member_distribution?: member_distributionUpdateManyWithoutTeam_memberNestedInput
    project?: projectUpdateManyWithoutTeam_memberNestedInput
    team?: teamUpdateOneWithoutTeam_memberNestedInput
    today_task?: today_taskUpdateManyWithoutTeam_memberNestedInput
    assigned_projects?: projectUpdateManyWithoutTeam_membersNestedInput
    profile?: profileUpdateManyWithoutTeam_membersNestedInput
  }

  export type team_memberUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    permanent_address?: NullableStringFieldUpdateOperationsInput | string | null
    present_address?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_relation?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_number?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_address?: NullableStringFieldUpdateOperationsInput | string | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    dp?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rewards?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    account_status?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    uid?: NullableStringFieldUpdateOperationsInput | string | null
    member_distribution?: member_distributionUncheckedUpdateManyWithoutTeam_memberNestedInput
    project?: projectUncheckedUpdateManyWithoutTeam_memberNestedInput
    today_task?: today_taskUncheckedUpdateManyWithoutTeam_memberNestedInput
    assigned_projects?: projectUncheckedUpdateManyWithoutTeam_membersNestedInput
    profile?: profileUncheckedUpdateManyWithoutTeam_membersNestedInput
  }

  export type team_memberCreateManyInput = {
    id?: number
    first_name?: string | null
    last_name?: string | null
    email?: string | null
    number?: string | null
    permanent_address?: string | null
    present_address?: string | null
    gender?: string | null
    blood_group?: string | null
    relationship?: string | null
    guardian_relation?: string | null
    guardian_number?: string | null
    guardian_address?: string | null
    team_id?: number | null
    religion?: string | null
    education?: string | null
    dp?: string | null
    role?: string | null
    target?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    rewards?: Decimal | DecimalJsLike | number | string | null
    account_status?: string | null
    password?: string | null
    designation?: string | null
    uid?: string | null
  }

  export type team_memberUpdateManyMutationInput = {
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    permanent_address?: NullableStringFieldUpdateOperationsInput | string | null
    present_address?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_relation?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_number?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_address?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    dp?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rewards?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    account_status?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    uid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type team_memberUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    permanent_address?: NullableStringFieldUpdateOperationsInput | string | null
    present_address?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_relation?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_number?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_address?: NullableStringFieldUpdateOperationsInput | string | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    dp?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rewards?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    account_status?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    uid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type member_distributionCreateInput = {
    amount?: Decimal | DecimalJsLike | number | string | null
    team_member: team_memberCreateNestedOneWithoutMember_distributionInput
    project: projectCreateNestedOneWithoutMember_distributionInput
  }

  export type member_distributionUncheckedCreateInput = {
    id?: number
    team_member_id: number
    amount?: Decimal | DecimalJsLike | number | string | null
    project_id: number
  }

  export type member_distributionUpdateInput = {
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_member?: team_memberUpdateOneRequiredWithoutMember_distributionNestedInput
    project?: projectUpdateOneRequiredWithoutMember_distributionNestedInput
  }

  export type member_distributionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_member_id?: IntFieldUpdateOperationsInput | number
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    project_id?: IntFieldUpdateOperationsInput | number
  }

  export type member_distributionCreateManyInput = {
    id?: number
    team_member_id: number
    amount?: Decimal | DecimalJsLike | number | string | null
    project_id: number
  }

  export type member_distributionUpdateManyMutationInput = {
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type member_distributionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_member_id?: IntFieldUpdateOperationsInput | number
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    project_id?: IntFieldUpdateOperationsInput | number
  }

  export type revisionCreateInput = {
    project_id: number
    revision_date?: Date | string | null
    revision_comments?: string | null
    delivery_date?: Date | string | null
    metting_link?: string | null
    metting_date?: Date | string | null
    team?: teamCreateNestedManyWithoutRevisionInput
  }

  export type revisionUncheckedCreateInput = {
    id?: number
    project_id: number
    revision_date?: Date | string | null
    revision_comments?: string | null
    delivery_date?: Date | string | null
    metting_link?: string | null
    metting_date?: Date | string | null
    team?: teamUncheckedCreateNestedManyWithoutRevisionInput
  }

  export type revisionUpdateInput = {
    project_id?: IntFieldUpdateOperationsInput | number
    revision_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision_comments?: NullableStringFieldUpdateOperationsInput | string | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metting_link?: NullableStringFieldUpdateOperationsInput | string | null
    metting_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    team?: teamUpdateManyWithoutRevisionNestedInput
  }

  export type revisionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    revision_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision_comments?: NullableStringFieldUpdateOperationsInput | string | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metting_link?: NullableStringFieldUpdateOperationsInput | string | null
    metting_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    team?: teamUncheckedUpdateManyWithoutRevisionNestedInput
  }

  export type revisionCreateManyInput = {
    id?: number
    project_id: number
    revision_date?: Date | string | null
    revision_comments?: string | null
    delivery_date?: Date | string | null
    metting_link?: string | null
    metting_date?: Date | string | null
  }

  export type revisionUpdateManyMutationInput = {
    project_id?: IntFieldUpdateOperationsInput | number
    revision_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision_comments?: NullableStringFieldUpdateOperationsInput | string | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metting_link?: NullableStringFieldUpdateOperationsInput | string | null
    metting_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type revisionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    revision_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision_comments?: NullableStringFieldUpdateOperationsInput | string | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metting_link?: NullableStringFieldUpdateOperationsInput | string | null
    metting_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type today_taskCreateInput = {
    client_name?: string | null
    expected_finish_time?: string | null
    ops_status?: string | null
    project: projectCreateNestedOneWithoutToday_taskInput
    team?: teamCreateNestedOneWithoutToday_taskInput
    team_member?: team_memberCreateNestedOneWithoutToday_taskInput
  }

  export type today_taskUncheckedCreateInput = {
    id?: number
    project_id: number
    client_name?: string | null
    expected_finish_time?: string | null
    team_id?: number | null
    ops_status?: string | null
    team_member_id?: number | null
  }

  export type today_taskUpdateInput = {
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    expected_finish_time?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    project?: projectUpdateOneRequiredWithoutToday_taskNestedInput
    team?: teamUpdateOneWithoutToday_taskNestedInput
    team_member?: team_memberUpdateOneWithoutToday_taskNestedInput
  }

  export type today_taskUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    expected_finish_time?: NullableStringFieldUpdateOperationsInput | string | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    team_member_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type today_taskCreateManyInput = {
    id?: number
    project_id: number
    client_name?: string | null
    expected_finish_time?: string | null
    team_id?: number | null
    ops_status?: string | null
    team_member_id?: number | null
  }

  export type today_taskUpdateManyMutationInput = {
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    expected_finish_time?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type today_taskUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    expected_finish_time?: NullableStringFieldUpdateOperationsInput | string | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    team_member_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type DepartmentScalarRelationFilter = {
    is?: departmentWhereInput
    isNot?: departmentWhereInput
  }

  export type Team_memberScalarRelationFilter = {
    is?: team_memberWhereInput
    isNot?: team_memberWhereInput
  }

  export type ProfileNullableScalarRelationFilter = {
    is?: profileWhereInput | null
    isNot?: profileWhereInput | null
  }

  export type TeamNullableScalarRelationFilter = {
    is?: teamWhereInput | null
    isNot?: teamWhereInput | null
  }

  export type Today_taskListRelationFilter = {
    every?: today_taskWhereInput
    some?: today_taskWhereInput
    none?: today_taskWhereInput
  }

  export type Team_memberListRelationFilter = {
    every?: team_memberWhereInput
    some?: team_memberWhereInput
    none?: team_memberWhereInput
  }

  export type Member_distributionListRelationFilter = {
    every?: member_distributionWhereInput
    some?: member_distributionWhereInput
    none?: member_distributionWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type today_taskOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type team_memberOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type member_distributionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type projectCountOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    date?: SortOrder
    project_name?: SortOrder
    ops_status?: SortOrder
    sales_comments?: SortOrder
    opsleader_comments?: SortOrder
    sheet_link?: SortOrder
    ordered_by?: SortOrder
    deli_last_date?: SortOrder
    status?: SortOrder
    order_amount?: SortOrder
    after_fiverr_amount?: SortOrder
    bonus?: SortOrder
    after_Fiverr_bonus?: SortOrder
    rating?: SortOrder
    department_id?: SortOrder
    project_requirements?: SortOrder
    profile_id?: SortOrder
    team_id?: SortOrder
    Assigned_date?: SortOrder
    extension?: SortOrder
    is_delivered?: SortOrder
    revision?: SortOrder
    delivery_date?: SortOrder
    update_at?: SortOrder
  }

  export type projectAvgOrderByAggregateInput = {
    id?: SortOrder
    ordered_by?: SortOrder
    order_amount?: SortOrder
    after_fiverr_amount?: SortOrder
    bonus?: SortOrder
    after_Fiverr_bonus?: SortOrder
    rating?: SortOrder
    department_id?: SortOrder
    profile_id?: SortOrder
    team_id?: SortOrder
    extension?: SortOrder
    revision?: SortOrder
  }

  export type projectMaxOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    date?: SortOrder
    project_name?: SortOrder
    ops_status?: SortOrder
    sales_comments?: SortOrder
    opsleader_comments?: SortOrder
    sheet_link?: SortOrder
    ordered_by?: SortOrder
    deli_last_date?: SortOrder
    status?: SortOrder
    order_amount?: SortOrder
    after_fiverr_amount?: SortOrder
    bonus?: SortOrder
    after_Fiverr_bonus?: SortOrder
    rating?: SortOrder
    department_id?: SortOrder
    project_requirements?: SortOrder
    profile_id?: SortOrder
    team_id?: SortOrder
    Assigned_date?: SortOrder
    extension?: SortOrder
    is_delivered?: SortOrder
    revision?: SortOrder
    delivery_date?: SortOrder
    update_at?: SortOrder
  }

  export type projectMinOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    date?: SortOrder
    project_name?: SortOrder
    ops_status?: SortOrder
    sales_comments?: SortOrder
    opsleader_comments?: SortOrder
    sheet_link?: SortOrder
    ordered_by?: SortOrder
    deli_last_date?: SortOrder
    status?: SortOrder
    order_amount?: SortOrder
    after_fiverr_amount?: SortOrder
    bonus?: SortOrder
    after_Fiverr_bonus?: SortOrder
    rating?: SortOrder
    department_id?: SortOrder
    project_requirements?: SortOrder
    profile_id?: SortOrder
    team_id?: SortOrder
    Assigned_date?: SortOrder
    extension?: SortOrder
    is_delivered?: SortOrder
    revision?: SortOrder
    delivery_date?: SortOrder
    update_at?: SortOrder
  }

  export type projectSumOrderByAggregateInput = {
    id?: SortOrder
    ordered_by?: SortOrder
    order_amount?: SortOrder
    after_fiverr_amount?: SortOrder
    bonus?: SortOrder
    after_Fiverr_bonus?: SortOrder
    rating?: SortOrder
    department_id?: SortOrder
    profile_id?: SortOrder
    team_id?: SortOrder
    extension?: SortOrder
    revision?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type ProjectListRelationFilter = {
    every?: projectWhereInput
    some?: projectWhereInput
    none?: projectWhereInput
  }

  export type RevisionListRelationFilter = {
    every?: revisionWhereInput
    some?: revisionWhereInput
    none?: revisionWhereInput
  }

  export type projectOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type revisionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type teamCountOrderByAggregateInput = {
    id?: SortOrder
    team_name?: SortOrder
    department_id?: SortOrder
    team_achieve?: SortOrder
    team_cancel?: SortOrder
    total_carry?: SortOrder
    team_target?: SortOrder
  }

  export type teamAvgOrderByAggregateInput = {
    id?: SortOrder
    department_id?: SortOrder
    team_achieve?: SortOrder
    team_cancel?: SortOrder
    total_carry?: SortOrder
    team_target?: SortOrder
  }

  export type teamMaxOrderByAggregateInput = {
    id?: SortOrder
    team_name?: SortOrder
    department_id?: SortOrder
    team_achieve?: SortOrder
    team_cancel?: SortOrder
    total_carry?: SortOrder
    team_target?: SortOrder
  }

  export type teamMinOrderByAggregateInput = {
    id?: SortOrder
    team_name?: SortOrder
    department_id?: SortOrder
    team_achieve?: SortOrder
    team_cancel?: SortOrder
    total_carry?: SortOrder
    team_target?: SortOrder
  }

  export type teamSumOrderByAggregateInput = {
    id?: SortOrder
    department_id?: SortOrder
    team_achieve?: SortOrder
    team_cancel?: SortOrder
    total_carry?: SortOrder
    team_target?: SortOrder
  }

  export type TeamListRelationFilter = {
    every?: teamWhereInput
    some?: teamWhereInput
    none?: teamWhereInput
  }

  export type ProfileListRelationFilter = {
    every?: profileWhereInput
    some?: profileWhereInput
    none?: profileWhereInput
  }

  export type teamOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type profileOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type departmentCountOrderByAggregateInput = {
    id?: SortOrder
    department_name?: SortOrder
    department_target?: SortOrder
    department_achieve?: SortOrder
    department_cancel?: SortOrder
    department_special_order?: SortOrder
    department_designation?: SortOrder
    project_requirements?: SortOrder
    total_carry?: SortOrder
  }

  export type departmentAvgOrderByAggregateInput = {
    id?: SortOrder
    department_target?: SortOrder
    department_achieve?: SortOrder
    department_cancel?: SortOrder
    department_special_order?: SortOrder
    total_carry?: SortOrder
  }

  export type departmentMaxOrderByAggregateInput = {
    id?: SortOrder
    department_name?: SortOrder
    department_target?: SortOrder
    department_achieve?: SortOrder
    department_cancel?: SortOrder
    department_special_order?: SortOrder
    department_designation?: SortOrder
    project_requirements?: SortOrder
    total_carry?: SortOrder
  }

  export type departmentMinOrderByAggregateInput = {
    id?: SortOrder
    department_name?: SortOrder
    department_target?: SortOrder
    department_achieve?: SortOrder
    department_cancel?: SortOrder
    department_special_order?: SortOrder
    department_designation?: SortOrder
    project_requirements?: SortOrder
    total_carry?: SortOrder
  }

  export type departmentSumOrderByAggregateInput = {
    id?: SortOrder
    department_target?: SortOrder
    department_achieve?: SortOrder
    department_cancel?: SortOrder
    department_special_order?: SortOrder
    total_carry?: SortOrder
  }

  export type DepartmentListRelationFilter = {
    every?: departmentWhereInput
    some?: departmentWhereInput
    none?: departmentWhereInput
  }

  export type departmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type profileCountOrderByAggregateInput = {
    id?: SortOrder
    created_date?: SortOrder
    profile_name?: SortOrder
    order_amount?: SortOrder
    bonus_amount?: SortOrder
    order_count?: SortOrder
    rank?: SortOrder
    cancel_count?: SortOrder
    complete_count?: SortOrder
    no_rating?: SortOrder
    profile_target?: SortOrder
    department_id?: SortOrder
    repeat_order?: SortOrder
    keywords?: SortOrder
    total_rating?: SortOrder
  }

  export type profileAvgOrderByAggregateInput = {
    id?: SortOrder
    order_amount?: SortOrder
    bonus_amount?: SortOrder
    order_count?: SortOrder
    rank?: SortOrder
    cancel_count?: SortOrder
    complete_count?: SortOrder
    no_rating?: SortOrder
    profile_target?: SortOrder
    department_id?: SortOrder
    repeat_order?: SortOrder
    total_rating?: SortOrder
  }

  export type profileMaxOrderByAggregateInput = {
    id?: SortOrder
    created_date?: SortOrder
    profile_name?: SortOrder
    order_amount?: SortOrder
    bonus_amount?: SortOrder
    order_count?: SortOrder
    rank?: SortOrder
    cancel_count?: SortOrder
    complete_count?: SortOrder
    no_rating?: SortOrder
    profile_target?: SortOrder
    department_id?: SortOrder
    repeat_order?: SortOrder
    keywords?: SortOrder
    total_rating?: SortOrder
  }

  export type profileMinOrderByAggregateInput = {
    id?: SortOrder
    created_date?: SortOrder
    profile_name?: SortOrder
    order_amount?: SortOrder
    bonus_amount?: SortOrder
    order_count?: SortOrder
    rank?: SortOrder
    cancel_count?: SortOrder
    complete_count?: SortOrder
    no_rating?: SortOrder
    profile_target?: SortOrder
    department_id?: SortOrder
    repeat_order?: SortOrder
    keywords?: SortOrder
    total_rating?: SortOrder
  }

  export type profileSumOrderByAggregateInput = {
    id?: SortOrder
    order_amount?: SortOrder
    bonus_amount?: SortOrder
    order_count?: SortOrder
    rank?: SortOrder
    cancel_count?: SortOrder
    complete_count?: SortOrder
    no_rating?: SortOrder
    profile_target?: SortOrder
    department_id?: SortOrder
    repeat_order?: SortOrder
    total_rating?: SortOrder
  }

  export type team_memberCountOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    number?: SortOrder
    permanent_address?: SortOrder
    present_address?: SortOrder
    gender?: SortOrder
    blood_group?: SortOrder
    relationship?: SortOrder
    guardian_relation?: SortOrder
    guardian_number?: SortOrder
    guardian_address?: SortOrder
    team_id?: SortOrder
    religion?: SortOrder
    education?: SortOrder
    dp?: SortOrder
    role?: SortOrder
    target?: SortOrder
    rating?: SortOrder
    rewards?: SortOrder
    account_status?: SortOrder
    password?: SortOrder
    designation?: SortOrder
    uid?: SortOrder
  }

  export type team_memberAvgOrderByAggregateInput = {
    id?: SortOrder
    team_id?: SortOrder
    target?: SortOrder
    rating?: SortOrder
    rewards?: SortOrder
  }

  export type team_memberMaxOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    number?: SortOrder
    permanent_address?: SortOrder
    present_address?: SortOrder
    gender?: SortOrder
    blood_group?: SortOrder
    relationship?: SortOrder
    guardian_relation?: SortOrder
    guardian_number?: SortOrder
    guardian_address?: SortOrder
    team_id?: SortOrder
    religion?: SortOrder
    education?: SortOrder
    dp?: SortOrder
    role?: SortOrder
    target?: SortOrder
    rating?: SortOrder
    rewards?: SortOrder
    account_status?: SortOrder
    password?: SortOrder
    designation?: SortOrder
    uid?: SortOrder
  }

  export type team_memberMinOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    number?: SortOrder
    permanent_address?: SortOrder
    present_address?: SortOrder
    gender?: SortOrder
    blood_group?: SortOrder
    relationship?: SortOrder
    guardian_relation?: SortOrder
    guardian_number?: SortOrder
    guardian_address?: SortOrder
    team_id?: SortOrder
    religion?: SortOrder
    education?: SortOrder
    dp?: SortOrder
    role?: SortOrder
    target?: SortOrder
    rating?: SortOrder
    rewards?: SortOrder
    account_status?: SortOrder
    password?: SortOrder
    designation?: SortOrder
    uid?: SortOrder
  }

  export type team_memberSumOrderByAggregateInput = {
    id?: SortOrder
    team_id?: SortOrder
    target?: SortOrder
    rating?: SortOrder
    rewards?: SortOrder
  }

  export type ProjectScalarRelationFilter = {
    is?: projectWhereInput
    isNot?: projectWhereInput
  }

  export type member_distributionCountOrderByAggregateInput = {
    id?: SortOrder
    team_member_id?: SortOrder
    amount?: SortOrder
    project_id?: SortOrder
  }

  export type member_distributionAvgOrderByAggregateInput = {
    id?: SortOrder
    team_member_id?: SortOrder
    amount?: SortOrder
    project_id?: SortOrder
  }

  export type member_distributionMaxOrderByAggregateInput = {
    id?: SortOrder
    team_member_id?: SortOrder
    amount?: SortOrder
    project_id?: SortOrder
  }

  export type member_distributionMinOrderByAggregateInput = {
    id?: SortOrder
    team_member_id?: SortOrder
    amount?: SortOrder
    project_id?: SortOrder
  }

  export type member_distributionSumOrderByAggregateInput = {
    id?: SortOrder
    team_member_id?: SortOrder
    amount?: SortOrder
    project_id?: SortOrder
  }

  export type revisionCountOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    revision_date?: SortOrder
    revision_comments?: SortOrder
    delivery_date?: SortOrder
    metting_link?: SortOrder
    metting_date?: SortOrder
  }

  export type revisionAvgOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
  }

  export type revisionMaxOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    revision_date?: SortOrder
    revision_comments?: SortOrder
    delivery_date?: SortOrder
    metting_link?: SortOrder
    metting_date?: SortOrder
  }

  export type revisionMinOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    revision_date?: SortOrder
    revision_comments?: SortOrder
    delivery_date?: SortOrder
    metting_link?: SortOrder
    metting_date?: SortOrder
  }

  export type revisionSumOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
  }

  export type Team_memberNullableScalarRelationFilter = {
    is?: team_memberWhereInput | null
    isNot?: team_memberWhereInput | null
  }

  export type today_taskCountOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    client_name?: SortOrder
    expected_finish_time?: SortOrder
    team_id?: SortOrder
    ops_status?: SortOrder
    team_member_id?: SortOrder
  }

  export type today_taskAvgOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    team_id?: SortOrder
    team_member_id?: SortOrder
  }

  export type today_taskMaxOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    client_name?: SortOrder
    expected_finish_time?: SortOrder
    team_id?: SortOrder
    ops_status?: SortOrder
    team_member_id?: SortOrder
  }

  export type today_taskMinOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    client_name?: SortOrder
    expected_finish_time?: SortOrder
    team_id?: SortOrder
    ops_status?: SortOrder
    team_member_id?: SortOrder
  }

  export type today_taskSumOrderByAggregateInput = {
    id?: SortOrder
    project_id?: SortOrder
    team_id?: SortOrder
    team_member_id?: SortOrder
  }

  export type departmentCreateNestedOneWithoutAssign_projectInput = {
    create?: XOR<departmentCreateWithoutAssign_projectInput, departmentUncheckedCreateWithoutAssign_projectInput>
    connectOrCreate?: departmentCreateOrConnectWithoutAssign_projectInput
    connect?: departmentWhereUniqueInput
  }

  export type team_memberCreateNestedOneWithoutProjectInput = {
    create?: XOR<team_memberCreateWithoutProjectInput, team_memberUncheckedCreateWithoutProjectInput>
    connectOrCreate?: team_memberCreateOrConnectWithoutProjectInput
    connect?: team_memberWhereUniqueInput
  }

  export type profileCreateNestedOneWithoutProjectsInput = {
    create?: XOR<profileCreateWithoutProjectsInput, profileUncheckedCreateWithoutProjectsInput>
    connectOrCreate?: profileCreateOrConnectWithoutProjectsInput
    connect?: profileWhereUniqueInput
  }

  export type teamCreateNestedOneWithoutProjectInput = {
    create?: XOR<teamCreateWithoutProjectInput, teamUncheckedCreateWithoutProjectInput>
    connectOrCreate?: teamCreateOrConnectWithoutProjectInput
    connect?: teamWhereUniqueInput
  }

  export type today_taskCreateNestedManyWithoutProjectInput = {
    create?: XOR<today_taskCreateWithoutProjectInput, today_taskUncheckedCreateWithoutProjectInput> | today_taskCreateWithoutProjectInput[] | today_taskUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: today_taskCreateOrConnectWithoutProjectInput | today_taskCreateOrConnectWithoutProjectInput[]
    createMany?: today_taskCreateManyProjectInputEnvelope
    connect?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
  }

  export type team_memberCreateNestedManyWithoutAssigned_projectsInput = {
    create?: XOR<team_memberCreateWithoutAssigned_projectsInput, team_memberUncheckedCreateWithoutAssigned_projectsInput> | team_memberCreateWithoutAssigned_projectsInput[] | team_memberUncheckedCreateWithoutAssigned_projectsInput[]
    connectOrCreate?: team_memberCreateOrConnectWithoutAssigned_projectsInput | team_memberCreateOrConnectWithoutAssigned_projectsInput[]
    connect?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
  }

  export type member_distributionCreateNestedManyWithoutProjectInput = {
    create?: XOR<member_distributionCreateWithoutProjectInput, member_distributionUncheckedCreateWithoutProjectInput> | member_distributionCreateWithoutProjectInput[] | member_distributionUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: member_distributionCreateOrConnectWithoutProjectInput | member_distributionCreateOrConnectWithoutProjectInput[]
    createMany?: member_distributionCreateManyProjectInputEnvelope
    connect?: member_distributionWhereUniqueInput | member_distributionWhereUniqueInput[]
  }

  export type today_taskUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<today_taskCreateWithoutProjectInput, today_taskUncheckedCreateWithoutProjectInput> | today_taskCreateWithoutProjectInput[] | today_taskUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: today_taskCreateOrConnectWithoutProjectInput | today_taskCreateOrConnectWithoutProjectInput[]
    createMany?: today_taskCreateManyProjectInputEnvelope
    connect?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
  }

  export type team_memberUncheckedCreateNestedManyWithoutAssigned_projectsInput = {
    create?: XOR<team_memberCreateWithoutAssigned_projectsInput, team_memberUncheckedCreateWithoutAssigned_projectsInput> | team_memberCreateWithoutAssigned_projectsInput[] | team_memberUncheckedCreateWithoutAssigned_projectsInput[]
    connectOrCreate?: team_memberCreateOrConnectWithoutAssigned_projectsInput | team_memberCreateOrConnectWithoutAssigned_projectsInput[]
    connect?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
  }

  export type member_distributionUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<member_distributionCreateWithoutProjectInput, member_distributionUncheckedCreateWithoutProjectInput> | member_distributionCreateWithoutProjectInput[] | member_distributionUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: member_distributionCreateOrConnectWithoutProjectInput | member_distributionCreateOrConnectWithoutProjectInput[]
    createMany?: member_distributionCreateManyProjectInputEnvelope
    connect?: member_distributionWhereUniqueInput | member_distributionWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type departmentUpdateOneRequiredWithoutAssign_projectNestedInput = {
    create?: XOR<departmentCreateWithoutAssign_projectInput, departmentUncheckedCreateWithoutAssign_projectInput>
    connectOrCreate?: departmentCreateOrConnectWithoutAssign_projectInput
    upsert?: departmentUpsertWithoutAssign_projectInput
    connect?: departmentWhereUniqueInput
    update?: XOR<XOR<departmentUpdateToOneWithWhereWithoutAssign_projectInput, departmentUpdateWithoutAssign_projectInput>, departmentUncheckedUpdateWithoutAssign_projectInput>
  }

  export type team_memberUpdateOneRequiredWithoutProjectNestedInput = {
    create?: XOR<team_memberCreateWithoutProjectInput, team_memberUncheckedCreateWithoutProjectInput>
    connectOrCreate?: team_memberCreateOrConnectWithoutProjectInput
    upsert?: team_memberUpsertWithoutProjectInput
    connect?: team_memberWhereUniqueInput
    update?: XOR<XOR<team_memberUpdateToOneWithWhereWithoutProjectInput, team_memberUpdateWithoutProjectInput>, team_memberUncheckedUpdateWithoutProjectInput>
  }

  export type profileUpdateOneWithoutProjectsNestedInput = {
    create?: XOR<profileCreateWithoutProjectsInput, profileUncheckedCreateWithoutProjectsInput>
    connectOrCreate?: profileCreateOrConnectWithoutProjectsInput
    upsert?: profileUpsertWithoutProjectsInput
    disconnect?: profileWhereInput | boolean
    delete?: profileWhereInput | boolean
    connect?: profileWhereUniqueInput
    update?: XOR<XOR<profileUpdateToOneWithWhereWithoutProjectsInput, profileUpdateWithoutProjectsInput>, profileUncheckedUpdateWithoutProjectsInput>
  }

  export type teamUpdateOneWithoutProjectNestedInput = {
    create?: XOR<teamCreateWithoutProjectInput, teamUncheckedCreateWithoutProjectInput>
    connectOrCreate?: teamCreateOrConnectWithoutProjectInput
    upsert?: teamUpsertWithoutProjectInput
    disconnect?: teamWhereInput | boolean
    delete?: teamWhereInput | boolean
    connect?: teamWhereUniqueInput
    update?: XOR<XOR<teamUpdateToOneWithWhereWithoutProjectInput, teamUpdateWithoutProjectInput>, teamUncheckedUpdateWithoutProjectInput>
  }

  export type today_taskUpdateManyWithoutProjectNestedInput = {
    create?: XOR<today_taskCreateWithoutProjectInput, today_taskUncheckedCreateWithoutProjectInput> | today_taskCreateWithoutProjectInput[] | today_taskUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: today_taskCreateOrConnectWithoutProjectInput | today_taskCreateOrConnectWithoutProjectInput[]
    upsert?: today_taskUpsertWithWhereUniqueWithoutProjectInput | today_taskUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: today_taskCreateManyProjectInputEnvelope
    set?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    disconnect?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    delete?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    connect?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    update?: today_taskUpdateWithWhereUniqueWithoutProjectInput | today_taskUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: today_taskUpdateManyWithWhereWithoutProjectInput | today_taskUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: today_taskScalarWhereInput | today_taskScalarWhereInput[]
  }

  export type team_memberUpdateManyWithoutAssigned_projectsNestedInput = {
    create?: XOR<team_memberCreateWithoutAssigned_projectsInput, team_memberUncheckedCreateWithoutAssigned_projectsInput> | team_memberCreateWithoutAssigned_projectsInput[] | team_memberUncheckedCreateWithoutAssigned_projectsInput[]
    connectOrCreate?: team_memberCreateOrConnectWithoutAssigned_projectsInput | team_memberCreateOrConnectWithoutAssigned_projectsInput[]
    upsert?: team_memberUpsertWithWhereUniqueWithoutAssigned_projectsInput | team_memberUpsertWithWhereUniqueWithoutAssigned_projectsInput[]
    set?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    disconnect?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    delete?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    connect?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    update?: team_memberUpdateWithWhereUniqueWithoutAssigned_projectsInput | team_memberUpdateWithWhereUniqueWithoutAssigned_projectsInput[]
    updateMany?: team_memberUpdateManyWithWhereWithoutAssigned_projectsInput | team_memberUpdateManyWithWhereWithoutAssigned_projectsInput[]
    deleteMany?: team_memberScalarWhereInput | team_memberScalarWhereInput[]
  }

  export type member_distributionUpdateManyWithoutProjectNestedInput = {
    create?: XOR<member_distributionCreateWithoutProjectInput, member_distributionUncheckedCreateWithoutProjectInput> | member_distributionCreateWithoutProjectInput[] | member_distributionUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: member_distributionCreateOrConnectWithoutProjectInput | member_distributionCreateOrConnectWithoutProjectInput[]
    upsert?: member_distributionUpsertWithWhereUniqueWithoutProjectInput | member_distributionUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: member_distributionCreateManyProjectInputEnvelope
    set?: member_distributionWhereUniqueInput | member_distributionWhereUniqueInput[]
    disconnect?: member_distributionWhereUniqueInput | member_distributionWhereUniqueInput[]
    delete?: member_distributionWhereUniqueInput | member_distributionWhereUniqueInput[]
    connect?: member_distributionWhereUniqueInput | member_distributionWhereUniqueInput[]
    update?: member_distributionUpdateWithWhereUniqueWithoutProjectInput | member_distributionUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: member_distributionUpdateManyWithWhereWithoutProjectInput | member_distributionUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: member_distributionScalarWhereInput | member_distributionScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type today_taskUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<today_taskCreateWithoutProjectInput, today_taskUncheckedCreateWithoutProjectInput> | today_taskCreateWithoutProjectInput[] | today_taskUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: today_taskCreateOrConnectWithoutProjectInput | today_taskCreateOrConnectWithoutProjectInput[]
    upsert?: today_taskUpsertWithWhereUniqueWithoutProjectInput | today_taskUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: today_taskCreateManyProjectInputEnvelope
    set?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    disconnect?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    delete?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    connect?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    update?: today_taskUpdateWithWhereUniqueWithoutProjectInput | today_taskUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: today_taskUpdateManyWithWhereWithoutProjectInput | today_taskUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: today_taskScalarWhereInput | today_taskScalarWhereInput[]
  }

  export type team_memberUncheckedUpdateManyWithoutAssigned_projectsNestedInput = {
    create?: XOR<team_memberCreateWithoutAssigned_projectsInput, team_memberUncheckedCreateWithoutAssigned_projectsInput> | team_memberCreateWithoutAssigned_projectsInput[] | team_memberUncheckedCreateWithoutAssigned_projectsInput[]
    connectOrCreate?: team_memberCreateOrConnectWithoutAssigned_projectsInput | team_memberCreateOrConnectWithoutAssigned_projectsInput[]
    upsert?: team_memberUpsertWithWhereUniqueWithoutAssigned_projectsInput | team_memberUpsertWithWhereUniqueWithoutAssigned_projectsInput[]
    set?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    disconnect?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    delete?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    connect?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    update?: team_memberUpdateWithWhereUniqueWithoutAssigned_projectsInput | team_memberUpdateWithWhereUniqueWithoutAssigned_projectsInput[]
    updateMany?: team_memberUpdateManyWithWhereWithoutAssigned_projectsInput | team_memberUpdateManyWithWhereWithoutAssigned_projectsInput[]
    deleteMany?: team_memberScalarWhereInput | team_memberScalarWhereInput[]
  }

  export type member_distributionUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<member_distributionCreateWithoutProjectInput, member_distributionUncheckedCreateWithoutProjectInput> | member_distributionCreateWithoutProjectInput[] | member_distributionUncheckedCreateWithoutProjectInput[]
    connectOrCreate?: member_distributionCreateOrConnectWithoutProjectInput | member_distributionCreateOrConnectWithoutProjectInput[]
    upsert?: member_distributionUpsertWithWhereUniqueWithoutProjectInput | member_distributionUpsertWithWhereUniqueWithoutProjectInput[]
    createMany?: member_distributionCreateManyProjectInputEnvelope
    set?: member_distributionWhereUniqueInput | member_distributionWhereUniqueInput[]
    disconnect?: member_distributionWhereUniqueInput | member_distributionWhereUniqueInput[]
    delete?: member_distributionWhereUniqueInput | member_distributionWhereUniqueInput[]
    connect?: member_distributionWhereUniqueInput | member_distributionWhereUniqueInput[]
    update?: member_distributionUpdateWithWhereUniqueWithoutProjectInput | member_distributionUpdateWithWhereUniqueWithoutProjectInput[]
    updateMany?: member_distributionUpdateManyWithWhereWithoutProjectInput | member_distributionUpdateManyWithWhereWithoutProjectInput[]
    deleteMany?: member_distributionScalarWhereInput | member_distributionScalarWhereInput[]
  }

  export type projectCreateNestedManyWithoutTeamInput = {
    create?: XOR<projectCreateWithoutTeamInput, projectUncheckedCreateWithoutTeamInput> | projectCreateWithoutTeamInput[] | projectUncheckedCreateWithoutTeamInput[]
    connectOrCreate?: projectCreateOrConnectWithoutTeamInput | projectCreateOrConnectWithoutTeamInput[]
    createMany?: projectCreateManyTeamInputEnvelope
    connect?: projectWhereUniqueInput | projectWhereUniqueInput[]
  }

  export type departmentCreateNestedOneWithoutDepartment_teamsInput = {
    create?: XOR<departmentCreateWithoutDepartment_teamsInput, departmentUncheckedCreateWithoutDepartment_teamsInput>
    connectOrCreate?: departmentCreateOrConnectWithoutDepartment_teamsInput
    connect?: departmentWhereUniqueInput
  }

  export type team_memberCreateNestedManyWithoutTeamInput = {
    create?: XOR<team_memberCreateWithoutTeamInput, team_memberUncheckedCreateWithoutTeamInput> | team_memberCreateWithoutTeamInput[] | team_memberUncheckedCreateWithoutTeamInput[]
    connectOrCreate?: team_memberCreateOrConnectWithoutTeamInput | team_memberCreateOrConnectWithoutTeamInput[]
    createMany?: team_memberCreateManyTeamInputEnvelope
    connect?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
  }

  export type today_taskCreateNestedManyWithoutTeamInput = {
    create?: XOR<today_taskCreateWithoutTeamInput, today_taskUncheckedCreateWithoutTeamInput> | today_taskCreateWithoutTeamInput[] | today_taskUncheckedCreateWithoutTeamInput[]
    connectOrCreate?: today_taskCreateOrConnectWithoutTeamInput | today_taskCreateOrConnectWithoutTeamInput[]
    createMany?: today_taskCreateManyTeamInputEnvelope
    connect?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
  }

  export type revisionCreateNestedManyWithoutTeamInput = {
    create?: XOR<revisionCreateWithoutTeamInput, revisionUncheckedCreateWithoutTeamInput> | revisionCreateWithoutTeamInput[] | revisionUncheckedCreateWithoutTeamInput[]
    connectOrCreate?: revisionCreateOrConnectWithoutTeamInput | revisionCreateOrConnectWithoutTeamInput[]
    connect?: revisionWhereUniqueInput | revisionWhereUniqueInput[]
  }

  export type projectUncheckedCreateNestedManyWithoutTeamInput = {
    create?: XOR<projectCreateWithoutTeamInput, projectUncheckedCreateWithoutTeamInput> | projectCreateWithoutTeamInput[] | projectUncheckedCreateWithoutTeamInput[]
    connectOrCreate?: projectCreateOrConnectWithoutTeamInput | projectCreateOrConnectWithoutTeamInput[]
    createMany?: projectCreateManyTeamInputEnvelope
    connect?: projectWhereUniqueInput | projectWhereUniqueInput[]
  }

  export type team_memberUncheckedCreateNestedManyWithoutTeamInput = {
    create?: XOR<team_memberCreateWithoutTeamInput, team_memberUncheckedCreateWithoutTeamInput> | team_memberCreateWithoutTeamInput[] | team_memberUncheckedCreateWithoutTeamInput[]
    connectOrCreate?: team_memberCreateOrConnectWithoutTeamInput | team_memberCreateOrConnectWithoutTeamInput[]
    createMany?: team_memberCreateManyTeamInputEnvelope
    connect?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
  }

  export type today_taskUncheckedCreateNestedManyWithoutTeamInput = {
    create?: XOR<today_taskCreateWithoutTeamInput, today_taskUncheckedCreateWithoutTeamInput> | today_taskCreateWithoutTeamInput[] | today_taskUncheckedCreateWithoutTeamInput[]
    connectOrCreate?: today_taskCreateOrConnectWithoutTeamInput | today_taskCreateOrConnectWithoutTeamInput[]
    createMany?: today_taskCreateManyTeamInputEnvelope
    connect?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
  }

  export type revisionUncheckedCreateNestedManyWithoutTeamInput = {
    create?: XOR<revisionCreateWithoutTeamInput, revisionUncheckedCreateWithoutTeamInput> | revisionCreateWithoutTeamInput[] | revisionUncheckedCreateWithoutTeamInput[]
    connectOrCreate?: revisionCreateOrConnectWithoutTeamInput | revisionCreateOrConnectWithoutTeamInput[]
    connect?: revisionWhereUniqueInput | revisionWhereUniqueInput[]
  }

  export type projectUpdateManyWithoutTeamNestedInput = {
    create?: XOR<projectCreateWithoutTeamInput, projectUncheckedCreateWithoutTeamInput> | projectCreateWithoutTeamInput[] | projectUncheckedCreateWithoutTeamInput[]
    connectOrCreate?: projectCreateOrConnectWithoutTeamInput | projectCreateOrConnectWithoutTeamInput[]
    upsert?: projectUpsertWithWhereUniqueWithoutTeamInput | projectUpsertWithWhereUniqueWithoutTeamInput[]
    createMany?: projectCreateManyTeamInputEnvelope
    set?: projectWhereUniqueInput | projectWhereUniqueInput[]
    disconnect?: projectWhereUniqueInput | projectWhereUniqueInput[]
    delete?: projectWhereUniqueInput | projectWhereUniqueInput[]
    connect?: projectWhereUniqueInput | projectWhereUniqueInput[]
    update?: projectUpdateWithWhereUniqueWithoutTeamInput | projectUpdateWithWhereUniqueWithoutTeamInput[]
    updateMany?: projectUpdateManyWithWhereWithoutTeamInput | projectUpdateManyWithWhereWithoutTeamInput[]
    deleteMany?: projectScalarWhereInput | projectScalarWhereInput[]
  }

  export type departmentUpdateOneRequiredWithoutDepartment_teamsNestedInput = {
    create?: XOR<departmentCreateWithoutDepartment_teamsInput, departmentUncheckedCreateWithoutDepartment_teamsInput>
    connectOrCreate?: departmentCreateOrConnectWithoutDepartment_teamsInput
    upsert?: departmentUpsertWithoutDepartment_teamsInput
    connect?: departmentWhereUniqueInput
    update?: XOR<XOR<departmentUpdateToOneWithWhereWithoutDepartment_teamsInput, departmentUpdateWithoutDepartment_teamsInput>, departmentUncheckedUpdateWithoutDepartment_teamsInput>
  }

  export type team_memberUpdateManyWithoutTeamNestedInput = {
    create?: XOR<team_memberCreateWithoutTeamInput, team_memberUncheckedCreateWithoutTeamInput> | team_memberCreateWithoutTeamInput[] | team_memberUncheckedCreateWithoutTeamInput[]
    connectOrCreate?: team_memberCreateOrConnectWithoutTeamInput | team_memberCreateOrConnectWithoutTeamInput[]
    upsert?: team_memberUpsertWithWhereUniqueWithoutTeamInput | team_memberUpsertWithWhereUniqueWithoutTeamInput[]
    createMany?: team_memberCreateManyTeamInputEnvelope
    set?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    disconnect?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    delete?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    connect?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    update?: team_memberUpdateWithWhereUniqueWithoutTeamInput | team_memberUpdateWithWhereUniqueWithoutTeamInput[]
    updateMany?: team_memberUpdateManyWithWhereWithoutTeamInput | team_memberUpdateManyWithWhereWithoutTeamInput[]
    deleteMany?: team_memberScalarWhereInput | team_memberScalarWhereInput[]
  }

  export type today_taskUpdateManyWithoutTeamNestedInput = {
    create?: XOR<today_taskCreateWithoutTeamInput, today_taskUncheckedCreateWithoutTeamInput> | today_taskCreateWithoutTeamInput[] | today_taskUncheckedCreateWithoutTeamInput[]
    connectOrCreate?: today_taskCreateOrConnectWithoutTeamInput | today_taskCreateOrConnectWithoutTeamInput[]
    upsert?: today_taskUpsertWithWhereUniqueWithoutTeamInput | today_taskUpsertWithWhereUniqueWithoutTeamInput[]
    createMany?: today_taskCreateManyTeamInputEnvelope
    set?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    disconnect?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    delete?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    connect?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    update?: today_taskUpdateWithWhereUniqueWithoutTeamInput | today_taskUpdateWithWhereUniqueWithoutTeamInput[]
    updateMany?: today_taskUpdateManyWithWhereWithoutTeamInput | today_taskUpdateManyWithWhereWithoutTeamInput[]
    deleteMany?: today_taskScalarWhereInput | today_taskScalarWhereInput[]
  }

  export type revisionUpdateManyWithoutTeamNestedInput = {
    create?: XOR<revisionCreateWithoutTeamInput, revisionUncheckedCreateWithoutTeamInput> | revisionCreateWithoutTeamInput[] | revisionUncheckedCreateWithoutTeamInput[]
    connectOrCreate?: revisionCreateOrConnectWithoutTeamInput | revisionCreateOrConnectWithoutTeamInput[]
    upsert?: revisionUpsertWithWhereUniqueWithoutTeamInput | revisionUpsertWithWhereUniqueWithoutTeamInput[]
    set?: revisionWhereUniqueInput | revisionWhereUniqueInput[]
    disconnect?: revisionWhereUniqueInput | revisionWhereUniqueInput[]
    delete?: revisionWhereUniqueInput | revisionWhereUniqueInput[]
    connect?: revisionWhereUniqueInput | revisionWhereUniqueInput[]
    update?: revisionUpdateWithWhereUniqueWithoutTeamInput | revisionUpdateWithWhereUniqueWithoutTeamInput[]
    updateMany?: revisionUpdateManyWithWhereWithoutTeamInput | revisionUpdateManyWithWhereWithoutTeamInput[]
    deleteMany?: revisionScalarWhereInput | revisionScalarWhereInput[]
  }

  export type projectUncheckedUpdateManyWithoutTeamNestedInput = {
    create?: XOR<projectCreateWithoutTeamInput, projectUncheckedCreateWithoutTeamInput> | projectCreateWithoutTeamInput[] | projectUncheckedCreateWithoutTeamInput[]
    connectOrCreate?: projectCreateOrConnectWithoutTeamInput | projectCreateOrConnectWithoutTeamInput[]
    upsert?: projectUpsertWithWhereUniqueWithoutTeamInput | projectUpsertWithWhereUniqueWithoutTeamInput[]
    createMany?: projectCreateManyTeamInputEnvelope
    set?: projectWhereUniqueInput | projectWhereUniqueInput[]
    disconnect?: projectWhereUniqueInput | projectWhereUniqueInput[]
    delete?: projectWhereUniqueInput | projectWhereUniqueInput[]
    connect?: projectWhereUniqueInput | projectWhereUniqueInput[]
    update?: projectUpdateWithWhereUniqueWithoutTeamInput | projectUpdateWithWhereUniqueWithoutTeamInput[]
    updateMany?: projectUpdateManyWithWhereWithoutTeamInput | projectUpdateManyWithWhereWithoutTeamInput[]
    deleteMany?: projectScalarWhereInput | projectScalarWhereInput[]
  }

  export type team_memberUncheckedUpdateManyWithoutTeamNestedInput = {
    create?: XOR<team_memberCreateWithoutTeamInput, team_memberUncheckedCreateWithoutTeamInput> | team_memberCreateWithoutTeamInput[] | team_memberUncheckedCreateWithoutTeamInput[]
    connectOrCreate?: team_memberCreateOrConnectWithoutTeamInput | team_memberCreateOrConnectWithoutTeamInput[]
    upsert?: team_memberUpsertWithWhereUniqueWithoutTeamInput | team_memberUpsertWithWhereUniqueWithoutTeamInput[]
    createMany?: team_memberCreateManyTeamInputEnvelope
    set?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    disconnect?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    delete?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    connect?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    update?: team_memberUpdateWithWhereUniqueWithoutTeamInput | team_memberUpdateWithWhereUniqueWithoutTeamInput[]
    updateMany?: team_memberUpdateManyWithWhereWithoutTeamInput | team_memberUpdateManyWithWhereWithoutTeamInput[]
    deleteMany?: team_memberScalarWhereInput | team_memberScalarWhereInput[]
  }

  export type today_taskUncheckedUpdateManyWithoutTeamNestedInput = {
    create?: XOR<today_taskCreateWithoutTeamInput, today_taskUncheckedCreateWithoutTeamInput> | today_taskCreateWithoutTeamInput[] | today_taskUncheckedCreateWithoutTeamInput[]
    connectOrCreate?: today_taskCreateOrConnectWithoutTeamInput | today_taskCreateOrConnectWithoutTeamInput[]
    upsert?: today_taskUpsertWithWhereUniqueWithoutTeamInput | today_taskUpsertWithWhereUniqueWithoutTeamInput[]
    createMany?: today_taskCreateManyTeamInputEnvelope
    set?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    disconnect?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    delete?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    connect?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    update?: today_taskUpdateWithWhereUniqueWithoutTeamInput | today_taskUpdateWithWhereUniqueWithoutTeamInput[]
    updateMany?: today_taskUpdateManyWithWhereWithoutTeamInput | today_taskUpdateManyWithWhereWithoutTeamInput[]
    deleteMany?: today_taskScalarWhereInput | today_taskScalarWhereInput[]
  }

  export type revisionUncheckedUpdateManyWithoutTeamNestedInput = {
    create?: XOR<revisionCreateWithoutTeamInput, revisionUncheckedCreateWithoutTeamInput> | revisionCreateWithoutTeamInput[] | revisionUncheckedCreateWithoutTeamInput[]
    connectOrCreate?: revisionCreateOrConnectWithoutTeamInput | revisionCreateOrConnectWithoutTeamInput[]
    upsert?: revisionUpsertWithWhereUniqueWithoutTeamInput | revisionUpsertWithWhereUniqueWithoutTeamInput[]
    set?: revisionWhereUniqueInput | revisionWhereUniqueInput[]
    disconnect?: revisionWhereUniqueInput | revisionWhereUniqueInput[]
    delete?: revisionWhereUniqueInput | revisionWhereUniqueInput[]
    connect?: revisionWhereUniqueInput | revisionWhereUniqueInput[]
    update?: revisionUpdateWithWhereUniqueWithoutTeamInput | revisionUpdateWithWhereUniqueWithoutTeamInput[]
    updateMany?: revisionUpdateManyWithWhereWithoutTeamInput | revisionUpdateManyWithWhereWithoutTeamInput[]
    deleteMany?: revisionScalarWhereInput | revisionScalarWhereInput[]
  }

  export type projectCreateNestedManyWithoutDepartmentInput = {
    create?: XOR<projectCreateWithoutDepartmentInput, projectUncheckedCreateWithoutDepartmentInput> | projectCreateWithoutDepartmentInput[] | projectUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: projectCreateOrConnectWithoutDepartmentInput | projectCreateOrConnectWithoutDepartmentInput[]
    createMany?: projectCreateManyDepartmentInputEnvelope
    connect?: projectWhereUniqueInput | projectWhereUniqueInput[]
  }

  export type teamCreateNestedManyWithoutDepartmentInput = {
    create?: XOR<teamCreateWithoutDepartmentInput, teamUncheckedCreateWithoutDepartmentInput> | teamCreateWithoutDepartmentInput[] | teamUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: teamCreateOrConnectWithoutDepartmentInput | teamCreateOrConnectWithoutDepartmentInput[]
    createMany?: teamCreateManyDepartmentInputEnvelope
    connect?: teamWhereUniqueInput | teamWhereUniqueInput[]
  }

  export type profileCreateNestedManyWithoutDepartmentInput = {
    create?: XOR<profileCreateWithoutDepartmentInput, profileUncheckedCreateWithoutDepartmentInput> | profileCreateWithoutDepartmentInput[] | profileUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: profileCreateOrConnectWithoutDepartmentInput | profileCreateOrConnectWithoutDepartmentInput[]
    connect?: profileWhereUniqueInput | profileWhereUniqueInput[]
  }

  export type projectUncheckedCreateNestedManyWithoutDepartmentInput = {
    create?: XOR<projectCreateWithoutDepartmentInput, projectUncheckedCreateWithoutDepartmentInput> | projectCreateWithoutDepartmentInput[] | projectUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: projectCreateOrConnectWithoutDepartmentInput | projectCreateOrConnectWithoutDepartmentInput[]
    createMany?: projectCreateManyDepartmentInputEnvelope
    connect?: projectWhereUniqueInput | projectWhereUniqueInput[]
  }

  export type teamUncheckedCreateNestedManyWithoutDepartmentInput = {
    create?: XOR<teamCreateWithoutDepartmentInput, teamUncheckedCreateWithoutDepartmentInput> | teamCreateWithoutDepartmentInput[] | teamUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: teamCreateOrConnectWithoutDepartmentInput | teamCreateOrConnectWithoutDepartmentInput[]
    createMany?: teamCreateManyDepartmentInputEnvelope
    connect?: teamWhereUniqueInput | teamWhereUniqueInput[]
  }

  export type profileUncheckedCreateNestedManyWithoutDepartmentInput = {
    create?: XOR<profileCreateWithoutDepartmentInput, profileUncheckedCreateWithoutDepartmentInput> | profileCreateWithoutDepartmentInput[] | profileUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: profileCreateOrConnectWithoutDepartmentInput | profileCreateOrConnectWithoutDepartmentInput[]
    connect?: profileWhereUniqueInput | profileWhereUniqueInput[]
  }

  export type projectUpdateManyWithoutDepartmentNestedInput = {
    create?: XOR<projectCreateWithoutDepartmentInput, projectUncheckedCreateWithoutDepartmentInput> | projectCreateWithoutDepartmentInput[] | projectUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: projectCreateOrConnectWithoutDepartmentInput | projectCreateOrConnectWithoutDepartmentInput[]
    upsert?: projectUpsertWithWhereUniqueWithoutDepartmentInput | projectUpsertWithWhereUniqueWithoutDepartmentInput[]
    createMany?: projectCreateManyDepartmentInputEnvelope
    set?: projectWhereUniqueInput | projectWhereUniqueInput[]
    disconnect?: projectWhereUniqueInput | projectWhereUniqueInput[]
    delete?: projectWhereUniqueInput | projectWhereUniqueInput[]
    connect?: projectWhereUniqueInput | projectWhereUniqueInput[]
    update?: projectUpdateWithWhereUniqueWithoutDepartmentInput | projectUpdateWithWhereUniqueWithoutDepartmentInput[]
    updateMany?: projectUpdateManyWithWhereWithoutDepartmentInput | projectUpdateManyWithWhereWithoutDepartmentInput[]
    deleteMany?: projectScalarWhereInput | projectScalarWhereInput[]
  }

  export type teamUpdateManyWithoutDepartmentNestedInput = {
    create?: XOR<teamCreateWithoutDepartmentInput, teamUncheckedCreateWithoutDepartmentInput> | teamCreateWithoutDepartmentInput[] | teamUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: teamCreateOrConnectWithoutDepartmentInput | teamCreateOrConnectWithoutDepartmentInput[]
    upsert?: teamUpsertWithWhereUniqueWithoutDepartmentInput | teamUpsertWithWhereUniqueWithoutDepartmentInput[]
    createMany?: teamCreateManyDepartmentInputEnvelope
    set?: teamWhereUniqueInput | teamWhereUniqueInput[]
    disconnect?: teamWhereUniqueInput | teamWhereUniqueInput[]
    delete?: teamWhereUniqueInput | teamWhereUniqueInput[]
    connect?: teamWhereUniqueInput | teamWhereUniqueInput[]
    update?: teamUpdateWithWhereUniqueWithoutDepartmentInput | teamUpdateWithWhereUniqueWithoutDepartmentInput[]
    updateMany?: teamUpdateManyWithWhereWithoutDepartmentInput | teamUpdateManyWithWhereWithoutDepartmentInput[]
    deleteMany?: teamScalarWhereInput | teamScalarWhereInput[]
  }

  export type profileUpdateManyWithoutDepartmentNestedInput = {
    create?: XOR<profileCreateWithoutDepartmentInput, profileUncheckedCreateWithoutDepartmentInput> | profileCreateWithoutDepartmentInput[] | profileUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: profileCreateOrConnectWithoutDepartmentInput | profileCreateOrConnectWithoutDepartmentInput[]
    upsert?: profileUpsertWithWhereUniqueWithoutDepartmentInput | profileUpsertWithWhereUniqueWithoutDepartmentInput[]
    set?: profileWhereUniqueInput | profileWhereUniqueInput[]
    disconnect?: profileWhereUniqueInput | profileWhereUniqueInput[]
    delete?: profileWhereUniqueInput | profileWhereUniqueInput[]
    connect?: profileWhereUniqueInput | profileWhereUniqueInput[]
    update?: profileUpdateWithWhereUniqueWithoutDepartmentInput | profileUpdateWithWhereUniqueWithoutDepartmentInput[]
    updateMany?: profileUpdateManyWithWhereWithoutDepartmentInput | profileUpdateManyWithWhereWithoutDepartmentInput[]
    deleteMany?: profileScalarWhereInput | profileScalarWhereInput[]
  }

  export type projectUncheckedUpdateManyWithoutDepartmentNestedInput = {
    create?: XOR<projectCreateWithoutDepartmentInput, projectUncheckedCreateWithoutDepartmentInput> | projectCreateWithoutDepartmentInput[] | projectUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: projectCreateOrConnectWithoutDepartmentInput | projectCreateOrConnectWithoutDepartmentInput[]
    upsert?: projectUpsertWithWhereUniqueWithoutDepartmentInput | projectUpsertWithWhereUniqueWithoutDepartmentInput[]
    createMany?: projectCreateManyDepartmentInputEnvelope
    set?: projectWhereUniqueInput | projectWhereUniqueInput[]
    disconnect?: projectWhereUniqueInput | projectWhereUniqueInput[]
    delete?: projectWhereUniqueInput | projectWhereUniqueInput[]
    connect?: projectWhereUniqueInput | projectWhereUniqueInput[]
    update?: projectUpdateWithWhereUniqueWithoutDepartmentInput | projectUpdateWithWhereUniqueWithoutDepartmentInput[]
    updateMany?: projectUpdateManyWithWhereWithoutDepartmentInput | projectUpdateManyWithWhereWithoutDepartmentInput[]
    deleteMany?: projectScalarWhereInput | projectScalarWhereInput[]
  }

  export type teamUncheckedUpdateManyWithoutDepartmentNestedInput = {
    create?: XOR<teamCreateWithoutDepartmentInput, teamUncheckedCreateWithoutDepartmentInput> | teamCreateWithoutDepartmentInput[] | teamUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: teamCreateOrConnectWithoutDepartmentInput | teamCreateOrConnectWithoutDepartmentInput[]
    upsert?: teamUpsertWithWhereUniqueWithoutDepartmentInput | teamUpsertWithWhereUniqueWithoutDepartmentInput[]
    createMany?: teamCreateManyDepartmentInputEnvelope
    set?: teamWhereUniqueInput | teamWhereUniqueInput[]
    disconnect?: teamWhereUniqueInput | teamWhereUniqueInput[]
    delete?: teamWhereUniqueInput | teamWhereUniqueInput[]
    connect?: teamWhereUniqueInput | teamWhereUniqueInput[]
    update?: teamUpdateWithWhereUniqueWithoutDepartmentInput | teamUpdateWithWhereUniqueWithoutDepartmentInput[]
    updateMany?: teamUpdateManyWithWhereWithoutDepartmentInput | teamUpdateManyWithWhereWithoutDepartmentInput[]
    deleteMany?: teamScalarWhereInput | teamScalarWhereInput[]
  }

  export type profileUncheckedUpdateManyWithoutDepartmentNestedInput = {
    create?: XOR<profileCreateWithoutDepartmentInput, profileUncheckedCreateWithoutDepartmentInput> | profileCreateWithoutDepartmentInput[] | profileUncheckedCreateWithoutDepartmentInput[]
    connectOrCreate?: profileCreateOrConnectWithoutDepartmentInput | profileCreateOrConnectWithoutDepartmentInput[]
    upsert?: profileUpsertWithWhereUniqueWithoutDepartmentInput | profileUpsertWithWhereUniqueWithoutDepartmentInput[]
    set?: profileWhereUniqueInput | profileWhereUniqueInput[]
    disconnect?: profileWhereUniqueInput | profileWhereUniqueInput[]
    delete?: profileWhereUniqueInput | profileWhereUniqueInput[]
    connect?: profileWhereUniqueInput | profileWhereUniqueInput[]
    update?: profileUpdateWithWhereUniqueWithoutDepartmentInput | profileUpdateWithWhereUniqueWithoutDepartmentInput[]
    updateMany?: profileUpdateManyWithWhereWithoutDepartmentInput | profileUpdateManyWithWhereWithoutDepartmentInput[]
    deleteMany?: profileScalarWhereInput | profileScalarWhereInput[]
  }

  export type projectCreateNestedManyWithoutProfileInput = {
    create?: XOR<projectCreateWithoutProfileInput, projectUncheckedCreateWithoutProfileInput> | projectCreateWithoutProfileInput[] | projectUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: projectCreateOrConnectWithoutProfileInput | projectCreateOrConnectWithoutProfileInput[]
    createMany?: projectCreateManyProfileInputEnvelope
    connect?: projectWhereUniqueInput | projectWhereUniqueInput[]
  }

  export type departmentCreateNestedManyWithoutDepartment_profileInput = {
    create?: XOR<departmentCreateWithoutDepartment_profileInput, departmentUncheckedCreateWithoutDepartment_profileInput> | departmentCreateWithoutDepartment_profileInput[] | departmentUncheckedCreateWithoutDepartment_profileInput[]
    connectOrCreate?: departmentCreateOrConnectWithoutDepartment_profileInput | departmentCreateOrConnectWithoutDepartment_profileInput[]
    connect?: departmentWhereUniqueInput | departmentWhereUniqueInput[]
  }

  export type team_memberCreateNestedManyWithoutProfileInput = {
    create?: XOR<team_memberCreateWithoutProfileInput, team_memberUncheckedCreateWithoutProfileInput> | team_memberCreateWithoutProfileInput[] | team_memberUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: team_memberCreateOrConnectWithoutProfileInput | team_memberCreateOrConnectWithoutProfileInput[]
    connect?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
  }

  export type projectUncheckedCreateNestedManyWithoutProfileInput = {
    create?: XOR<projectCreateWithoutProfileInput, projectUncheckedCreateWithoutProfileInput> | projectCreateWithoutProfileInput[] | projectUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: projectCreateOrConnectWithoutProfileInput | projectCreateOrConnectWithoutProfileInput[]
    createMany?: projectCreateManyProfileInputEnvelope
    connect?: projectWhereUniqueInput | projectWhereUniqueInput[]
  }

  export type departmentUncheckedCreateNestedManyWithoutDepartment_profileInput = {
    create?: XOR<departmentCreateWithoutDepartment_profileInput, departmentUncheckedCreateWithoutDepartment_profileInput> | departmentCreateWithoutDepartment_profileInput[] | departmentUncheckedCreateWithoutDepartment_profileInput[]
    connectOrCreate?: departmentCreateOrConnectWithoutDepartment_profileInput | departmentCreateOrConnectWithoutDepartment_profileInput[]
    connect?: departmentWhereUniqueInput | departmentWhereUniqueInput[]
  }

  export type team_memberUncheckedCreateNestedManyWithoutProfileInput = {
    create?: XOR<team_memberCreateWithoutProfileInput, team_memberUncheckedCreateWithoutProfileInput> | team_memberCreateWithoutProfileInput[] | team_memberUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: team_memberCreateOrConnectWithoutProfileInput | team_memberCreateOrConnectWithoutProfileInput[]
    connect?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
  }

  export type projectUpdateManyWithoutProfileNestedInput = {
    create?: XOR<projectCreateWithoutProfileInput, projectUncheckedCreateWithoutProfileInput> | projectCreateWithoutProfileInput[] | projectUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: projectCreateOrConnectWithoutProfileInput | projectCreateOrConnectWithoutProfileInput[]
    upsert?: projectUpsertWithWhereUniqueWithoutProfileInput | projectUpsertWithWhereUniqueWithoutProfileInput[]
    createMany?: projectCreateManyProfileInputEnvelope
    set?: projectWhereUniqueInput | projectWhereUniqueInput[]
    disconnect?: projectWhereUniqueInput | projectWhereUniqueInput[]
    delete?: projectWhereUniqueInput | projectWhereUniqueInput[]
    connect?: projectWhereUniqueInput | projectWhereUniqueInput[]
    update?: projectUpdateWithWhereUniqueWithoutProfileInput | projectUpdateWithWhereUniqueWithoutProfileInput[]
    updateMany?: projectUpdateManyWithWhereWithoutProfileInput | projectUpdateManyWithWhereWithoutProfileInput[]
    deleteMany?: projectScalarWhereInput | projectScalarWhereInput[]
  }

  export type departmentUpdateManyWithoutDepartment_profileNestedInput = {
    create?: XOR<departmentCreateWithoutDepartment_profileInput, departmentUncheckedCreateWithoutDepartment_profileInput> | departmentCreateWithoutDepartment_profileInput[] | departmentUncheckedCreateWithoutDepartment_profileInput[]
    connectOrCreate?: departmentCreateOrConnectWithoutDepartment_profileInput | departmentCreateOrConnectWithoutDepartment_profileInput[]
    upsert?: departmentUpsertWithWhereUniqueWithoutDepartment_profileInput | departmentUpsertWithWhereUniqueWithoutDepartment_profileInput[]
    set?: departmentWhereUniqueInput | departmentWhereUniqueInput[]
    disconnect?: departmentWhereUniqueInput | departmentWhereUniqueInput[]
    delete?: departmentWhereUniqueInput | departmentWhereUniqueInput[]
    connect?: departmentWhereUniqueInput | departmentWhereUniqueInput[]
    update?: departmentUpdateWithWhereUniqueWithoutDepartment_profileInput | departmentUpdateWithWhereUniqueWithoutDepartment_profileInput[]
    updateMany?: departmentUpdateManyWithWhereWithoutDepartment_profileInput | departmentUpdateManyWithWhereWithoutDepartment_profileInput[]
    deleteMany?: departmentScalarWhereInput | departmentScalarWhereInput[]
  }

  export type team_memberUpdateManyWithoutProfileNestedInput = {
    create?: XOR<team_memberCreateWithoutProfileInput, team_memberUncheckedCreateWithoutProfileInput> | team_memberCreateWithoutProfileInput[] | team_memberUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: team_memberCreateOrConnectWithoutProfileInput | team_memberCreateOrConnectWithoutProfileInput[]
    upsert?: team_memberUpsertWithWhereUniqueWithoutProfileInput | team_memberUpsertWithWhereUniqueWithoutProfileInput[]
    set?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    disconnect?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    delete?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    connect?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    update?: team_memberUpdateWithWhereUniqueWithoutProfileInput | team_memberUpdateWithWhereUniqueWithoutProfileInput[]
    updateMany?: team_memberUpdateManyWithWhereWithoutProfileInput | team_memberUpdateManyWithWhereWithoutProfileInput[]
    deleteMany?: team_memberScalarWhereInput | team_memberScalarWhereInput[]
  }

  export type projectUncheckedUpdateManyWithoutProfileNestedInput = {
    create?: XOR<projectCreateWithoutProfileInput, projectUncheckedCreateWithoutProfileInput> | projectCreateWithoutProfileInput[] | projectUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: projectCreateOrConnectWithoutProfileInput | projectCreateOrConnectWithoutProfileInput[]
    upsert?: projectUpsertWithWhereUniqueWithoutProfileInput | projectUpsertWithWhereUniqueWithoutProfileInput[]
    createMany?: projectCreateManyProfileInputEnvelope
    set?: projectWhereUniqueInput | projectWhereUniqueInput[]
    disconnect?: projectWhereUniqueInput | projectWhereUniqueInput[]
    delete?: projectWhereUniqueInput | projectWhereUniqueInput[]
    connect?: projectWhereUniqueInput | projectWhereUniqueInput[]
    update?: projectUpdateWithWhereUniqueWithoutProfileInput | projectUpdateWithWhereUniqueWithoutProfileInput[]
    updateMany?: projectUpdateManyWithWhereWithoutProfileInput | projectUpdateManyWithWhereWithoutProfileInput[]
    deleteMany?: projectScalarWhereInput | projectScalarWhereInput[]
  }

  export type departmentUncheckedUpdateManyWithoutDepartment_profileNestedInput = {
    create?: XOR<departmentCreateWithoutDepartment_profileInput, departmentUncheckedCreateWithoutDepartment_profileInput> | departmentCreateWithoutDepartment_profileInput[] | departmentUncheckedCreateWithoutDepartment_profileInput[]
    connectOrCreate?: departmentCreateOrConnectWithoutDepartment_profileInput | departmentCreateOrConnectWithoutDepartment_profileInput[]
    upsert?: departmentUpsertWithWhereUniqueWithoutDepartment_profileInput | departmentUpsertWithWhereUniqueWithoutDepartment_profileInput[]
    set?: departmentWhereUniqueInput | departmentWhereUniqueInput[]
    disconnect?: departmentWhereUniqueInput | departmentWhereUniqueInput[]
    delete?: departmentWhereUniqueInput | departmentWhereUniqueInput[]
    connect?: departmentWhereUniqueInput | departmentWhereUniqueInput[]
    update?: departmentUpdateWithWhereUniqueWithoutDepartment_profileInput | departmentUpdateWithWhereUniqueWithoutDepartment_profileInput[]
    updateMany?: departmentUpdateManyWithWhereWithoutDepartment_profileInput | departmentUpdateManyWithWhereWithoutDepartment_profileInput[]
    deleteMany?: departmentScalarWhereInput | departmentScalarWhereInput[]
  }

  export type team_memberUncheckedUpdateManyWithoutProfileNestedInput = {
    create?: XOR<team_memberCreateWithoutProfileInput, team_memberUncheckedCreateWithoutProfileInput> | team_memberCreateWithoutProfileInput[] | team_memberUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: team_memberCreateOrConnectWithoutProfileInput | team_memberCreateOrConnectWithoutProfileInput[]
    upsert?: team_memberUpsertWithWhereUniqueWithoutProfileInput | team_memberUpsertWithWhereUniqueWithoutProfileInput[]
    set?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    disconnect?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    delete?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    connect?: team_memberWhereUniqueInput | team_memberWhereUniqueInput[]
    update?: team_memberUpdateWithWhereUniqueWithoutProfileInput | team_memberUpdateWithWhereUniqueWithoutProfileInput[]
    updateMany?: team_memberUpdateManyWithWhereWithoutProfileInput | team_memberUpdateManyWithWhereWithoutProfileInput[]
    deleteMany?: team_memberScalarWhereInput | team_memberScalarWhereInput[]
  }

  export type member_distributionCreateNestedManyWithoutTeam_memberInput = {
    create?: XOR<member_distributionCreateWithoutTeam_memberInput, member_distributionUncheckedCreateWithoutTeam_memberInput> | member_distributionCreateWithoutTeam_memberInput[] | member_distributionUncheckedCreateWithoutTeam_memberInput[]
    connectOrCreate?: member_distributionCreateOrConnectWithoutTeam_memberInput | member_distributionCreateOrConnectWithoutTeam_memberInput[]
    createMany?: member_distributionCreateManyTeam_memberInputEnvelope
    connect?: member_distributionWhereUniqueInput | member_distributionWhereUniqueInput[]
  }

  export type projectCreateNestedManyWithoutTeam_memberInput = {
    create?: XOR<projectCreateWithoutTeam_memberInput, projectUncheckedCreateWithoutTeam_memberInput> | projectCreateWithoutTeam_memberInput[] | projectUncheckedCreateWithoutTeam_memberInput[]
    connectOrCreate?: projectCreateOrConnectWithoutTeam_memberInput | projectCreateOrConnectWithoutTeam_memberInput[]
    createMany?: projectCreateManyTeam_memberInputEnvelope
    connect?: projectWhereUniqueInput | projectWhereUniqueInput[]
  }

  export type teamCreateNestedOneWithoutTeam_memberInput = {
    create?: XOR<teamCreateWithoutTeam_memberInput, teamUncheckedCreateWithoutTeam_memberInput>
    connectOrCreate?: teamCreateOrConnectWithoutTeam_memberInput
    connect?: teamWhereUniqueInput
  }

  export type today_taskCreateNestedManyWithoutTeam_memberInput = {
    create?: XOR<today_taskCreateWithoutTeam_memberInput, today_taskUncheckedCreateWithoutTeam_memberInput> | today_taskCreateWithoutTeam_memberInput[] | today_taskUncheckedCreateWithoutTeam_memberInput[]
    connectOrCreate?: today_taskCreateOrConnectWithoutTeam_memberInput | today_taskCreateOrConnectWithoutTeam_memberInput[]
    createMany?: today_taskCreateManyTeam_memberInputEnvelope
    connect?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
  }

  export type projectCreateNestedManyWithoutTeam_membersInput = {
    create?: XOR<projectCreateWithoutTeam_membersInput, projectUncheckedCreateWithoutTeam_membersInput> | projectCreateWithoutTeam_membersInput[] | projectUncheckedCreateWithoutTeam_membersInput[]
    connectOrCreate?: projectCreateOrConnectWithoutTeam_membersInput | projectCreateOrConnectWithoutTeam_membersInput[]
    connect?: projectWhereUniqueInput | projectWhereUniqueInput[]
  }

  export type profileCreateNestedManyWithoutTeam_membersInput = {
    create?: XOR<profileCreateWithoutTeam_membersInput, profileUncheckedCreateWithoutTeam_membersInput> | profileCreateWithoutTeam_membersInput[] | profileUncheckedCreateWithoutTeam_membersInput[]
    connectOrCreate?: profileCreateOrConnectWithoutTeam_membersInput | profileCreateOrConnectWithoutTeam_membersInput[]
    connect?: profileWhereUniqueInput | profileWhereUniqueInput[]
  }

  export type member_distributionUncheckedCreateNestedManyWithoutTeam_memberInput = {
    create?: XOR<member_distributionCreateWithoutTeam_memberInput, member_distributionUncheckedCreateWithoutTeam_memberInput> | member_distributionCreateWithoutTeam_memberInput[] | member_distributionUncheckedCreateWithoutTeam_memberInput[]
    connectOrCreate?: member_distributionCreateOrConnectWithoutTeam_memberInput | member_distributionCreateOrConnectWithoutTeam_memberInput[]
    createMany?: member_distributionCreateManyTeam_memberInputEnvelope
    connect?: member_distributionWhereUniqueInput | member_distributionWhereUniqueInput[]
  }

  export type projectUncheckedCreateNestedManyWithoutTeam_memberInput = {
    create?: XOR<projectCreateWithoutTeam_memberInput, projectUncheckedCreateWithoutTeam_memberInput> | projectCreateWithoutTeam_memberInput[] | projectUncheckedCreateWithoutTeam_memberInput[]
    connectOrCreate?: projectCreateOrConnectWithoutTeam_memberInput | projectCreateOrConnectWithoutTeam_memberInput[]
    createMany?: projectCreateManyTeam_memberInputEnvelope
    connect?: projectWhereUniqueInput | projectWhereUniqueInput[]
  }

  export type today_taskUncheckedCreateNestedManyWithoutTeam_memberInput = {
    create?: XOR<today_taskCreateWithoutTeam_memberInput, today_taskUncheckedCreateWithoutTeam_memberInput> | today_taskCreateWithoutTeam_memberInput[] | today_taskUncheckedCreateWithoutTeam_memberInput[]
    connectOrCreate?: today_taskCreateOrConnectWithoutTeam_memberInput | today_taskCreateOrConnectWithoutTeam_memberInput[]
    createMany?: today_taskCreateManyTeam_memberInputEnvelope
    connect?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
  }

  export type projectUncheckedCreateNestedManyWithoutTeam_membersInput = {
    create?: XOR<projectCreateWithoutTeam_membersInput, projectUncheckedCreateWithoutTeam_membersInput> | projectCreateWithoutTeam_membersInput[] | projectUncheckedCreateWithoutTeam_membersInput[]
    connectOrCreate?: projectCreateOrConnectWithoutTeam_membersInput | projectCreateOrConnectWithoutTeam_membersInput[]
    connect?: projectWhereUniqueInput | projectWhereUniqueInput[]
  }

  export type profileUncheckedCreateNestedManyWithoutTeam_membersInput = {
    create?: XOR<profileCreateWithoutTeam_membersInput, profileUncheckedCreateWithoutTeam_membersInput> | profileCreateWithoutTeam_membersInput[] | profileUncheckedCreateWithoutTeam_membersInput[]
    connectOrCreate?: profileCreateOrConnectWithoutTeam_membersInput | profileCreateOrConnectWithoutTeam_membersInput[]
    connect?: profileWhereUniqueInput | profileWhereUniqueInput[]
  }

  export type member_distributionUpdateManyWithoutTeam_memberNestedInput = {
    create?: XOR<member_distributionCreateWithoutTeam_memberInput, member_distributionUncheckedCreateWithoutTeam_memberInput> | member_distributionCreateWithoutTeam_memberInput[] | member_distributionUncheckedCreateWithoutTeam_memberInput[]
    connectOrCreate?: member_distributionCreateOrConnectWithoutTeam_memberInput | member_distributionCreateOrConnectWithoutTeam_memberInput[]
    upsert?: member_distributionUpsertWithWhereUniqueWithoutTeam_memberInput | member_distributionUpsertWithWhereUniqueWithoutTeam_memberInput[]
    createMany?: member_distributionCreateManyTeam_memberInputEnvelope
    set?: member_distributionWhereUniqueInput | member_distributionWhereUniqueInput[]
    disconnect?: member_distributionWhereUniqueInput | member_distributionWhereUniqueInput[]
    delete?: member_distributionWhereUniqueInput | member_distributionWhereUniqueInput[]
    connect?: member_distributionWhereUniqueInput | member_distributionWhereUniqueInput[]
    update?: member_distributionUpdateWithWhereUniqueWithoutTeam_memberInput | member_distributionUpdateWithWhereUniqueWithoutTeam_memberInput[]
    updateMany?: member_distributionUpdateManyWithWhereWithoutTeam_memberInput | member_distributionUpdateManyWithWhereWithoutTeam_memberInput[]
    deleteMany?: member_distributionScalarWhereInput | member_distributionScalarWhereInput[]
  }

  export type projectUpdateManyWithoutTeam_memberNestedInput = {
    create?: XOR<projectCreateWithoutTeam_memberInput, projectUncheckedCreateWithoutTeam_memberInput> | projectCreateWithoutTeam_memberInput[] | projectUncheckedCreateWithoutTeam_memberInput[]
    connectOrCreate?: projectCreateOrConnectWithoutTeam_memberInput | projectCreateOrConnectWithoutTeam_memberInput[]
    upsert?: projectUpsertWithWhereUniqueWithoutTeam_memberInput | projectUpsertWithWhereUniqueWithoutTeam_memberInput[]
    createMany?: projectCreateManyTeam_memberInputEnvelope
    set?: projectWhereUniqueInput | projectWhereUniqueInput[]
    disconnect?: projectWhereUniqueInput | projectWhereUniqueInput[]
    delete?: projectWhereUniqueInput | projectWhereUniqueInput[]
    connect?: projectWhereUniqueInput | projectWhereUniqueInput[]
    update?: projectUpdateWithWhereUniqueWithoutTeam_memberInput | projectUpdateWithWhereUniqueWithoutTeam_memberInput[]
    updateMany?: projectUpdateManyWithWhereWithoutTeam_memberInput | projectUpdateManyWithWhereWithoutTeam_memberInput[]
    deleteMany?: projectScalarWhereInput | projectScalarWhereInput[]
  }

  export type teamUpdateOneWithoutTeam_memberNestedInput = {
    create?: XOR<teamCreateWithoutTeam_memberInput, teamUncheckedCreateWithoutTeam_memberInput>
    connectOrCreate?: teamCreateOrConnectWithoutTeam_memberInput
    upsert?: teamUpsertWithoutTeam_memberInput
    disconnect?: teamWhereInput | boolean
    delete?: teamWhereInput | boolean
    connect?: teamWhereUniqueInput
    update?: XOR<XOR<teamUpdateToOneWithWhereWithoutTeam_memberInput, teamUpdateWithoutTeam_memberInput>, teamUncheckedUpdateWithoutTeam_memberInput>
  }

  export type today_taskUpdateManyWithoutTeam_memberNestedInput = {
    create?: XOR<today_taskCreateWithoutTeam_memberInput, today_taskUncheckedCreateWithoutTeam_memberInput> | today_taskCreateWithoutTeam_memberInput[] | today_taskUncheckedCreateWithoutTeam_memberInput[]
    connectOrCreate?: today_taskCreateOrConnectWithoutTeam_memberInput | today_taskCreateOrConnectWithoutTeam_memberInput[]
    upsert?: today_taskUpsertWithWhereUniqueWithoutTeam_memberInput | today_taskUpsertWithWhereUniqueWithoutTeam_memberInput[]
    createMany?: today_taskCreateManyTeam_memberInputEnvelope
    set?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    disconnect?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    delete?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    connect?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    update?: today_taskUpdateWithWhereUniqueWithoutTeam_memberInput | today_taskUpdateWithWhereUniqueWithoutTeam_memberInput[]
    updateMany?: today_taskUpdateManyWithWhereWithoutTeam_memberInput | today_taskUpdateManyWithWhereWithoutTeam_memberInput[]
    deleteMany?: today_taskScalarWhereInput | today_taskScalarWhereInput[]
  }

  export type projectUpdateManyWithoutTeam_membersNestedInput = {
    create?: XOR<projectCreateWithoutTeam_membersInput, projectUncheckedCreateWithoutTeam_membersInput> | projectCreateWithoutTeam_membersInput[] | projectUncheckedCreateWithoutTeam_membersInput[]
    connectOrCreate?: projectCreateOrConnectWithoutTeam_membersInput | projectCreateOrConnectWithoutTeam_membersInput[]
    upsert?: projectUpsertWithWhereUniqueWithoutTeam_membersInput | projectUpsertWithWhereUniqueWithoutTeam_membersInput[]
    set?: projectWhereUniqueInput | projectWhereUniqueInput[]
    disconnect?: projectWhereUniqueInput | projectWhereUniqueInput[]
    delete?: projectWhereUniqueInput | projectWhereUniqueInput[]
    connect?: projectWhereUniqueInput | projectWhereUniqueInput[]
    update?: projectUpdateWithWhereUniqueWithoutTeam_membersInput | projectUpdateWithWhereUniqueWithoutTeam_membersInput[]
    updateMany?: projectUpdateManyWithWhereWithoutTeam_membersInput | projectUpdateManyWithWhereWithoutTeam_membersInput[]
    deleteMany?: projectScalarWhereInput | projectScalarWhereInput[]
  }

  export type profileUpdateManyWithoutTeam_membersNestedInput = {
    create?: XOR<profileCreateWithoutTeam_membersInput, profileUncheckedCreateWithoutTeam_membersInput> | profileCreateWithoutTeam_membersInput[] | profileUncheckedCreateWithoutTeam_membersInput[]
    connectOrCreate?: profileCreateOrConnectWithoutTeam_membersInput | profileCreateOrConnectWithoutTeam_membersInput[]
    upsert?: profileUpsertWithWhereUniqueWithoutTeam_membersInput | profileUpsertWithWhereUniqueWithoutTeam_membersInput[]
    set?: profileWhereUniqueInput | profileWhereUniqueInput[]
    disconnect?: profileWhereUniqueInput | profileWhereUniqueInput[]
    delete?: profileWhereUniqueInput | profileWhereUniqueInput[]
    connect?: profileWhereUniqueInput | profileWhereUniqueInput[]
    update?: profileUpdateWithWhereUniqueWithoutTeam_membersInput | profileUpdateWithWhereUniqueWithoutTeam_membersInput[]
    updateMany?: profileUpdateManyWithWhereWithoutTeam_membersInput | profileUpdateManyWithWhereWithoutTeam_membersInput[]
    deleteMany?: profileScalarWhereInput | profileScalarWhereInput[]
  }

  export type member_distributionUncheckedUpdateManyWithoutTeam_memberNestedInput = {
    create?: XOR<member_distributionCreateWithoutTeam_memberInput, member_distributionUncheckedCreateWithoutTeam_memberInput> | member_distributionCreateWithoutTeam_memberInput[] | member_distributionUncheckedCreateWithoutTeam_memberInput[]
    connectOrCreate?: member_distributionCreateOrConnectWithoutTeam_memberInput | member_distributionCreateOrConnectWithoutTeam_memberInput[]
    upsert?: member_distributionUpsertWithWhereUniqueWithoutTeam_memberInput | member_distributionUpsertWithWhereUniqueWithoutTeam_memberInput[]
    createMany?: member_distributionCreateManyTeam_memberInputEnvelope
    set?: member_distributionWhereUniqueInput | member_distributionWhereUniqueInput[]
    disconnect?: member_distributionWhereUniqueInput | member_distributionWhereUniqueInput[]
    delete?: member_distributionWhereUniqueInput | member_distributionWhereUniqueInput[]
    connect?: member_distributionWhereUniqueInput | member_distributionWhereUniqueInput[]
    update?: member_distributionUpdateWithWhereUniqueWithoutTeam_memberInput | member_distributionUpdateWithWhereUniqueWithoutTeam_memberInput[]
    updateMany?: member_distributionUpdateManyWithWhereWithoutTeam_memberInput | member_distributionUpdateManyWithWhereWithoutTeam_memberInput[]
    deleteMany?: member_distributionScalarWhereInput | member_distributionScalarWhereInput[]
  }

  export type projectUncheckedUpdateManyWithoutTeam_memberNestedInput = {
    create?: XOR<projectCreateWithoutTeam_memberInput, projectUncheckedCreateWithoutTeam_memberInput> | projectCreateWithoutTeam_memberInput[] | projectUncheckedCreateWithoutTeam_memberInput[]
    connectOrCreate?: projectCreateOrConnectWithoutTeam_memberInput | projectCreateOrConnectWithoutTeam_memberInput[]
    upsert?: projectUpsertWithWhereUniqueWithoutTeam_memberInput | projectUpsertWithWhereUniqueWithoutTeam_memberInput[]
    createMany?: projectCreateManyTeam_memberInputEnvelope
    set?: projectWhereUniqueInput | projectWhereUniqueInput[]
    disconnect?: projectWhereUniqueInput | projectWhereUniqueInput[]
    delete?: projectWhereUniqueInput | projectWhereUniqueInput[]
    connect?: projectWhereUniqueInput | projectWhereUniqueInput[]
    update?: projectUpdateWithWhereUniqueWithoutTeam_memberInput | projectUpdateWithWhereUniqueWithoutTeam_memberInput[]
    updateMany?: projectUpdateManyWithWhereWithoutTeam_memberInput | projectUpdateManyWithWhereWithoutTeam_memberInput[]
    deleteMany?: projectScalarWhereInput | projectScalarWhereInput[]
  }

  export type today_taskUncheckedUpdateManyWithoutTeam_memberNestedInput = {
    create?: XOR<today_taskCreateWithoutTeam_memberInput, today_taskUncheckedCreateWithoutTeam_memberInput> | today_taskCreateWithoutTeam_memberInput[] | today_taskUncheckedCreateWithoutTeam_memberInput[]
    connectOrCreate?: today_taskCreateOrConnectWithoutTeam_memberInput | today_taskCreateOrConnectWithoutTeam_memberInput[]
    upsert?: today_taskUpsertWithWhereUniqueWithoutTeam_memberInput | today_taskUpsertWithWhereUniqueWithoutTeam_memberInput[]
    createMany?: today_taskCreateManyTeam_memberInputEnvelope
    set?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    disconnect?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    delete?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    connect?: today_taskWhereUniqueInput | today_taskWhereUniqueInput[]
    update?: today_taskUpdateWithWhereUniqueWithoutTeam_memberInput | today_taskUpdateWithWhereUniqueWithoutTeam_memberInput[]
    updateMany?: today_taskUpdateManyWithWhereWithoutTeam_memberInput | today_taskUpdateManyWithWhereWithoutTeam_memberInput[]
    deleteMany?: today_taskScalarWhereInput | today_taskScalarWhereInput[]
  }

  export type projectUncheckedUpdateManyWithoutTeam_membersNestedInput = {
    create?: XOR<projectCreateWithoutTeam_membersInput, projectUncheckedCreateWithoutTeam_membersInput> | projectCreateWithoutTeam_membersInput[] | projectUncheckedCreateWithoutTeam_membersInput[]
    connectOrCreate?: projectCreateOrConnectWithoutTeam_membersInput | projectCreateOrConnectWithoutTeam_membersInput[]
    upsert?: projectUpsertWithWhereUniqueWithoutTeam_membersInput | projectUpsertWithWhereUniqueWithoutTeam_membersInput[]
    set?: projectWhereUniqueInput | projectWhereUniqueInput[]
    disconnect?: projectWhereUniqueInput | projectWhereUniqueInput[]
    delete?: projectWhereUniqueInput | projectWhereUniqueInput[]
    connect?: projectWhereUniqueInput | projectWhereUniqueInput[]
    update?: projectUpdateWithWhereUniqueWithoutTeam_membersInput | projectUpdateWithWhereUniqueWithoutTeam_membersInput[]
    updateMany?: projectUpdateManyWithWhereWithoutTeam_membersInput | projectUpdateManyWithWhereWithoutTeam_membersInput[]
    deleteMany?: projectScalarWhereInput | projectScalarWhereInput[]
  }

  export type profileUncheckedUpdateManyWithoutTeam_membersNestedInput = {
    create?: XOR<profileCreateWithoutTeam_membersInput, profileUncheckedCreateWithoutTeam_membersInput> | profileCreateWithoutTeam_membersInput[] | profileUncheckedCreateWithoutTeam_membersInput[]
    connectOrCreate?: profileCreateOrConnectWithoutTeam_membersInput | profileCreateOrConnectWithoutTeam_membersInput[]
    upsert?: profileUpsertWithWhereUniqueWithoutTeam_membersInput | profileUpsertWithWhereUniqueWithoutTeam_membersInput[]
    set?: profileWhereUniqueInput | profileWhereUniqueInput[]
    disconnect?: profileWhereUniqueInput | profileWhereUniqueInput[]
    delete?: profileWhereUniqueInput | profileWhereUniqueInput[]
    connect?: profileWhereUniqueInput | profileWhereUniqueInput[]
    update?: profileUpdateWithWhereUniqueWithoutTeam_membersInput | profileUpdateWithWhereUniqueWithoutTeam_membersInput[]
    updateMany?: profileUpdateManyWithWhereWithoutTeam_membersInput | profileUpdateManyWithWhereWithoutTeam_membersInput[]
    deleteMany?: profileScalarWhereInput | profileScalarWhereInput[]
  }

  export type team_memberCreateNestedOneWithoutMember_distributionInput = {
    create?: XOR<team_memberCreateWithoutMember_distributionInput, team_memberUncheckedCreateWithoutMember_distributionInput>
    connectOrCreate?: team_memberCreateOrConnectWithoutMember_distributionInput
    connect?: team_memberWhereUniqueInput
  }

  export type projectCreateNestedOneWithoutMember_distributionInput = {
    create?: XOR<projectCreateWithoutMember_distributionInput, projectUncheckedCreateWithoutMember_distributionInput>
    connectOrCreate?: projectCreateOrConnectWithoutMember_distributionInput
    connect?: projectWhereUniqueInput
  }

  export type team_memberUpdateOneRequiredWithoutMember_distributionNestedInput = {
    create?: XOR<team_memberCreateWithoutMember_distributionInput, team_memberUncheckedCreateWithoutMember_distributionInput>
    connectOrCreate?: team_memberCreateOrConnectWithoutMember_distributionInput
    upsert?: team_memberUpsertWithoutMember_distributionInput
    connect?: team_memberWhereUniqueInput
    update?: XOR<XOR<team_memberUpdateToOneWithWhereWithoutMember_distributionInput, team_memberUpdateWithoutMember_distributionInput>, team_memberUncheckedUpdateWithoutMember_distributionInput>
  }

  export type projectUpdateOneRequiredWithoutMember_distributionNestedInput = {
    create?: XOR<projectCreateWithoutMember_distributionInput, projectUncheckedCreateWithoutMember_distributionInput>
    connectOrCreate?: projectCreateOrConnectWithoutMember_distributionInput
    upsert?: projectUpsertWithoutMember_distributionInput
    connect?: projectWhereUniqueInput
    update?: XOR<XOR<projectUpdateToOneWithWhereWithoutMember_distributionInput, projectUpdateWithoutMember_distributionInput>, projectUncheckedUpdateWithoutMember_distributionInput>
  }

  export type teamCreateNestedManyWithoutRevisionInput = {
    create?: XOR<teamCreateWithoutRevisionInput, teamUncheckedCreateWithoutRevisionInput> | teamCreateWithoutRevisionInput[] | teamUncheckedCreateWithoutRevisionInput[]
    connectOrCreate?: teamCreateOrConnectWithoutRevisionInput | teamCreateOrConnectWithoutRevisionInput[]
    connect?: teamWhereUniqueInput | teamWhereUniqueInput[]
  }

  export type teamUncheckedCreateNestedManyWithoutRevisionInput = {
    create?: XOR<teamCreateWithoutRevisionInput, teamUncheckedCreateWithoutRevisionInput> | teamCreateWithoutRevisionInput[] | teamUncheckedCreateWithoutRevisionInput[]
    connectOrCreate?: teamCreateOrConnectWithoutRevisionInput | teamCreateOrConnectWithoutRevisionInput[]
    connect?: teamWhereUniqueInput | teamWhereUniqueInput[]
  }

  export type teamUpdateManyWithoutRevisionNestedInput = {
    create?: XOR<teamCreateWithoutRevisionInput, teamUncheckedCreateWithoutRevisionInput> | teamCreateWithoutRevisionInput[] | teamUncheckedCreateWithoutRevisionInput[]
    connectOrCreate?: teamCreateOrConnectWithoutRevisionInput | teamCreateOrConnectWithoutRevisionInput[]
    upsert?: teamUpsertWithWhereUniqueWithoutRevisionInput | teamUpsertWithWhereUniqueWithoutRevisionInput[]
    set?: teamWhereUniqueInput | teamWhereUniqueInput[]
    disconnect?: teamWhereUniqueInput | teamWhereUniqueInput[]
    delete?: teamWhereUniqueInput | teamWhereUniqueInput[]
    connect?: teamWhereUniqueInput | teamWhereUniqueInput[]
    update?: teamUpdateWithWhereUniqueWithoutRevisionInput | teamUpdateWithWhereUniqueWithoutRevisionInput[]
    updateMany?: teamUpdateManyWithWhereWithoutRevisionInput | teamUpdateManyWithWhereWithoutRevisionInput[]
    deleteMany?: teamScalarWhereInput | teamScalarWhereInput[]
  }

  export type teamUncheckedUpdateManyWithoutRevisionNestedInput = {
    create?: XOR<teamCreateWithoutRevisionInput, teamUncheckedCreateWithoutRevisionInput> | teamCreateWithoutRevisionInput[] | teamUncheckedCreateWithoutRevisionInput[]
    connectOrCreate?: teamCreateOrConnectWithoutRevisionInput | teamCreateOrConnectWithoutRevisionInput[]
    upsert?: teamUpsertWithWhereUniqueWithoutRevisionInput | teamUpsertWithWhereUniqueWithoutRevisionInput[]
    set?: teamWhereUniqueInput | teamWhereUniqueInput[]
    disconnect?: teamWhereUniqueInput | teamWhereUniqueInput[]
    delete?: teamWhereUniqueInput | teamWhereUniqueInput[]
    connect?: teamWhereUniqueInput | teamWhereUniqueInput[]
    update?: teamUpdateWithWhereUniqueWithoutRevisionInput | teamUpdateWithWhereUniqueWithoutRevisionInput[]
    updateMany?: teamUpdateManyWithWhereWithoutRevisionInput | teamUpdateManyWithWhereWithoutRevisionInput[]
    deleteMany?: teamScalarWhereInput | teamScalarWhereInput[]
  }

  export type projectCreateNestedOneWithoutToday_taskInput = {
    create?: XOR<projectCreateWithoutToday_taskInput, projectUncheckedCreateWithoutToday_taskInput>
    connectOrCreate?: projectCreateOrConnectWithoutToday_taskInput
    connect?: projectWhereUniqueInput
  }

  export type teamCreateNestedOneWithoutToday_taskInput = {
    create?: XOR<teamCreateWithoutToday_taskInput, teamUncheckedCreateWithoutToday_taskInput>
    connectOrCreate?: teamCreateOrConnectWithoutToday_taskInput
    connect?: teamWhereUniqueInput
  }

  export type team_memberCreateNestedOneWithoutToday_taskInput = {
    create?: XOR<team_memberCreateWithoutToday_taskInput, team_memberUncheckedCreateWithoutToday_taskInput>
    connectOrCreate?: team_memberCreateOrConnectWithoutToday_taskInput
    connect?: team_memberWhereUniqueInput
  }

  export type projectUpdateOneRequiredWithoutToday_taskNestedInput = {
    create?: XOR<projectCreateWithoutToday_taskInput, projectUncheckedCreateWithoutToday_taskInput>
    connectOrCreate?: projectCreateOrConnectWithoutToday_taskInput
    upsert?: projectUpsertWithoutToday_taskInput
    connect?: projectWhereUniqueInput
    update?: XOR<XOR<projectUpdateToOneWithWhereWithoutToday_taskInput, projectUpdateWithoutToday_taskInput>, projectUncheckedUpdateWithoutToday_taskInput>
  }

  export type teamUpdateOneWithoutToday_taskNestedInput = {
    create?: XOR<teamCreateWithoutToday_taskInput, teamUncheckedCreateWithoutToday_taskInput>
    connectOrCreate?: teamCreateOrConnectWithoutToday_taskInput
    upsert?: teamUpsertWithoutToday_taskInput
    disconnect?: teamWhereInput | boolean
    delete?: teamWhereInput | boolean
    connect?: teamWhereUniqueInput
    update?: XOR<XOR<teamUpdateToOneWithWhereWithoutToday_taskInput, teamUpdateWithoutToday_taskInput>, teamUncheckedUpdateWithoutToday_taskInput>
  }

  export type team_memberUpdateOneWithoutToday_taskNestedInput = {
    create?: XOR<team_memberCreateWithoutToday_taskInput, team_memberUncheckedCreateWithoutToday_taskInput>
    connectOrCreate?: team_memberCreateOrConnectWithoutToday_taskInput
    upsert?: team_memberUpsertWithoutToday_taskInput
    disconnect?: team_memberWhereInput | boolean
    delete?: team_memberWhereInput | boolean
    connect?: team_memberWhereUniqueInput
    update?: XOR<XOR<team_memberUpdateToOneWithWhereWithoutToday_taskInput, team_memberUpdateWithoutToday_taskInput>, team_memberUncheckedUpdateWithoutToday_taskInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type departmentCreateWithoutAssign_projectInput = {
    department_name?: string | null
    department_target?: Decimal | DecimalJsLike | number | string | null
    department_achieve?: Decimal | DecimalJsLike | number | string | null
    department_cancel?: Decimal | DecimalJsLike | number | string | null
    department_special_order?: Decimal | DecimalJsLike | number | string | null
    department_designation?: string | null
    project_requirements?: string | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    department_teams?: teamCreateNestedManyWithoutDepartmentInput
    department_profile?: profileCreateNestedManyWithoutDepartmentInput
  }

  export type departmentUncheckedCreateWithoutAssign_projectInput = {
    id?: number
    department_name?: string | null
    department_target?: Decimal | DecimalJsLike | number | string | null
    department_achieve?: Decimal | DecimalJsLike | number | string | null
    department_cancel?: Decimal | DecimalJsLike | number | string | null
    department_special_order?: Decimal | DecimalJsLike | number | string | null
    department_designation?: string | null
    project_requirements?: string | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    department_teams?: teamUncheckedCreateNestedManyWithoutDepartmentInput
    department_profile?: profileUncheckedCreateNestedManyWithoutDepartmentInput
  }

  export type departmentCreateOrConnectWithoutAssign_projectInput = {
    where: departmentWhereUniqueInput
    create: XOR<departmentCreateWithoutAssign_projectInput, departmentUncheckedCreateWithoutAssign_projectInput>
  }

  export type team_memberCreateWithoutProjectInput = {
    first_name?: string | null
    last_name?: string | null
    email?: string | null
    number?: string | null
    permanent_address?: string | null
    present_address?: string | null
    gender?: string | null
    blood_group?: string | null
    relationship?: string | null
    guardian_relation?: string | null
    guardian_number?: string | null
    guardian_address?: string | null
    religion?: string | null
    education?: string | null
    dp?: string | null
    role?: string | null
    target?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    rewards?: Decimal | DecimalJsLike | number | string | null
    account_status?: string | null
    password?: string | null
    designation?: string | null
    uid?: string | null
    member_distribution?: member_distributionCreateNestedManyWithoutTeam_memberInput
    team?: teamCreateNestedOneWithoutTeam_memberInput
    today_task?: today_taskCreateNestedManyWithoutTeam_memberInput
    assigned_projects?: projectCreateNestedManyWithoutTeam_membersInput
    profile?: profileCreateNestedManyWithoutTeam_membersInput
  }

  export type team_memberUncheckedCreateWithoutProjectInput = {
    id?: number
    first_name?: string | null
    last_name?: string | null
    email?: string | null
    number?: string | null
    permanent_address?: string | null
    present_address?: string | null
    gender?: string | null
    blood_group?: string | null
    relationship?: string | null
    guardian_relation?: string | null
    guardian_number?: string | null
    guardian_address?: string | null
    team_id?: number | null
    religion?: string | null
    education?: string | null
    dp?: string | null
    role?: string | null
    target?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    rewards?: Decimal | DecimalJsLike | number | string | null
    account_status?: string | null
    password?: string | null
    designation?: string | null
    uid?: string | null
    member_distribution?: member_distributionUncheckedCreateNestedManyWithoutTeam_memberInput
    today_task?: today_taskUncheckedCreateNestedManyWithoutTeam_memberInput
    assigned_projects?: projectUncheckedCreateNestedManyWithoutTeam_membersInput
    profile?: profileUncheckedCreateNestedManyWithoutTeam_membersInput
  }

  export type team_memberCreateOrConnectWithoutProjectInput = {
    where: team_memberWhereUniqueInput
    create: XOR<team_memberCreateWithoutProjectInput, team_memberUncheckedCreateWithoutProjectInput>
  }

  export type profileCreateWithoutProjectsInput = {
    created_date?: Date | string | null
    profile_name?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    bonus_amount?: Decimal | DecimalJsLike | number | string | null
    order_count?: number | null
    rank?: Decimal | DecimalJsLike | number | string | null
    cancel_count?: number | null
    complete_count?: number | null
    no_rating?: number | null
    profile_target?: Decimal | DecimalJsLike | number | string | null
    department_id: number
    repeat_order?: Decimal | DecimalJsLike | number | string | null
    keywords?: string | null
    total_rating?: Decimal | DecimalJsLike | number | string | null
    department?: departmentCreateNestedManyWithoutDepartment_profileInput
    team_members?: team_memberCreateNestedManyWithoutProfileInput
  }

  export type profileUncheckedCreateWithoutProjectsInput = {
    id?: number
    created_date?: Date | string | null
    profile_name?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    bonus_amount?: Decimal | DecimalJsLike | number | string | null
    order_count?: number | null
    rank?: Decimal | DecimalJsLike | number | string | null
    cancel_count?: number | null
    complete_count?: number | null
    no_rating?: number | null
    profile_target?: Decimal | DecimalJsLike | number | string | null
    department_id: number
    repeat_order?: Decimal | DecimalJsLike | number | string | null
    keywords?: string | null
    total_rating?: Decimal | DecimalJsLike | number | string | null
    department?: departmentUncheckedCreateNestedManyWithoutDepartment_profileInput
    team_members?: team_memberUncheckedCreateNestedManyWithoutProfileInput
  }

  export type profileCreateOrConnectWithoutProjectsInput = {
    where: profileWhereUniqueInput
    create: XOR<profileCreateWithoutProjectsInput, profileUncheckedCreateWithoutProjectsInput>
  }

  export type teamCreateWithoutProjectInput = {
    team_name?: string | null
    team_achieve?: Decimal | DecimalJsLike | number | string | null
    team_cancel?: number | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    team_target?: Decimal | DecimalJsLike | number | string | null
    department: departmentCreateNestedOneWithoutDepartment_teamsInput
    team_member?: team_memberCreateNestedManyWithoutTeamInput
    today_task?: today_taskCreateNestedManyWithoutTeamInput
    revision?: revisionCreateNestedManyWithoutTeamInput
  }

  export type teamUncheckedCreateWithoutProjectInput = {
    id?: number
    team_name?: string | null
    department_id: number
    team_achieve?: Decimal | DecimalJsLike | number | string | null
    team_cancel?: number | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    team_target?: Decimal | DecimalJsLike | number | string | null
    team_member?: team_memberUncheckedCreateNestedManyWithoutTeamInput
    today_task?: today_taskUncheckedCreateNestedManyWithoutTeamInput
    revision?: revisionUncheckedCreateNestedManyWithoutTeamInput
  }

  export type teamCreateOrConnectWithoutProjectInput = {
    where: teamWhereUniqueInput
    create: XOR<teamCreateWithoutProjectInput, teamUncheckedCreateWithoutProjectInput>
  }

  export type today_taskCreateWithoutProjectInput = {
    client_name?: string | null
    expected_finish_time?: string | null
    ops_status?: string | null
    team?: teamCreateNestedOneWithoutToday_taskInput
    team_member?: team_memberCreateNestedOneWithoutToday_taskInput
  }

  export type today_taskUncheckedCreateWithoutProjectInput = {
    id?: number
    client_name?: string | null
    expected_finish_time?: string | null
    team_id?: number | null
    ops_status?: string | null
    team_member_id?: number | null
  }

  export type today_taskCreateOrConnectWithoutProjectInput = {
    where: today_taskWhereUniqueInput
    create: XOR<today_taskCreateWithoutProjectInput, today_taskUncheckedCreateWithoutProjectInput>
  }

  export type today_taskCreateManyProjectInputEnvelope = {
    data: today_taskCreateManyProjectInput | today_taskCreateManyProjectInput[]
    skipDuplicates?: boolean
  }

  export type team_memberCreateWithoutAssigned_projectsInput = {
    first_name?: string | null
    last_name?: string | null
    email?: string | null
    number?: string | null
    permanent_address?: string | null
    present_address?: string | null
    gender?: string | null
    blood_group?: string | null
    relationship?: string | null
    guardian_relation?: string | null
    guardian_number?: string | null
    guardian_address?: string | null
    religion?: string | null
    education?: string | null
    dp?: string | null
    role?: string | null
    target?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    rewards?: Decimal | DecimalJsLike | number | string | null
    account_status?: string | null
    password?: string | null
    designation?: string | null
    uid?: string | null
    member_distribution?: member_distributionCreateNestedManyWithoutTeam_memberInput
    project?: projectCreateNestedManyWithoutTeam_memberInput
    team?: teamCreateNestedOneWithoutTeam_memberInput
    today_task?: today_taskCreateNestedManyWithoutTeam_memberInput
    profile?: profileCreateNestedManyWithoutTeam_membersInput
  }

  export type team_memberUncheckedCreateWithoutAssigned_projectsInput = {
    id?: number
    first_name?: string | null
    last_name?: string | null
    email?: string | null
    number?: string | null
    permanent_address?: string | null
    present_address?: string | null
    gender?: string | null
    blood_group?: string | null
    relationship?: string | null
    guardian_relation?: string | null
    guardian_number?: string | null
    guardian_address?: string | null
    team_id?: number | null
    religion?: string | null
    education?: string | null
    dp?: string | null
    role?: string | null
    target?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    rewards?: Decimal | DecimalJsLike | number | string | null
    account_status?: string | null
    password?: string | null
    designation?: string | null
    uid?: string | null
    member_distribution?: member_distributionUncheckedCreateNestedManyWithoutTeam_memberInput
    project?: projectUncheckedCreateNestedManyWithoutTeam_memberInput
    today_task?: today_taskUncheckedCreateNestedManyWithoutTeam_memberInput
    profile?: profileUncheckedCreateNestedManyWithoutTeam_membersInput
  }

  export type team_memberCreateOrConnectWithoutAssigned_projectsInput = {
    where: team_memberWhereUniqueInput
    create: XOR<team_memberCreateWithoutAssigned_projectsInput, team_memberUncheckedCreateWithoutAssigned_projectsInput>
  }

  export type member_distributionCreateWithoutProjectInput = {
    amount?: Decimal | DecimalJsLike | number | string | null
    team_member: team_memberCreateNestedOneWithoutMember_distributionInput
  }

  export type member_distributionUncheckedCreateWithoutProjectInput = {
    id?: number
    team_member_id: number
    amount?: Decimal | DecimalJsLike | number | string | null
  }

  export type member_distributionCreateOrConnectWithoutProjectInput = {
    where: member_distributionWhereUniqueInput
    create: XOR<member_distributionCreateWithoutProjectInput, member_distributionUncheckedCreateWithoutProjectInput>
  }

  export type member_distributionCreateManyProjectInputEnvelope = {
    data: member_distributionCreateManyProjectInput | member_distributionCreateManyProjectInput[]
    skipDuplicates?: boolean
  }

  export type departmentUpsertWithoutAssign_projectInput = {
    update: XOR<departmentUpdateWithoutAssign_projectInput, departmentUncheckedUpdateWithoutAssign_projectInput>
    create: XOR<departmentCreateWithoutAssign_projectInput, departmentUncheckedCreateWithoutAssign_projectInput>
    where?: departmentWhereInput
  }

  export type departmentUpdateToOneWithWhereWithoutAssign_projectInput = {
    where?: departmentWhereInput
    data: XOR<departmentUpdateWithoutAssign_projectInput, departmentUncheckedUpdateWithoutAssign_projectInput>
  }

  export type departmentUpdateWithoutAssign_projectInput = {
    department_name?: NullableStringFieldUpdateOperationsInput | string | null
    department_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_cancel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_special_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_designation?: NullableStringFieldUpdateOperationsInput | string | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_teams?: teamUpdateManyWithoutDepartmentNestedInput
    department_profile?: profileUpdateManyWithoutDepartmentNestedInput
  }

  export type departmentUncheckedUpdateWithoutAssign_projectInput = {
    id?: IntFieldUpdateOperationsInput | number
    department_name?: NullableStringFieldUpdateOperationsInput | string | null
    department_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_cancel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_special_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_designation?: NullableStringFieldUpdateOperationsInput | string | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_teams?: teamUncheckedUpdateManyWithoutDepartmentNestedInput
    department_profile?: profileUncheckedUpdateManyWithoutDepartmentNestedInput
  }

  export type team_memberUpsertWithoutProjectInput = {
    update: XOR<team_memberUpdateWithoutProjectInput, team_memberUncheckedUpdateWithoutProjectInput>
    create: XOR<team_memberCreateWithoutProjectInput, team_memberUncheckedCreateWithoutProjectInput>
    where?: team_memberWhereInput
  }

  export type team_memberUpdateToOneWithWhereWithoutProjectInput = {
    where?: team_memberWhereInput
    data: XOR<team_memberUpdateWithoutProjectInput, team_memberUncheckedUpdateWithoutProjectInput>
  }

  export type team_memberUpdateWithoutProjectInput = {
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    permanent_address?: NullableStringFieldUpdateOperationsInput | string | null
    present_address?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_relation?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_number?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_address?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    dp?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rewards?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    account_status?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    uid?: NullableStringFieldUpdateOperationsInput | string | null
    member_distribution?: member_distributionUpdateManyWithoutTeam_memberNestedInput
    team?: teamUpdateOneWithoutTeam_memberNestedInput
    today_task?: today_taskUpdateManyWithoutTeam_memberNestedInput
    assigned_projects?: projectUpdateManyWithoutTeam_membersNestedInput
    profile?: profileUpdateManyWithoutTeam_membersNestedInput
  }

  export type team_memberUncheckedUpdateWithoutProjectInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    permanent_address?: NullableStringFieldUpdateOperationsInput | string | null
    present_address?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_relation?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_number?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_address?: NullableStringFieldUpdateOperationsInput | string | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    dp?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rewards?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    account_status?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    uid?: NullableStringFieldUpdateOperationsInput | string | null
    member_distribution?: member_distributionUncheckedUpdateManyWithoutTeam_memberNestedInput
    today_task?: today_taskUncheckedUpdateManyWithoutTeam_memberNestedInput
    assigned_projects?: projectUncheckedUpdateManyWithoutTeam_membersNestedInput
    profile?: profileUncheckedUpdateManyWithoutTeam_membersNestedInput
  }

  export type profileUpsertWithoutProjectsInput = {
    update: XOR<profileUpdateWithoutProjectsInput, profileUncheckedUpdateWithoutProjectsInput>
    create: XOR<profileCreateWithoutProjectsInput, profileUncheckedCreateWithoutProjectsInput>
    where?: profileWhereInput
  }

  export type profileUpdateToOneWithWhereWithoutProjectsInput = {
    where?: profileWhereInput
    data: XOR<profileUpdateWithoutProjectsInput, profileUncheckedUpdateWithoutProjectsInput>
  }

  export type profileUpdateWithoutProjectsInput = {
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile_name?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    order_count?: NullableIntFieldUpdateOperationsInput | number | null
    rank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cancel_count?: NullableIntFieldUpdateOperationsInput | number | null
    complete_count?: NullableIntFieldUpdateOperationsInput | number | null
    no_rating?: NullableIntFieldUpdateOperationsInput | number | null
    profile_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_id?: IntFieldUpdateOperationsInput | number
    repeat_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    keywords?: NullableStringFieldUpdateOperationsInput | string | null
    total_rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department?: departmentUpdateManyWithoutDepartment_profileNestedInput
    team_members?: team_memberUpdateManyWithoutProfileNestedInput
  }

  export type profileUncheckedUpdateWithoutProjectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile_name?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    order_count?: NullableIntFieldUpdateOperationsInput | number | null
    rank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cancel_count?: NullableIntFieldUpdateOperationsInput | number | null
    complete_count?: NullableIntFieldUpdateOperationsInput | number | null
    no_rating?: NullableIntFieldUpdateOperationsInput | number | null
    profile_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_id?: IntFieldUpdateOperationsInput | number
    repeat_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    keywords?: NullableStringFieldUpdateOperationsInput | string | null
    total_rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department?: departmentUncheckedUpdateManyWithoutDepartment_profileNestedInput
    team_members?: team_memberUncheckedUpdateManyWithoutProfileNestedInput
  }

  export type teamUpsertWithoutProjectInput = {
    update: XOR<teamUpdateWithoutProjectInput, teamUncheckedUpdateWithoutProjectInput>
    create: XOR<teamCreateWithoutProjectInput, teamUncheckedCreateWithoutProjectInput>
    where?: teamWhereInput
  }

  export type teamUpdateToOneWithWhereWithoutProjectInput = {
    where?: teamWhereInput
    data: XOR<teamUpdateWithoutProjectInput, teamUncheckedUpdateWithoutProjectInput>
  }

  export type teamUpdateWithoutProjectInput = {
    team_name?: NullableStringFieldUpdateOperationsInput | string | null
    team_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_cancel?: NullableIntFieldUpdateOperationsInput | number | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department?: departmentUpdateOneRequiredWithoutDepartment_teamsNestedInput
    team_member?: team_memberUpdateManyWithoutTeamNestedInput
    today_task?: today_taskUpdateManyWithoutTeamNestedInput
    revision?: revisionUpdateManyWithoutTeamNestedInput
  }

  export type teamUncheckedUpdateWithoutProjectInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_name?: NullableStringFieldUpdateOperationsInput | string | null
    department_id?: IntFieldUpdateOperationsInput | number
    team_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_cancel?: NullableIntFieldUpdateOperationsInput | number | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_member?: team_memberUncheckedUpdateManyWithoutTeamNestedInput
    today_task?: today_taskUncheckedUpdateManyWithoutTeamNestedInput
    revision?: revisionUncheckedUpdateManyWithoutTeamNestedInput
  }

  export type today_taskUpsertWithWhereUniqueWithoutProjectInput = {
    where: today_taskWhereUniqueInput
    update: XOR<today_taskUpdateWithoutProjectInput, today_taskUncheckedUpdateWithoutProjectInput>
    create: XOR<today_taskCreateWithoutProjectInput, today_taskUncheckedCreateWithoutProjectInput>
  }

  export type today_taskUpdateWithWhereUniqueWithoutProjectInput = {
    where: today_taskWhereUniqueInput
    data: XOR<today_taskUpdateWithoutProjectInput, today_taskUncheckedUpdateWithoutProjectInput>
  }

  export type today_taskUpdateManyWithWhereWithoutProjectInput = {
    where: today_taskScalarWhereInput
    data: XOR<today_taskUpdateManyMutationInput, today_taskUncheckedUpdateManyWithoutProjectInput>
  }

  export type today_taskScalarWhereInput = {
    AND?: today_taskScalarWhereInput | today_taskScalarWhereInput[]
    OR?: today_taskScalarWhereInput[]
    NOT?: today_taskScalarWhereInput | today_taskScalarWhereInput[]
    id?: IntFilter<"today_task"> | number
    project_id?: IntFilter<"today_task"> | number
    client_name?: StringNullableFilter<"today_task"> | string | null
    expected_finish_time?: StringNullableFilter<"today_task"> | string | null
    team_id?: IntNullableFilter<"today_task"> | number | null
    ops_status?: StringNullableFilter<"today_task"> | string | null
    team_member_id?: IntNullableFilter<"today_task"> | number | null
  }

  export type team_memberUpsertWithWhereUniqueWithoutAssigned_projectsInput = {
    where: team_memberWhereUniqueInput
    update: XOR<team_memberUpdateWithoutAssigned_projectsInput, team_memberUncheckedUpdateWithoutAssigned_projectsInput>
    create: XOR<team_memberCreateWithoutAssigned_projectsInput, team_memberUncheckedCreateWithoutAssigned_projectsInput>
  }

  export type team_memberUpdateWithWhereUniqueWithoutAssigned_projectsInput = {
    where: team_memberWhereUniqueInput
    data: XOR<team_memberUpdateWithoutAssigned_projectsInput, team_memberUncheckedUpdateWithoutAssigned_projectsInput>
  }

  export type team_memberUpdateManyWithWhereWithoutAssigned_projectsInput = {
    where: team_memberScalarWhereInput
    data: XOR<team_memberUpdateManyMutationInput, team_memberUncheckedUpdateManyWithoutAssigned_projectsInput>
  }

  export type team_memberScalarWhereInput = {
    AND?: team_memberScalarWhereInput | team_memberScalarWhereInput[]
    OR?: team_memberScalarWhereInput[]
    NOT?: team_memberScalarWhereInput | team_memberScalarWhereInput[]
    id?: IntFilter<"team_member"> | number
    first_name?: StringNullableFilter<"team_member"> | string | null
    last_name?: StringNullableFilter<"team_member"> | string | null
    email?: StringNullableFilter<"team_member"> | string | null
    number?: StringNullableFilter<"team_member"> | string | null
    permanent_address?: StringNullableFilter<"team_member"> | string | null
    present_address?: StringNullableFilter<"team_member"> | string | null
    gender?: StringNullableFilter<"team_member"> | string | null
    blood_group?: StringNullableFilter<"team_member"> | string | null
    relationship?: StringNullableFilter<"team_member"> | string | null
    guardian_relation?: StringNullableFilter<"team_member"> | string | null
    guardian_number?: StringNullableFilter<"team_member"> | string | null
    guardian_address?: StringNullableFilter<"team_member"> | string | null
    team_id?: IntNullableFilter<"team_member"> | number | null
    religion?: StringNullableFilter<"team_member"> | string | null
    education?: StringNullableFilter<"team_member"> | string | null
    dp?: StringNullableFilter<"team_member"> | string | null
    role?: StringNullableFilter<"team_member"> | string | null
    target?: DecimalNullableFilter<"team_member"> | Decimal | DecimalJsLike | number | string | null
    rating?: DecimalNullableFilter<"team_member"> | Decimal | DecimalJsLike | number | string | null
    rewards?: DecimalNullableFilter<"team_member"> | Decimal | DecimalJsLike | number | string | null
    account_status?: StringNullableFilter<"team_member"> | string | null
    password?: StringNullableFilter<"team_member"> | string | null
    designation?: StringNullableFilter<"team_member"> | string | null
    uid?: StringNullableFilter<"team_member"> | string | null
  }

  export type member_distributionUpsertWithWhereUniqueWithoutProjectInput = {
    where: member_distributionWhereUniqueInput
    update: XOR<member_distributionUpdateWithoutProjectInput, member_distributionUncheckedUpdateWithoutProjectInput>
    create: XOR<member_distributionCreateWithoutProjectInput, member_distributionUncheckedCreateWithoutProjectInput>
  }

  export type member_distributionUpdateWithWhereUniqueWithoutProjectInput = {
    where: member_distributionWhereUniqueInput
    data: XOR<member_distributionUpdateWithoutProjectInput, member_distributionUncheckedUpdateWithoutProjectInput>
  }

  export type member_distributionUpdateManyWithWhereWithoutProjectInput = {
    where: member_distributionScalarWhereInput
    data: XOR<member_distributionUpdateManyMutationInput, member_distributionUncheckedUpdateManyWithoutProjectInput>
  }

  export type member_distributionScalarWhereInput = {
    AND?: member_distributionScalarWhereInput | member_distributionScalarWhereInput[]
    OR?: member_distributionScalarWhereInput[]
    NOT?: member_distributionScalarWhereInput | member_distributionScalarWhereInput[]
    id?: IntFilter<"member_distribution"> | number
    team_member_id?: IntFilter<"member_distribution"> | number
    amount?: DecimalNullableFilter<"member_distribution"> | Decimal | DecimalJsLike | number | string | null
    project_id?: IntFilter<"member_distribution"> | number
  }

  export type projectCreateWithoutTeamInput = {
    order_id?: string | null
    date?: Date | string | null
    project_name?: string | null
    ops_status?: string | null
    sales_comments?: string | null
    opsleader_comments?: string | null
    sheet_link?: string | null
    deli_last_date?: Date | string | null
    status?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: Decimal | DecimalJsLike | number | string | null
    rating?: number | null
    project_requirements?: string | null
    Assigned_date?: Date | string | null
    extension?: number | null
    is_delivered?: boolean | null
    revision?: number | null
    delivery_date?: Date | string | null
    update_at?: Date | string | null
    department: departmentCreateNestedOneWithoutAssign_projectInput
    team_member: team_memberCreateNestedOneWithoutProjectInput
    profile?: profileCreateNestedOneWithoutProjectsInput
    today_task?: today_taskCreateNestedManyWithoutProjectInput
    team_members?: team_memberCreateNestedManyWithoutAssigned_projectsInput
    member_distribution?: member_distributionCreateNestedManyWithoutProjectInput
  }

  export type projectUncheckedCreateWithoutTeamInput = {
    id?: number
    order_id?: string | null
    date?: Date | string | null
    project_name?: string | null
    ops_status?: string | null
    sales_comments?: string | null
    opsleader_comments?: string | null
    sheet_link?: string | null
    ordered_by: number
    deli_last_date?: Date | string | null
    status?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: Decimal | DecimalJsLike | number | string | null
    rating?: number | null
    department_id: number
    project_requirements?: string | null
    profile_id?: number | null
    Assigned_date?: Date | string | null
    extension?: number | null
    is_delivered?: boolean | null
    revision?: number | null
    delivery_date?: Date | string | null
    update_at?: Date | string | null
    today_task?: today_taskUncheckedCreateNestedManyWithoutProjectInput
    team_members?: team_memberUncheckedCreateNestedManyWithoutAssigned_projectsInput
    member_distribution?: member_distributionUncheckedCreateNestedManyWithoutProjectInput
  }

  export type projectCreateOrConnectWithoutTeamInput = {
    where: projectWhereUniqueInput
    create: XOR<projectCreateWithoutTeamInput, projectUncheckedCreateWithoutTeamInput>
  }

  export type projectCreateManyTeamInputEnvelope = {
    data: projectCreateManyTeamInput | projectCreateManyTeamInput[]
    skipDuplicates?: boolean
  }

  export type departmentCreateWithoutDepartment_teamsInput = {
    department_name?: string | null
    department_target?: Decimal | DecimalJsLike | number | string | null
    department_achieve?: Decimal | DecimalJsLike | number | string | null
    department_cancel?: Decimal | DecimalJsLike | number | string | null
    department_special_order?: Decimal | DecimalJsLike | number | string | null
    department_designation?: string | null
    project_requirements?: string | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    assign_project?: projectCreateNestedManyWithoutDepartmentInput
    department_profile?: profileCreateNestedManyWithoutDepartmentInput
  }

  export type departmentUncheckedCreateWithoutDepartment_teamsInput = {
    id?: number
    department_name?: string | null
    department_target?: Decimal | DecimalJsLike | number | string | null
    department_achieve?: Decimal | DecimalJsLike | number | string | null
    department_cancel?: Decimal | DecimalJsLike | number | string | null
    department_special_order?: Decimal | DecimalJsLike | number | string | null
    department_designation?: string | null
    project_requirements?: string | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    assign_project?: projectUncheckedCreateNestedManyWithoutDepartmentInput
    department_profile?: profileUncheckedCreateNestedManyWithoutDepartmentInput
  }

  export type departmentCreateOrConnectWithoutDepartment_teamsInput = {
    where: departmentWhereUniqueInput
    create: XOR<departmentCreateWithoutDepartment_teamsInput, departmentUncheckedCreateWithoutDepartment_teamsInput>
  }

  export type team_memberCreateWithoutTeamInput = {
    first_name?: string | null
    last_name?: string | null
    email?: string | null
    number?: string | null
    permanent_address?: string | null
    present_address?: string | null
    gender?: string | null
    blood_group?: string | null
    relationship?: string | null
    guardian_relation?: string | null
    guardian_number?: string | null
    guardian_address?: string | null
    religion?: string | null
    education?: string | null
    dp?: string | null
    role?: string | null
    target?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    rewards?: Decimal | DecimalJsLike | number | string | null
    account_status?: string | null
    password?: string | null
    designation?: string | null
    uid?: string | null
    member_distribution?: member_distributionCreateNestedManyWithoutTeam_memberInput
    project?: projectCreateNestedManyWithoutTeam_memberInput
    today_task?: today_taskCreateNestedManyWithoutTeam_memberInput
    assigned_projects?: projectCreateNestedManyWithoutTeam_membersInput
    profile?: profileCreateNestedManyWithoutTeam_membersInput
  }

  export type team_memberUncheckedCreateWithoutTeamInput = {
    id?: number
    first_name?: string | null
    last_name?: string | null
    email?: string | null
    number?: string | null
    permanent_address?: string | null
    present_address?: string | null
    gender?: string | null
    blood_group?: string | null
    relationship?: string | null
    guardian_relation?: string | null
    guardian_number?: string | null
    guardian_address?: string | null
    religion?: string | null
    education?: string | null
    dp?: string | null
    role?: string | null
    target?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    rewards?: Decimal | DecimalJsLike | number | string | null
    account_status?: string | null
    password?: string | null
    designation?: string | null
    uid?: string | null
    member_distribution?: member_distributionUncheckedCreateNestedManyWithoutTeam_memberInput
    project?: projectUncheckedCreateNestedManyWithoutTeam_memberInput
    today_task?: today_taskUncheckedCreateNestedManyWithoutTeam_memberInput
    assigned_projects?: projectUncheckedCreateNestedManyWithoutTeam_membersInput
    profile?: profileUncheckedCreateNestedManyWithoutTeam_membersInput
  }

  export type team_memberCreateOrConnectWithoutTeamInput = {
    where: team_memberWhereUniqueInput
    create: XOR<team_memberCreateWithoutTeamInput, team_memberUncheckedCreateWithoutTeamInput>
  }

  export type team_memberCreateManyTeamInputEnvelope = {
    data: team_memberCreateManyTeamInput | team_memberCreateManyTeamInput[]
    skipDuplicates?: boolean
  }

  export type today_taskCreateWithoutTeamInput = {
    client_name?: string | null
    expected_finish_time?: string | null
    ops_status?: string | null
    project: projectCreateNestedOneWithoutToday_taskInput
    team_member?: team_memberCreateNestedOneWithoutToday_taskInput
  }

  export type today_taskUncheckedCreateWithoutTeamInput = {
    id?: number
    project_id: number
    client_name?: string | null
    expected_finish_time?: string | null
    ops_status?: string | null
    team_member_id?: number | null
  }

  export type today_taskCreateOrConnectWithoutTeamInput = {
    where: today_taskWhereUniqueInput
    create: XOR<today_taskCreateWithoutTeamInput, today_taskUncheckedCreateWithoutTeamInput>
  }

  export type today_taskCreateManyTeamInputEnvelope = {
    data: today_taskCreateManyTeamInput | today_taskCreateManyTeamInput[]
    skipDuplicates?: boolean
  }

  export type revisionCreateWithoutTeamInput = {
    project_id: number
    revision_date?: Date | string | null
    revision_comments?: string | null
    delivery_date?: Date | string | null
    metting_link?: string | null
    metting_date?: Date | string | null
  }

  export type revisionUncheckedCreateWithoutTeamInput = {
    id?: number
    project_id: number
    revision_date?: Date | string | null
    revision_comments?: string | null
    delivery_date?: Date | string | null
    metting_link?: string | null
    metting_date?: Date | string | null
  }

  export type revisionCreateOrConnectWithoutTeamInput = {
    where: revisionWhereUniqueInput
    create: XOR<revisionCreateWithoutTeamInput, revisionUncheckedCreateWithoutTeamInput>
  }

  export type projectUpsertWithWhereUniqueWithoutTeamInput = {
    where: projectWhereUniqueInput
    update: XOR<projectUpdateWithoutTeamInput, projectUncheckedUpdateWithoutTeamInput>
    create: XOR<projectCreateWithoutTeamInput, projectUncheckedCreateWithoutTeamInput>
  }

  export type projectUpdateWithWhereUniqueWithoutTeamInput = {
    where: projectWhereUniqueInput
    data: XOR<projectUpdateWithoutTeamInput, projectUncheckedUpdateWithoutTeamInput>
  }

  export type projectUpdateManyWithWhereWithoutTeamInput = {
    where: projectScalarWhereInput
    data: XOR<projectUpdateManyMutationInput, projectUncheckedUpdateManyWithoutTeamInput>
  }

  export type projectScalarWhereInput = {
    AND?: projectScalarWhereInput | projectScalarWhereInput[]
    OR?: projectScalarWhereInput[]
    NOT?: projectScalarWhereInput | projectScalarWhereInput[]
    id?: IntFilter<"project"> | number
    order_id?: StringNullableFilter<"project"> | string | null
    date?: DateTimeNullableFilter<"project"> | Date | string | null
    project_name?: StringNullableFilter<"project"> | string | null
    ops_status?: StringNullableFilter<"project"> | string | null
    sales_comments?: StringNullableFilter<"project"> | string | null
    opsleader_comments?: StringNullableFilter<"project"> | string | null
    sheet_link?: StringNullableFilter<"project"> | string | null
    ordered_by?: IntFilter<"project"> | number
    deli_last_date?: DateTimeNullableFilter<"project"> | Date | string | null
    status?: StringNullableFilter<"project"> | string | null
    order_amount?: DecimalNullableFilter<"project"> | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: DecimalNullableFilter<"project"> | Decimal | DecimalJsLike | number | string | null
    bonus?: DecimalNullableFilter<"project"> | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: DecimalNullableFilter<"project"> | Decimal | DecimalJsLike | number | string | null
    rating?: IntNullableFilter<"project"> | number | null
    department_id?: IntFilter<"project"> | number
    project_requirements?: StringNullableFilter<"project"> | string | null
    profile_id?: IntNullableFilter<"project"> | number | null
    team_id?: IntNullableFilter<"project"> | number | null
    Assigned_date?: DateTimeNullableFilter<"project"> | Date | string | null
    extension?: IntNullableFilter<"project"> | number | null
    is_delivered?: BoolNullableFilter<"project"> | boolean | null
    revision?: IntNullableFilter<"project"> | number | null
    delivery_date?: DateTimeNullableFilter<"project"> | Date | string | null
    update_at?: DateTimeNullableFilter<"project"> | Date | string | null
  }

  export type departmentUpsertWithoutDepartment_teamsInput = {
    update: XOR<departmentUpdateWithoutDepartment_teamsInput, departmentUncheckedUpdateWithoutDepartment_teamsInput>
    create: XOR<departmentCreateWithoutDepartment_teamsInput, departmentUncheckedCreateWithoutDepartment_teamsInput>
    where?: departmentWhereInput
  }

  export type departmentUpdateToOneWithWhereWithoutDepartment_teamsInput = {
    where?: departmentWhereInput
    data: XOR<departmentUpdateWithoutDepartment_teamsInput, departmentUncheckedUpdateWithoutDepartment_teamsInput>
  }

  export type departmentUpdateWithoutDepartment_teamsInput = {
    department_name?: NullableStringFieldUpdateOperationsInput | string | null
    department_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_cancel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_special_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_designation?: NullableStringFieldUpdateOperationsInput | string | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    assign_project?: projectUpdateManyWithoutDepartmentNestedInput
    department_profile?: profileUpdateManyWithoutDepartmentNestedInput
  }

  export type departmentUncheckedUpdateWithoutDepartment_teamsInput = {
    id?: IntFieldUpdateOperationsInput | number
    department_name?: NullableStringFieldUpdateOperationsInput | string | null
    department_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_cancel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_special_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_designation?: NullableStringFieldUpdateOperationsInput | string | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    assign_project?: projectUncheckedUpdateManyWithoutDepartmentNestedInput
    department_profile?: profileUncheckedUpdateManyWithoutDepartmentNestedInput
  }

  export type team_memberUpsertWithWhereUniqueWithoutTeamInput = {
    where: team_memberWhereUniqueInput
    update: XOR<team_memberUpdateWithoutTeamInput, team_memberUncheckedUpdateWithoutTeamInput>
    create: XOR<team_memberCreateWithoutTeamInput, team_memberUncheckedCreateWithoutTeamInput>
  }

  export type team_memberUpdateWithWhereUniqueWithoutTeamInput = {
    where: team_memberWhereUniqueInput
    data: XOR<team_memberUpdateWithoutTeamInput, team_memberUncheckedUpdateWithoutTeamInput>
  }

  export type team_memberUpdateManyWithWhereWithoutTeamInput = {
    where: team_memberScalarWhereInput
    data: XOR<team_memberUpdateManyMutationInput, team_memberUncheckedUpdateManyWithoutTeamInput>
  }

  export type today_taskUpsertWithWhereUniqueWithoutTeamInput = {
    where: today_taskWhereUniqueInput
    update: XOR<today_taskUpdateWithoutTeamInput, today_taskUncheckedUpdateWithoutTeamInput>
    create: XOR<today_taskCreateWithoutTeamInput, today_taskUncheckedCreateWithoutTeamInput>
  }

  export type today_taskUpdateWithWhereUniqueWithoutTeamInput = {
    where: today_taskWhereUniqueInput
    data: XOR<today_taskUpdateWithoutTeamInput, today_taskUncheckedUpdateWithoutTeamInput>
  }

  export type today_taskUpdateManyWithWhereWithoutTeamInput = {
    where: today_taskScalarWhereInput
    data: XOR<today_taskUpdateManyMutationInput, today_taskUncheckedUpdateManyWithoutTeamInput>
  }

  export type revisionUpsertWithWhereUniqueWithoutTeamInput = {
    where: revisionWhereUniqueInput
    update: XOR<revisionUpdateWithoutTeamInput, revisionUncheckedUpdateWithoutTeamInput>
    create: XOR<revisionCreateWithoutTeamInput, revisionUncheckedCreateWithoutTeamInput>
  }

  export type revisionUpdateWithWhereUniqueWithoutTeamInput = {
    where: revisionWhereUniqueInput
    data: XOR<revisionUpdateWithoutTeamInput, revisionUncheckedUpdateWithoutTeamInput>
  }

  export type revisionUpdateManyWithWhereWithoutTeamInput = {
    where: revisionScalarWhereInput
    data: XOR<revisionUpdateManyMutationInput, revisionUncheckedUpdateManyWithoutTeamInput>
  }

  export type revisionScalarWhereInput = {
    AND?: revisionScalarWhereInput | revisionScalarWhereInput[]
    OR?: revisionScalarWhereInput[]
    NOT?: revisionScalarWhereInput | revisionScalarWhereInput[]
    id?: IntFilter<"revision"> | number
    project_id?: IntFilter<"revision"> | number
    revision_date?: DateTimeNullableFilter<"revision"> | Date | string | null
    revision_comments?: StringNullableFilter<"revision"> | string | null
    delivery_date?: DateTimeNullableFilter<"revision"> | Date | string | null
    metting_link?: StringNullableFilter<"revision"> | string | null
    metting_date?: DateTimeNullableFilter<"revision"> | Date | string | null
  }

  export type projectCreateWithoutDepartmentInput = {
    order_id?: string | null
    date?: Date | string | null
    project_name?: string | null
    ops_status?: string | null
    sales_comments?: string | null
    opsleader_comments?: string | null
    sheet_link?: string | null
    deli_last_date?: Date | string | null
    status?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: Decimal | DecimalJsLike | number | string | null
    rating?: number | null
    project_requirements?: string | null
    Assigned_date?: Date | string | null
    extension?: number | null
    is_delivered?: boolean | null
    revision?: number | null
    delivery_date?: Date | string | null
    update_at?: Date | string | null
    team_member: team_memberCreateNestedOneWithoutProjectInput
    profile?: profileCreateNestedOneWithoutProjectsInput
    team?: teamCreateNestedOneWithoutProjectInput
    today_task?: today_taskCreateNestedManyWithoutProjectInput
    team_members?: team_memberCreateNestedManyWithoutAssigned_projectsInput
    member_distribution?: member_distributionCreateNestedManyWithoutProjectInput
  }

  export type projectUncheckedCreateWithoutDepartmentInput = {
    id?: number
    order_id?: string | null
    date?: Date | string | null
    project_name?: string | null
    ops_status?: string | null
    sales_comments?: string | null
    opsleader_comments?: string | null
    sheet_link?: string | null
    ordered_by: number
    deli_last_date?: Date | string | null
    status?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: Decimal | DecimalJsLike | number | string | null
    rating?: number | null
    project_requirements?: string | null
    profile_id?: number | null
    team_id?: number | null
    Assigned_date?: Date | string | null
    extension?: number | null
    is_delivered?: boolean | null
    revision?: number | null
    delivery_date?: Date | string | null
    update_at?: Date | string | null
    today_task?: today_taskUncheckedCreateNestedManyWithoutProjectInput
    team_members?: team_memberUncheckedCreateNestedManyWithoutAssigned_projectsInput
    member_distribution?: member_distributionUncheckedCreateNestedManyWithoutProjectInput
  }

  export type projectCreateOrConnectWithoutDepartmentInput = {
    where: projectWhereUniqueInput
    create: XOR<projectCreateWithoutDepartmentInput, projectUncheckedCreateWithoutDepartmentInput>
  }

  export type projectCreateManyDepartmentInputEnvelope = {
    data: projectCreateManyDepartmentInput | projectCreateManyDepartmentInput[]
    skipDuplicates?: boolean
  }

  export type teamCreateWithoutDepartmentInput = {
    team_name?: string | null
    team_achieve?: Decimal | DecimalJsLike | number | string | null
    team_cancel?: number | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    team_target?: Decimal | DecimalJsLike | number | string | null
    project?: projectCreateNestedManyWithoutTeamInput
    team_member?: team_memberCreateNestedManyWithoutTeamInput
    today_task?: today_taskCreateNestedManyWithoutTeamInput
    revision?: revisionCreateNestedManyWithoutTeamInput
  }

  export type teamUncheckedCreateWithoutDepartmentInput = {
    id?: number
    team_name?: string | null
    team_achieve?: Decimal | DecimalJsLike | number | string | null
    team_cancel?: number | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    team_target?: Decimal | DecimalJsLike | number | string | null
    project?: projectUncheckedCreateNestedManyWithoutTeamInput
    team_member?: team_memberUncheckedCreateNestedManyWithoutTeamInput
    today_task?: today_taskUncheckedCreateNestedManyWithoutTeamInput
    revision?: revisionUncheckedCreateNestedManyWithoutTeamInput
  }

  export type teamCreateOrConnectWithoutDepartmentInput = {
    where: teamWhereUniqueInput
    create: XOR<teamCreateWithoutDepartmentInput, teamUncheckedCreateWithoutDepartmentInput>
  }

  export type teamCreateManyDepartmentInputEnvelope = {
    data: teamCreateManyDepartmentInput | teamCreateManyDepartmentInput[]
    skipDuplicates?: boolean
  }

  export type profileCreateWithoutDepartmentInput = {
    created_date?: Date | string | null
    profile_name?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    bonus_amount?: Decimal | DecimalJsLike | number | string | null
    order_count?: number | null
    rank?: Decimal | DecimalJsLike | number | string | null
    cancel_count?: number | null
    complete_count?: number | null
    no_rating?: number | null
    profile_target?: Decimal | DecimalJsLike | number | string | null
    department_id: number
    repeat_order?: Decimal | DecimalJsLike | number | string | null
    keywords?: string | null
    total_rating?: Decimal | DecimalJsLike | number | string | null
    projects?: projectCreateNestedManyWithoutProfileInput
    team_members?: team_memberCreateNestedManyWithoutProfileInput
  }

  export type profileUncheckedCreateWithoutDepartmentInput = {
    id?: number
    created_date?: Date | string | null
    profile_name?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    bonus_amount?: Decimal | DecimalJsLike | number | string | null
    order_count?: number | null
    rank?: Decimal | DecimalJsLike | number | string | null
    cancel_count?: number | null
    complete_count?: number | null
    no_rating?: number | null
    profile_target?: Decimal | DecimalJsLike | number | string | null
    department_id: number
    repeat_order?: Decimal | DecimalJsLike | number | string | null
    keywords?: string | null
    total_rating?: Decimal | DecimalJsLike | number | string | null
    projects?: projectUncheckedCreateNestedManyWithoutProfileInput
    team_members?: team_memberUncheckedCreateNestedManyWithoutProfileInput
  }

  export type profileCreateOrConnectWithoutDepartmentInput = {
    where: profileWhereUniqueInput
    create: XOR<profileCreateWithoutDepartmentInput, profileUncheckedCreateWithoutDepartmentInput>
  }

  export type projectUpsertWithWhereUniqueWithoutDepartmentInput = {
    where: projectWhereUniqueInput
    update: XOR<projectUpdateWithoutDepartmentInput, projectUncheckedUpdateWithoutDepartmentInput>
    create: XOR<projectCreateWithoutDepartmentInput, projectUncheckedCreateWithoutDepartmentInput>
  }

  export type projectUpdateWithWhereUniqueWithoutDepartmentInput = {
    where: projectWhereUniqueInput
    data: XOR<projectUpdateWithoutDepartmentInput, projectUncheckedUpdateWithoutDepartmentInput>
  }

  export type projectUpdateManyWithWhereWithoutDepartmentInput = {
    where: projectScalarWhereInput
    data: XOR<projectUpdateManyMutationInput, projectUncheckedUpdateManyWithoutDepartmentInput>
  }

  export type teamUpsertWithWhereUniqueWithoutDepartmentInput = {
    where: teamWhereUniqueInput
    update: XOR<teamUpdateWithoutDepartmentInput, teamUncheckedUpdateWithoutDepartmentInput>
    create: XOR<teamCreateWithoutDepartmentInput, teamUncheckedCreateWithoutDepartmentInput>
  }

  export type teamUpdateWithWhereUniqueWithoutDepartmentInput = {
    where: teamWhereUniqueInput
    data: XOR<teamUpdateWithoutDepartmentInput, teamUncheckedUpdateWithoutDepartmentInput>
  }

  export type teamUpdateManyWithWhereWithoutDepartmentInput = {
    where: teamScalarWhereInput
    data: XOR<teamUpdateManyMutationInput, teamUncheckedUpdateManyWithoutDepartmentInput>
  }

  export type teamScalarWhereInput = {
    AND?: teamScalarWhereInput | teamScalarWhereInput[]
    OR?: teamScalarWhereInput[]
    NOT?: teamScalarWhereInput | teamScalarWhereInput[]
    id?: IntFilter<"team"> | number
    team_name?: StringNullableFilter<"team"> | string | null
    department_id?: IntFilter<"team"> | number
    team_achieve?: DecimalNullableFilter<"team"> | Decimal | DecimalJsLike | number | string | null
    team_cancel?: IntNullableFilter<"team"> | number | null
    total_carry?: DecimalNullableFilter<"team"> | Decimal | DecimalJsLike | number | string | null
    team_target?: DecimalNullableFilter<"team"> | Decimal | DecimalJsLike | number | string | null
  }

  export type profileUpsertWithWhereUniqueWithoutDepartmentInput = {
    where: profileWhereUniqueInput
    update: XOR<profileUpdateWithoutDepartmentInput, profileUncheckedUpdateWithoutDepartmentInput>
    create: XOR<profileCreateWithoutDepartmentInput, profileUncheckedCreateWithoutDepartmentInput>
  }

  export type profileUpdateWithWhereUniqueWithoutDepartmentInput = {
    where: profileWhereUniqueInput
    data: XOR<profileUpdateWithoutDepartmentInput, profileUncheckedUpdateWithoutDepartmentInput>
  }

  export type profileUpdateManyWithWhereWithoutDepartmentInput = {
    where: profileScalarWhereInput
    data: XOR<profileUpdateManyMutationInput, profileUncheckedUpdateManyWithoutDepartmentInput>
  }

  export type profileScalarWhereInput = {
    AND?: profileScalarWhereInput | profileScalarWhereInput[]
    OR?: profileScalarWhereInput[]
    NOT?: profileScalarWhereInput | profileScalarWhereInput[]
    id?: IntFilter<"profile"> | number
    created_date?: DateTimeNullableFilter<"profile"> | Date | string | null
    profile_name?: StringNullableFilter<"profile"> | string | null
    order_amount?: DecimalNullableFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    bonus_amount?: DecimalNullableFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    order_count?: IntNullableFilter<"profile"> | number | null
    rank?: DecimalNullableFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    cancel_count?: IntNullableFilter<"profile"> | number | null
    complete_count?: IntNullableFilter<"profile"> | number | null
    no_rating?: IntNullableFilter<"profile"> | number | null
    profile_target?: DecimalNullableFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    department_id?: IntFilter<"profile"> | number
    repeat_order?: DecimalNullableFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
    keywords?: StringNullableFilter<"profile"> | string | null
    total_rating?: DecimalNullableFilter<"profile"> | Decimal | DecimalJsLike | number | string | null
  }

  export type projectCreateWithoutProfileInput = {
    order_id?: string | null
    date?: Date | string | null
    project_name?: string | null
    ops_status?: string | null
    sales_comments?: string | null
    opsleader_comments?: string | null
    sheet_link?: string | null
    deli_last_date?: Date | string | null
    status?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: Decimal | DecimalJsLike | number | string | null
    rating?: number | null
    project_requirements?: string | null
    Assigned_date?: Date | string | null
    extension?: number | null
    is_delivered?: boolean | null
    revision?: number | null
    delivery_date?: Date | string | null
    update_at?: Date | string | null
    department: departmentCreateNestedOneWithoutAssign_projectInput
    team_member: team_memberCreateNestedOneWithoutProjectInput
    team?: teamCreateNestedOneWithoutProjectInput
    today_task?: today_taskCreateNestedManyWithoutProjectInput
    team_members?: team_memberCreateNestedManyWithoutAssigned_projectsInput
    member_distribution?: member_distributionCreateNestedManyWithoutProjectInput
  }

  export type projectUncheckedCreateWithoutProfileInput = {
    id?: number
    order_id?: string | null
    date?: Date | string | null
    project_name?: string | null
    ops_status?: string | null
    sales_comments?: string | null
    opsleader_comments?: string | null
    sheet_link?: string | null
    ordered_by: number
    deli_last_date?: Date | string | null
    status?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: Decimal | DecimalJsLike | number | string | null
    rating?: number | null
    department_id: number
    project_requirements?: string | null
    team_id?: number | null
    Assigned_date?: Date | string | null
    extension?: number | null
    is_delivered?: boolean | null
    revision?: number | null
    delivery_date?: Date | string | null
    update_at?: Date | string | null
    today_task?: today_taskUncheckedCreateNestedManyWithoutProjectInput
    team_members?: team_memberUncheckedCreateNestedManyWithoutAssigned_projectsInput
    member_distribution?: member_distributionUncheckedCreateNestedManyWithoutProjectInput
  }

  export type projectCreateOrConnectWithoutProfileInput = {
    where: projectWhereUniqueInput
    create: XOR<projectCreateWithoutProfileInput, projectUncheckedCreateWithoutProfileInput>
  }

  export type projectCreateManyProfileInputEnvelope = {
    data: projectCreateManyProfileInput | projectCreateManyProfileInput[]
    skipDuplicates?: boolean
  }

  export type departmentCreateWithoutDepartment_profileInput = {
    department_name?: string | null
    department_target?: Decimal | DecimalJsLike | number | string | null
    department_achieve?: Decimal | DecimalJsLike | number | string | null
    department_cancel?: Decimal | DecimalJsLike | number | string | null
    department_special_order?: Decimal | DecimalJsLike | number | string | null
    department_designation?: string | null
    project_requirements?: string | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    assign_project?: projectCreateNestedManyWithoutDepartmentInput
    department_teams?: teamCreateNestedManyWithoutDepartmentInput
  }

  export type departmentUncheckedCreateWithoutDepartment_profileInput = {
    id?: number
    department_name?: string | null
    department_target?: Decimal | DecimalJsLike | number | string | null
    department_achieve?: Decimal | DecimalJsLike | number | string | null
    department_cancel?: Decimal | DecimalJsLike | number | string | null
    department_special_order?: Decimal | DecimalJsLike | number | string | null
    department_designation?: string | null
    project_requirements?: string | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    assign_project?: projectUncheckedCreateNestedManyWithoutDepartmentInput
    department_teams?: teamUncheckedCreateNestedManyWithoutDepartmentInput
  }

  export type departmentCreateOrConnectWithoutDepartment_profileInput = {
    where: departmentWhereUniqueInput
    create: XOR<departmentCreateWithoutDepartment_profileInput, departmentUncheckedCreateWithoutDepartment_profileInput>
  }

  export type team_memberCreateWithoutProfileInput = {
    first_name?: string | null
    last_name?: string | null
    email?: string | null
    number?: string | null
    permanent_address?: string | null
    present_address?: string | null
    gender?: string | null
    blood_group?: string | null
    relationship?: string | null
    guardian_relation?: string | null
    guardian_number?: string | null
    guardian_address?: string | null
    religion?: string | null
    education?: string | null
    dp?: string | null
    role?: string | null
    target?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    rewards?: Decimal | DecimalJsLike | number | string | null
    account_status?: string | null
    password?: string | null
    designation?: string | null
    uid?: string | null
    member_distribution?: member_distributionCreateNestedManyWithoutTeam_memberInput
    project?: projectCreateNestedManyWithoutTeam_memberInput
    team?: teamCreateNestedOneWithoutTeam_memberInput
    today_task?: today_taskCreateNestedManyWithoutTeam_memberInput
    assigned_projects?: projectCreateNestedManyWithoutTeam_membersInput
  }

  export type team_memberUncheckedCreateWithoutProfileInput = {
    id?: number
    first_name?: string | null
    last_name?: string | null
    email?: string | null
    number?: string | null
    permanent_address?: string | null
    present_address?: string | null
    gender?: string | null
    blood_group?: string | null
    relationship?: string | null
    guardian_relation?: string | null
    guardian_number?: string | null
    guardian_address?: string | null
    team_id?: number | null
    religion?: string | null
    education?: string | null
    dp?: string | null
    role?: string | null
    target?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    rewards?: Decimal | DecimalJsLike | number | string | null
    account_status?: string | null
    password?: string | null
    designation?: string | null
    uid?: string | null
    member_distribution?: member_distributionUncheckedCreateNestedManyWithoutTeam_memberInput
    project?: projectUncheckedCreateNestedManyWithoutTeam_memberInput
    today_task?: today_taskUncheckedCreateNestedManyWithoutTeam_memberInput
    assigned_projects?: projectUncheckedCreateNestedManyWithoutTeam_membersInput
  }

  export type team_memberCreateOrConnectWithoutProfileInput = {
    where: team_memberWhereUniqueInput
    create: XOR<team_memberCreateWithoutProfileInput, team_memberUncheckedCreateWithoutProfileInput>
  }

  export type projectUpsertWithWhereUniqueWithoutProfileInput = {
    where: projectWhereUniqueInput
    update: XOR<projectUpdateWithoutProfileInput, projectUncheckedUpdateWithoutProfileInput>
    create: XOR<projectCreateWithoutProfileInput, projectUncheckedCreateWithoutProfileInput>
  }

  export type projectUpdateWithWhereUniqueWithoutProfileInput = {
    where: projectWhereUniqueInput
    data: XOR<projectUpdateWithoutProfileInput, projectUncheckedUpdateWithoutProfileInput>
  }

  export type projectUpdateManyWithWhereWithoutProfileInput = {
    where: projectScalarWhereInput
    data: XOR<projectUpdateManyMutationInput, projectUncheckedUpdateManyWithoutProfileInput>
  }

  export type departmentUpsertWithWhereUniqueWithoutDepartment_profileInput = {
    where: departmentWhereUniqueInput
    update: XOR<departmentUpdateWithoutDepartment_profileInput, departmentUncheckedUpdateWithoutDepartment_profileInput>
    create: XOR<departmentCreateWithoutDepartment_profileInput, departmentUncheckedCreateWithoutDepartment_profileInput>
  }

  export type departmentUpdateWithWhereUniqueWithoutDepartment_profileInput = {
    where: departmentWhereUniqueInput
    data: XOR<departmentUpdateWithoutDepartment_profileInput, departmentUncheckedUpdateWithoutDepartment_profileInput>
  }

  export type departmentUpdateManyWithWhereWithoutDepartment_profileInput = {
    where: departmentScalarWhereInput
    data: XOR<departmentUpdateManyMutationInput, departmentUncheckedUpdateManyWithoutDepartment_profileInput>
  }

  export type departmentScalarWhereInput = {
    AND?: departmentScalarWhereInput | departmentScalarWhereInput[]
    OR?: departmentScalarWhereInput[]
    NOT?: departmentScalarWhereInput | departmentScalarWhereInput[]
    id?: IntFilter<"department"> | number
    department_name?: StringNullableFilter<"department"> | string | null
    department_target?: DecimalNullableFilter<"department"> | Decimal | DecimalJsLike | number | string | null
    department_achieve?: DecimalNullableFilter<"department"> | Decimal | DecimalJsLike | number | string | null
    department_cancel?: DecimalNullableFilter<"department"> | Decimal | DecimalJsLike | number | string | null
    department_special_order?: DecimalNullableFilter<"department"> | Decimal | DecimalJsLike | number | string | null
    department_designation?: StringNullableFilter<"department"> | string | null
    project_requirements?: StringNullableFilter<"department"> | string | null
    total_carry?: DecimalNullableFilter<"department"> | Decimal | DecimalJsLike | number | string | null
  }

  export type team_memberUpsertWithWhereUniqueWithoutProfileInput = {
    where: team_memberWhereUniqueInput
    update: XOR<team_memberUpdateWithoutProfileInput, team_memberUncheckedUpdateWithoutProfileInput>
    create: XOR<team_memberCreateWithoutProfileInput, team_memberUncheckedCreateWithoutProfileInput>
  }

  export type team_memberUpdateWithWhereUniqueWithoutProfileInput = {
    where: team_memberWhereUniqueInput
    data: XOR<team_memberUpdateWithoutProfileInput, team_memberUncheckedUpdateWithoutProfileInput>
  }

  export type team_memberUpdateManyWithWhereWithoutProfileInput = {
    where: team_memberScalarWhereInput
    data: XOR<team_memberUpdateManyMutationInput, team_memberUncheckedUpdateManyWithoutProfileInput>
  }

  export type member_distributionCreateWithoutTeam_memberInput = {
    amount?: Decimal | DecimalJsLike | number | string | null
    project: projectCreateNestedOneWithoutMember_distributionInput
  }

  export type member_distributionUncheckedCreateWithoutTeam_memberInput = {
    id?: number
    amount?: Decimal | DecimalJsLike | number | string | null
    project_id: number
  }

  export type member_distributionCreateOrConnectWithoutTeam_memberInput = {
    where: member_distributionWhereUniqueInput
    create: XOR<member_distributionCreateWithoutTeam_memberInput, member_distributionUncheckedCreateWithoutTeam_memberInput>
  }

  export type member_distributionCreateManyTeam_memberInputEnvelope = {
    data: member_distributionCreateManyTeam_memberInput | member_distributionCreateManyTeam_memberInput[]
    skipDuplicates?: boolean
  }

  export type projectCreateWithoutTeam_memberInput = {
    order_id?: string | null
    date?: Date | string | null
    project_name?: string | null
    ops_status?: string | null
    sales_comments?: string | null
    opsleader_comments?: string | null
    sheet_link?: string | null
    deli_last_date?: Date | string | null
    status?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: Decimal | DecimalJsLike | number | string | null
    rating?: number | null
    project_requirements?: string | null
    Assigned_date?: Date | string | null
    extension?: number | null
    is_delivered?: boolean | null
    revision?: number | null
    delivery_date?: Date | string | null
    update_at?: Date | string | null
    department: departmentCreateNestedOneWithoutAssign_projectInput
    profile?: profileCreateNestedOneWithoutProjectsInput
    team?: teamCreateNestedOneWithoutProjectInput
    today_task?: today_taskCreateNestedManyWithoutProjectInput
    team_members?: team_memberCreateNestedManyWithoutAssigned_projectsInput
    member_distribution?: member_distributionCreateNestedManyWithoutProjectInput
  }

  export type projectUncheckedCreateWithoutTeam_memberInput = {
    id?: number
    order_id?: string | null
    date?: Date | string | null
    project_name?: string | null
    ops_status?: string | null
    sales_comments?: string | null
    opsleader_comments?: string | null
    sheet_link?: string | null
    deli_last_date?: Date | string | null
    status?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: Decimal | DecimalJsLike | number | string | null
    rating?: number | null
    department_id: number
    project_requirements?: string | null
    profile_id?: number | null
    team_id?: number | null
    Assigned_date?: Date | string | null
    extension?: number | null
    is_delivered?: boolean | null
    revision?: number | null
    delivery_date?: Date | string | null
    update_at?: Date | string | null
    today_task?: today_taskUncheckedCreateNestedManyWithoutProjectInput
    team_members?: team_memberUncheckedCreateNestedManyWithoutAssigned_projectsInput
    member_distribution?: member_distributionUncheckedCreateNestedManyWithoutProjectInput
  }

  export type projectCreateOrConnectWithoutTeam_memberInput = {
    where: projectWhereUniqueInput
    create: XOR<projectCreateWithoutTeam_memberInput, projectUncheckedCreateWithoutTeam_memberInput>
  }

  export type projectCreateManyTeam_memberInputEnvelope = {
    data: projectCreateManyTeam_memberInput | projectCreateManyTeam_memberInput[]
    skipDuplicates?: boolean
  }

  export type teamCreateWithoutTeam_memberInput = {
    team_name?: string | null
    team_achieve?: Decimal | DecimalJsLike | number | string | null
    team_cancel?: number | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    team_target?: Decimal | DecimalJsLike | number | string | null
    project?: projectCreateNestedManyWithoutTeamInput
    department: departmentCreateNestedOneWithoutDepartment_teamsInput
    today_task?: today_taskCreateNestedManyWithoutTeamInput
    revision?: revisionCreateNestedManyWithoutTeamInput
  }

  export type teamUncheckedCreateWithoutTeam_memberInput = {
    id?: number
    team_name?: string | null
    department_id: number
    team_achieve?: Decimal | DecimalJsLike | number | string | null
    team_cancel?: number | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    team_target?: Decimal | DecimalJsLike | number | string | null
    project?: projectUncheckedCreateNestedManyWithoutTeamInput
    today_task?: today_taskUncheckedCreateNestedManyWithoutTeamInput
    revision?: revisionUncheckedCreateNestedManyWithoutTeamInput
  }

  export type teamCreateOrConnectWithoutTeam_memberInput = {
    where: teamWhereUniqueInput
    create: XOR<teamCreateWithoutTeam_memberInput, teamUncheckedCreateWithoutTeam_memberInput>
  }

  export type today_taskCreateWithoutTeam_memberInput = {
    client_name?: string | null
    expected_finish_time?: string | null
    ops_status?: string | null
    project: projectCreateNestedOneWithoutToday_taskInput
    team?: teamCreateNestedOneWithoutToday_taskInput
  }

  export type today_taskUncheckedCreateWithoutTeam_memberInput = {
    id?: number
    project_id: number
    client_name?: string | null
    expected_finish_time?: string | null
    team_id?: number | null
    ops_status?: string | null
  }

  export type today_taskCreateOrConnectWithoutTeam_memberInput = {
    where: today_taskWhereUniqueInput
    create: XOR<today_taskCreateWithoutTeam_memberInput, today_taskUncheckedCreateWithoutTeam_memberInput>
  }

  export type today_taskCreateManyTeam_memberInputEnvelope = {
    data: today_taskCreateManyTeam_memberInput | today_taskCreateManyTeam_memberInput[]
    skipDuplicates?: boolean
  }

  export type projectCreateWithoutTeam_membersInput = {
    order_id?: string | null
    date?: Date | string | null
    project_name?: string | null
    ops_status?: string | null
    sales_comments?: string | null
    opsleader_comments?: string | null
    sheet_link?: string | null
    deli_last_date?: Date | string | null
    status?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: Decimal | DecimalJsLike | number | string | null
    rating?: number | null
    project_requirements?: string | null
    Assigned_date?: Date | string | null
    extension?: number | null
    is_delivered?: boolean | null
    revision?: number | null
    delivery_date?: Date | string | null
    update_at?: Date | string | null
    department: departmentCreateNestedOneWithoutAssign_projectInput
    team_member: team_memberCreateNestedOneWithoutProjectInput
    profile?: profileCreateNestedOneWithoutProjectsInput
    team?: teamCreateNestedOneWithoutProjectInput
    today_task?: today_taskCreateNestedManyWithoutProjectInput
    member_distribution?: member_distributionCreateNestedManyWithoutProjectInput
  }

  export type projectUncheckedCreateWithoutTeam_membersInput = {
    id?: number
    order_id?: string | null
    date?: Date | string | null
    project_name?: string | null
    ops_status?: string | null
    sales_comments?: string | null
    opsleader_comments?: string | null
    sheet_link?: string | null
    ordered_by: number
    deli_last_date?: Date | string | null
    status?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: Decimal | DecimalJsLike | number | string | null
    rating?: number | null
    department_id: number
    project_requirements?: string | null
    profile_id?: number | null
    team_id?: number | null
    Assigned_date?: Date | string | null
    extension?: number | null
    is_delivered?: boolean | null
    revision?: number | null
    delivery_date?: Date | string | null
    update_at?: Date | string | null
    today_task?: today_taskUncheckedCreateNestedManyWithoutProjectInput
    member_distribution?: member_distributionUncheckedCreateNestedManyWithoutProjectInput
  }

  export type projectCreateOrConnectWithoutTeam_membersInput = {
    where: projectWhereUniqueInput
    create: XOR<projectCreateWithoutTeam_membersInput, projectUncheckedCreateWithoutTeam_membersInput>
  }

  export type profileCreateWithoutTeam_membersInput = {
    created_date?: Date | string | null
    profile_name?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    bonus_amount?: Decimal | DecimalJsLike | number | string | null
    order_count?: number | null
    rank?: Decimal | DecimalJsLike | number | string | null
    cancel_count?: number | null
    complete_count?: number | null
    no_rating?: number | null
    profile_target?: Decimal | DecimalJsLike | number | string | null
    department_id: number
    repeat_order?: Decimal | DecimalJsLike | number | string | null
    keywords?: string | null
    total_rating?: Decimal | DecimalJsLike | number | string | null
    projects?: projectCreateNestedManyWithoutProfileInput
    department?: departmentCreateNestedManyWithoutDepartment_profileInput
  }

  export type profileUncheckedCreateWithoutTeam_membersInput = {
    id?: number
    created_date?: Date | string | null
    profile_name?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    bonus_amount?: Decimal | DecimalJsLike | number | string | null
    order_count?: number | null
    rank?: Decimal | DecimalJsLike | number | string | null
    cancel_count?: number | null
    complete_count?: number | null
    no_rating?: number | null
    profile_target?: Decimal | DecimalJsLike | number | string | null
    department_id: number
    repeat_order?: Decimal | DecimalJsLike | number | string | null
    keywords?: string | null
    total_rating?: Decimal | DecimalJsLike | number | string | null
    projects?: projectUncheckedCreateNestedManyWithoutProfileInput
    department?: departmentUncheckedCreateNestedManyWithoutDepartment_profileInput
  }

  export type profileCreateOrConnectWithoutTeam_membersInput = {
    where: profileWhereUniqueInput
    create: XOR<profileCreateWithoutTeam_membersInput, profileUncheckedCreateWithoutTeam_membersInput>
  }

  export type member_distributionUpsertWithWhereUniqueWithoutTeam_memberInput = {
    where: member_distributionWhereUniqueInput
    update: XOR<member_distributionUpdateWithoutTeam_memberInput, member_distributionUncheckedUpdateWithoutTeam_memberInput>
    create: XOR<member_distributionCreateWithoutTeam_memberInput, member_distributionUncheckedCreateWithoutTeam_memberInput>
  }

  export type member_distributionUpdateWithWhereUniqueWithoutTeam_memberInput = {
    where: member_distributionWhereUniqueInput
    data: XOR<member_distributionUpdateWithoutTeam_memberInput, member_distributionUncheckedUpdateWithoutTeam_memberInput>
  }

  export type member_distributionUpdateManyWithWhereWithoutTeam_memberInput = {
    where: member_distributionScalarWhereInput
    data: XOR<member_distributionUpdateManyMutationInput, member_distributionUncheckedUpdateManyWithoutTeam_memberInput>
  }

  export type projectUpsertWithWhereUniqueWithoutTeam_memberInput = {
    where: projectWhereUniqueInput
    update: XOR<projectUpdateWithoutTeam_memberInput, projectUncheckedUpdateWithoutTeam_memberInput>
    create: XOR<projectCreateWithoutTeam_memberInput, projectUncheckedCreateWithoutTeam_memberInput>
  }

  export type projectUpdateWithWhereUniqueWithoutTeam_memberInput = {
    where: projectWhereUniqueInput
    data: XOR<projectUpdateWithoutTeam_memberInput, projectUncheckedUpdateWithoutTeam_memberInput>
  }

  export type projectUpdateManyWithWhereWithoutTeam_memberInput = {
    where: projectScalarWhereInput
    data: XOR<projectUpdateManyMutationInput, projectUncheckedUpdateManyWithoutTeam_memberInput>
  }

  export type teamUpsertWithoutTeam_memberInput = {
    update: XOR<teamUpdateWithoutTeam_memberInput, teamUncheckedUpdateWithoutTeam_memberInput>
    create: XOR<teamCreateWithoutTeam_memberInput, teamUncheckedCreateWithoutTeam_memberInput>
    where?: teamWhereInput
  }

  export type teamUpdateToOneWithWhereWithoutTeam_memberInput = {
    where?: teamWhereInput
    data: XOR<teamUpdateWithoutTeam_memberInput, teamUncheckedUpdateWithoutTeam_memberInput>
  }

  export type teamUpdateWithoutTeam_memberInput = {
    team_name?: NullableStringFieldUpdateOperationsInput | string | null
    team_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_cancel?: NullableIntFieldUpdateOperationsInput | number | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    project?: projectUpdateManyWithoutTeamNestedInput
    department?: departmentUpdateOneRequiredWithoutDepartment_teamsNestedInput
    today_task?: today_taskUpdateManyWithoutTeamNestedInput
    revision?: revisionUpdateManyWithoutTeamNestedInput
  }

  export type teamUncheckedUpdateWithoutTeam_memberInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_name?: NullableStringFieldUpdateOperationsInput | string | null
    department_id?: IntFieldUpdateOperationsInput | number
    team_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_cancel?: NullableIntFieldUpdateOperationsInput | number | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    project?: projectUncheckedUpdateManyWithoutTeamNestedInput
    today_task?: today_taskUncheckedUpdateManyWithoutTeamNestedInput
    revision?: revisionUncheckedUpdateManyWithoutTeamNestedInput
  }

  export type today_taskUpsertWithWhereUniqueWithoutTeam_memberInput = {
    where: today_taskWhereUniqueInput
    update: XOR<today_taskUpdateWithoutTeam_memberInput, today_taskUncheckedUpdateWithoutTeam_memberInput>
    create: XOR<today_taskCreateWithoutTeam_memberInput, today_taskUncheckedCreateWithoutTeam_memberInput>
  }

  export type today_taskUpdateWithWhereUniqueWithoutTeam_memberInput = {
    where: today_taskWhereUniqueInput
    data: XOR<today_taskUpdateWithoutTeam_memberInput, today_taskUncheckedUpdateWithoutTeam_memberInput>
  }

  export type today_taskUpdateManyWithWhereWithoutTeam_memberInput = {
    where: today_taskScalarWhereInput
    data: XOR<today_taskUpdateManyMutationInput, today_taskUncheckedUpdateManyWithoutTeam_memberInput>
  }

  export type projectUpsertWithWhereUniqueWithoutTeam_membersInput = {
    where: projectWhereUniqueInput
    update: XOR<projectUpdateWithoutTeam_membersInput, projectUncheckedUpdateWithoutTeam_membersInput>
    create: XOR<projectCreateWithoutTeam_membersInput, projectUncheckedCreateWithoutTeam_membersInput>
  }

  export type projectUpdateWithWhereUniqueWithoutTeam_membersInput = {
    where: projectWhereUniqueInput
    data: XOR<projectUpdateWithoutTeam_membersInput, projectUncheckedUpdateWithoutTeam_membersInput>
  }

  export type projectUpdateManyWithWhereWithoutTeam_membersInput = {
    where: projectScalarWhereInput
    data: XOR<projectUpdateManyMutationInput, projectUncheckedUpdateManyWithoutTeam_membersInput>
  }

  export type profileUpsertWithWhereUniqueWithoutTeam_membersInput = {
    where: profileWhereUniqueInput
    update: XOR<profileUpdateWithoutTeam_membersInput, profileUncheckedUpdateWithoutTeam_membersInput>
    create: XOR<profileCreateWithoutTeam_membersInput, profileUncheckedCreateWithoutTeam_membersInput>
  }

  export type profileUpdateWithWhereUniqueWithoutTeam_membersInput = {
    where: profileWhereUniqueInput
    data: XOR<profileUpdateWithoutTeam_membersInput, profileUncheckedUpdateWithoutTeam_membersInput>
  }

  export type profileUpdateManyWithWhereWithoutTeam_membersInput = {
    where: profileScalarWhereInput
    data: XOR<profileUpdateManyMutationInput, profileUncheckedUpdateManyWithoutTeam_membersInput>
  }

  export type team_memberCreateWithoutMember_distributionInput = {
    first_name?: string | null
    last_name?: string | null
    email?: string | null
    number?: string | null
    permanent_address?: string | null
    present_address?: string | null
    gender?: string | null
    blood_group?: string | null
    relationship?: string | null
    guardian_relation?: string | null
    guardian_number?: string | null
    guardian_address?: string | null
    religion?: string | null
    education?: string | null
    dp?: string | null
    role?: string | null
    target?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    rewards?: Decimal | DecimalJsLike | number | string | null
    account_status?: string | null
    password?: string | null
    designation?: string | null
    uid?: string | null
    project?: projectCreateNestedManyWithoutTeam_memberInput
    team?: teamCreateNestedOneWithoutTeam_memberInput
    today_task?: today_taskCreateNestedManyWithoutTeam_memberInput
    assigned_projects?: projectCreateNestedManyWithoutTeam_membersInput
    profile?: profileCreateNestedManyWithoutTeam_membersInput
  }

  export type team_memberUncheckedCreateWithoutMember_distributionInput = {
    id?: number
    first_name?: string | null
    last_name?: string | null
    email?: string | null
    number?: string | null
    permanent_address?: string | null
    present_address?: string | null
    gender?: string | null
    blood_group?: string | null
    relationship?: string | null
    guardian_relation?: string | null
    guardian_number?: string | null
    guardian_address?: string | null
    team_id?: number | null
    religion?: string | null
    education?: string | null
    dp?: string | null
    role?: string | null
    target?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    rewards?: Decimal | DecimalJsLike | number | string | null
    account_status?: string | null
    password?: string | null
    designation?: string | null
    uid?: string | null
    project?: projectUncheckedCreateNestedManyWithoutTeam_memberInput
    today_task?: today_taskUncheckedCreateNestedManyWithoutTeam_memberInput
    assigned_projects?: projectUncheckedCreateNestedManyWithoutTeam_membersInput
    profile?: profileUncheckedCreateNestedManyWithoutTeam_membersInput
  }

  export type team_memberCreateOrConnectWithoutMember_distributionInput = {
    where: team_memberWhereUniqueInput
    create: XOR<team_memberCreateWithoutMember_distributionInput, team_memberUncheckedCreateWithoutMember_distributionInput>
  }

  export type projectCreateWithoutMember_distributionInput = {
    order_id?: string | null
    date?: Date | string | null
    project_name?: string | null
    ops_status?: string | null
    sales_comments?: string | null
    opsleader_comments?: string | null
    sheet_link?: string | null
    deli_last_date?: Date | string | null
    status?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: Decimal | DecimalJsLike | number | string | null
    rating?: number | null
    project_requirements?: string | null
    Assigned_date?: Date | string | null
    extension?: number | null
    is_delivered?: boolean | null
    revision?: number | null
    delivery_date?: Date | string | null
    update_at?: Date | string | null
    department: departmentCreateNestedOneWithoutAssign_projectInput
    team_member: team_memberCreateNestedOneWithoutProjectInput
    profile?: profileCreateNestedOneWithoutProjectsInput
    team?: teamCreateNestedOneWithoutProjectInput
    today_task?: today_taskCreateNestedManyWithoutProjectInput
    team_members?: team_memberCreateNestedManyWithoutAssigned_projectsInput
  }

  export type projectUncheckedCreateWithoutMember_distributionInput = {
    id?: number
    order_id?: string | null
    date?: Date | string | null
    project_name?: string | null
    ops_status?: string | null
    sales_comments?: string | null
    opsleader_comments?: string | null
    sheet_link?: string | null
    ordered_by: number
    deli_last_date?: Date | string | null
    status?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: Decimal | DecimalJsLike | number | string | null
    rating?: number | null
    department_id: number
    project_requirements?: string | null
    profile_id?: number | null
    team_id?: number | null
    Assigned_date?: Date | string | null
    extension?: number | null
    is_delivered?: boolean | null
    revision?: number | null
    delivery_date?: Date | string | null
    update_at?: Date | string | null
    today_task?: today_taskUncheckedCreateNestedManyWithoutProjectInput
    team_members?: team_memberUncheckedCreateNestedManyWithoutAssigned_projectsInput
  }

  export type projectCreateOrConnectWithoutMember_distributionInput = {
    where: projectWhereUniqueInput
    create: XOR<projectCreateWithoutMember_distributionInput, projectUncheckedCreateWithoutMember_distributionInput>
  }

  export type team_memberUpsertWithoutMember_distributionInput = {
    update: XOR<team_memberUpdateWithoutMember_distributionInput, team_memberUncheckedUpdateWithoutMember_distributionInput>
    create: XOR<team_memberCreateWithoutMember_distributionInput, team_memberUncheckedCreateWithoutMember_distributionInput>
    where?: team_memberWhereInput
  }

  export type team_memberUpdateToOneWithWhereWithoutMember_distributionInput = {
    where?: team_memberWhereInput
    data: XOR<team_memberUpdateWithoutMember_distributionInput, team_memberUncheckedUpdateWithoutMember_distributionInput>
  }

  export type team_memberUpdateWithoutMember_distributionInput = {
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    permanent_address?: NullableStringFieldUpdateOperationsInput | string | null
    present_address?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_relation?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_number?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_address?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    dp?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rewards?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    account_status?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    uid?: NullableStringFieldUpdateOperationsInput | string | null
    project?: projectUpdateManyWithoutTeam_memberNestedInput
    team?: teamUpdateOneWithoutTeam_memberNestedInput
    today_task?: today_taskUpdateManyWithoutTeam_memberNestedInput
    assigned_projects?: projectUpdateManyWithoutTeam_membersNestedInput
    profile?: profileUpdateManyWithoutTeam_membersNestedInput
  }

  export type team_memberUncheckedUpdateWithoutMember_distributionInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    permanent_address?: NullableStringFieldUpdateOperationsInput | string | null
    present_address?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_relation?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_number?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_address?: NullableStringFieldUpdateOperationsInput | string | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    dp?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rewards?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    account_status?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    uid?: NullableStringFieldUpdateOperationsInput | string | null
    project?: projectUncheckedUpdateManyWithoutTeam_memberNestedInput
    today_task?: today_taskUncheckedUpdateManyWithoutTeam_memberNestedInput
    assigned_projects?: projectUncheckedUpdateManyWithoutTeam_membersNestedInput
    profile?: profileUncheckedUpdateManyWithoutTeam_membersNestedInput
  }

  export type projectUpsertWithoutMember_distributionInput = {
    update: XOR<projectUpdateWithoutMember_distributionInput, projectUncheckedUpdateWithoutMember_distributionInput>
    create: XOR<projectCreateWithoutMember_distributionInput, projectUncheckedCreateWithoutMember_distributionInput>
    where?: projectWhereInput
  }

  export type projectUpdateToOneWithWhereWithoutMember_distributionInput = {
    where?: projectWhereInput
    data: XOR<projectUpdateWithoutMember_distributionInput, projectUncheckedUpdateWithoutMember_distributionInput>
  }

  export type projectUpdateWithoutMember_distributionInput = {
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    department?: departmentUpdateOneRequiredWithoutAssign_projectNestedInput
    team_member?: team_memberUpdateOneRequiredWithoutProjectNestedInput
    profile?: profileUpdateOneWithoutProjectsNestedInput
    team?: teamUpdateOneWithoutProjectNestedInput
    today_task?: today_taskUpdateManyWithoutProjectNestedInput
    team_members?: team_memberUpdateManyWithoutAssigned_projectsNestedInput
  }

  export type projectUncheckedUpdateWithoutMember_distributionInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    ordered_by?: IntFieldUpdateOperationsInput | number
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: IntFieldUpdateOperationsInput | number
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    profile_id?: NullableIntFieldUpdateOperationsInput | number | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    today_task?: today_taskUncheckedUpdateManyWithoutProjectNestedInput
    team_members?: team_memberUncheckedUpdateManyWithoutAssigned_projectsNestedInput
  }

  export type teamCreateWithoutRevisionInput = {
    team_name?: string | null
    team_achieve?: Decimal | DecimalJsLike | number | string | null
    team_cancel?: number | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    team_target?: Decimal | DecimalJsLike | number | string | null
    project?: projectCreateNestedManyWithoutTeamInput
    department: departmentCreateNestedOneWithoutDepartment_teamsInput
    team_member?: team_memberCreateNestedManyWithoutTeamInput
    today_task?: today_taskCreateNestedManyWithoutTeamInput
  }

  export type teamUncheckedCreateWithoutRevisionInput = {
    id?: number
    team_name?: string | null
    department_id: number
    team_achieve?: Decimal | DecimalJsLike | number | string | null
    team_cancel?: number | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    team_target?: Decimal | DecimalJsLike | number | string | null
    project?: projectUncheckedCreateNestedManyWithoutTeamInput
    team_member?: team_memberUncheckedCreateNestedManyWithoutTeamInput
    today_task?: today_taskUncheckedCreateNestedManyWithoutTeamInput
  }

  export type teamCreateOrConnectWithoutRevisionInput = {
    where: teamWhereUniqueInput
    create: XOR<teamCreateWithoutRevisionInput, teamUncheckedCreateWithoutRevisionInput>
  }

  export type teamUpsertWithWhereUniqueWithoutRevisionInput = {
    where: teamWhereUniqueInput
    update: XOR<teamUpdateWithoutRevisionInput, teamUncheckedUpdateWithoutRevisionInput>
    create: XOR<teamCreateWithoutRevisionInput, teamUncheckedCreateWithoutRevisionInput>
  }

  export type teamUpdateWithWhereUniqueWithoutRevisionInput = {
    where: teamWhereUniqueInput
    data: XOR<teamUpdateWithoutRevisionInput, teamUncheckedUpdateWithoutRevisionInput>
  }

  export type teamUpdateManyWithWhereWithoutRevisionInput = {
    where: teamScalarWhereInput
    data: XOR<teamUpdateManyMutationInput, teamUncheckedUpdateManyWithoutRevisionInput>
  }

  export type projectCreateWithoutToday_taskInput = {
    order_id?: string | null
    date?: Date | string | null
    project_name?: string | null
    ops_status?: string | null
    sales_comments?: string | null
    opsleader_comments?: string | null
    sheet_link?: string | null
    deli_last_date?: Date | string | null
    status?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: Decimal | DecimalJsLike | number | string | null
    rating?: number | null
    project_requirements?: string | null
    Assigned_date?: Date | string | null
    extension?: number | null
    is_delivered?: boolean | null
    revision?: number | null
    delivery_date?: Date | string | null
    update_at?: Date | string | null
    department: departmentCreateNestedOneWithoutAssign_projectInput
    team_member: team_memberCreateNestedOneWithoutProjectInput
    profile?: profileCreateNestedOneWithoutProjectsInput
    team?: teamCreateNestedOneWithoutProjectInput
    team_members?: team_memberCreateNestedManyWithoutAssigned_projectsInput
    member_distribution?: member_distributionCreateNestedManyWithoutProjectInput
  }

  export type projectUncheckedCreateWithoutToday_taskInput = {
    id?: number
    order_id?: string | null
    date?: Date | string | null
    project_name?: string | null
    ops_status?: string | null
    sales_comments?: string | null
    opsleader_comments?: string | null
    sheet_link?: string | null
    ordered_by: number
    deli_last_date?: Date | string | null
    status?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: Decimal | DecimalJsLike | number | string | null
    rating?: number | null
    department_id: number
    project_requirements?: string | null
    profile_id?: number | null
    team_id?: number | null
    Assigned_date?: Date | string | null
    extension?: number | null
    is_delivered?: boolean | null
    revision?: number | null
    delivery_date?: Date | string | null
    update_at?: Date | string | null
    team_members?: team_memberUncheckedCreateNestedManyWithoutAssigned_projectsInput
    member_distribution?: member_distributionUncheckedCreateNestedManyWithoutProjectInput
  }

  export type projectCreateOrConnectWithoutToday_taskInput = {
    where: projectWhereUniqueInput
    create: XOR<projectCreateWithoutToday_taskInput, projectUncheckedCreateWithoutToday_taskInput>
  }

  export type teamCreateWithoutToday_taskInput = {
    team_name?: string | null
    team_achieve?: Decimal | DecimalJsLike | number | string | null
    team_cancel?: number | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    team_target?: Decimal | DecimalJsLike | number | string | null
    project?: projectCreateNestedManyWithoutTeamInput
    department: departmentCreateNestedOneWithoutDepartment_teamsInput
    team_member?: team_memberCreateNestedManyWithoutTeamInput
    revision?: revisionCreateNestedManyWithoutTeamInput
  }

  export type teamUncheckedCreateWithoutToday_taskInput = {
    id?: number
    team_name?: string | null
    department_id: number
    team_achieve?: Decimal | DecimalJsLike | number | string | null
    team_cancel?: number | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    team_target?: Decimal | DecimalJsLike | number | string | null
    project?: projectUncheckedCreateNestedManyWithoutTeamInput
    team_member?: team_memberUncheckedCreateNestedManyWithoutTeamInput
    revision?: revisionUncheckedCreateNestedManyWithoutTeamInput
  }

  export type teamCreateOrConnectWithoutToday_taskInput = {
    where: teamWhereUniqueInput
    create: XOR<teamCreateWithoutToday_taskInput, teamUncheckedCreateWithoutToday_taskInput>
  }

  export type team_memberCreateWithoutToday_taskInput = {
    first_name?: string | null
    last_name?: string | null
    email?: string | null
    number?: string | null
    permanent_address?: string | null
    present_address?: string | null
    gender?: string | null
    blood_group?: string | null
    relationship?: string | null
    guardian_relation?: string | null
    guardian_number?: string | null
    guardian_address?: string | null
    religion?: string | null
    education?: string | null
    dp?: string | null
    role?: string | null
    target?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    rewards?: Decimal | DecimalJsLike | number | string | null
    account_status?: string | null
    password?: string | null
    designation?: string | null
    uid?: string | null
    member_distribution?: member_distributionCreateNestedManyWithoutTeam_memberInput
    project?: projectCreateNestedManyWithoutTeam_memberInput
    team?: teamCreateNestedOneWithoutTeam_memberInput
    assigned_projects?: projectCreateNestedManyWithoutTeam_membersInput
    profile?: profileCreateNestedManyWithoutTeam_membersInput
  }

  export type team_memberUncheckedCreateWithoutToday_taskInput = {
    id?: number
    first_name?: string | null
    last_name?: string | null
    email?: string | null
    number?: string | null
    permanent_address?: string | null
    present_address?: string | null
    gender?: string | null
    blood_group?: string | null
    relationship?: string | null
    guardian_relation?: string | null
    guardian_number?: string | null
    guardian_address?: string | null
    team_id?: number | null
    religion?: string | null
    education?: string | null
    dp?: string | null
    role?: string | null
    target?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    rewards?: Decimal | DecimalJsLike | number | string | null
    account_status?: string | null
    password?: string | null
    designation?: string | null
    uid?: string | null
    member_distribution?: member_distributionUncheckedCreateNestedManyWithoutTeam_memberInput
    project?: projectUncheckedCreateNestedManyWithoutTeam_memberInput
    assigned_projects?: projectUncheckedCreateNestedManyWithoutTeam_membersInput
    profile?: profileUncheckedCreateNestedManyWithoutTeam_membersInput
  }

  export type team_memberCreateOrConnectWithoutToday_taskInput = {
    where: team_memberWhereUniqueInput
    create: XOR<team_memberCreateWithoutToday_taskInput, team_memberUncheckedCreateWithoutToday_taskInput>
  }

  export type projectUpsertWithoutToday_taskInput = {
    update: XOR<projectUpdateWithoutToday_taskInput, projectUncheckedUpdateWithoutToday_taskInput>
    create: XOR<projectCreateWithoutToday_taskInput, projectUncheckedCreateWithoutToday_taskInput>
    where?: projectWhereInput
  }

  export type projectUpdateToOneWithWhereWithoutToday_taskInput = {
    where?: projectWhereInput
    data: XOR<projectUpdateWithoutToday_taskInput, projectUncheckedUpdateWithoutToday_taskInput>
  }

  export type projectUpdateWithoutToday_taskInput = {
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    department?: departmentUpdateOneRequiredWithoutAssign_projectNestedInput
    team_member?: team_memberUpdateOneRequiredWithoutProjectNestedInput
    profile?: profileUpdateOneWithoutProjectsNestedInput
    team?: teamUpdateOneWithoutProjectNestedInput
    team_members?: team_memberUpdateManyWithoutAssigned_projectsNestedInput
    member_distribution?: member_distributionUpdateManyWithoutProjectNestedInput
  }

  export type projectUncheckedUpdateWithoutToday_taskInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    ordered_by?: IntFieldUpdateOperationsInput | number
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: IntFieldUpdateOperationsInput | number
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    profile_id?: NullableIntFieldUpdateOperationsInput | number | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    team_members?: team_memberUncheckedUpdateManyWithoutAssigned_projectsNestedInput
    member_distribution?: member_distributionUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type teamUpsertWithoutToday_taskInput = {
    update: XOR<teamUpdateWithoutToday_taskInput, teamUncheckedUpdateWithoutToday_taskInput>
    create: XOR<teamCreateWithoutToday_taskInput, teamUncheckedCreateWithoutToday_taskInput>
    where?: teamWhereInput
  }

  export type teamUpdateToOneWithWhereWithoutToday_taskInput = {
    where?: teamWhereInput
    data: XOR<teamUpdateWithoutToday_taskInput, teamUncheckedUpdateWithoutToday_taskInput>
  }

  export type teamUpdateWithoutToday_taskInput = {
    team_name?: NullableStringFieldUpdateOperationsInput | string | null
    team_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_cancel?: NullableIntFieldUpdateOperationsInput | number | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    project?: projectUpdateManyWithoutTeamNestedInput
    department?: departmentUpdateOneRequiredWithoutDepartment_teamsNestedInput
    team_member?: team_memberUpdateManyWithoutTeamNestedInput
    revision?: revisionUpdateManyWithoutTeamNestedInput
  }

  export type teamUncheckedUpdateWithoutToday_taskInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_name?: NullableStringFieldUpdateOperationsInput | string | null
    department_id?: IntFieldUpdateOperationsInput | number
    team_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_cancel?: NullableIntFieldUpdateOperationsInput | number | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    project?: projectUncheckedUpdateManyWithoutTeamNestedInput
    team_member?: team_memberUncheckedUpdateManyWithoutTeamNestedInput
    revision?: revisionUncheckedUpdateManyWithoutTeamNestedInput
  }

  export type team_memberUpsertWithoutToday_taskInput = {
    update: XOR<team_memberUpdateWithoutToday_taskInput, team_memberUncheckedUpdateWithoutToday_taskInput>
    create: XOR<team_memberCreateWithoutToday_taskInput, team_memberUncheckedCreateWithoutToday_taskInput>
    where?: team_memberWhereInput
  }

  export type team_memberUpdateToOneWithWhereWithoutToday_taskInput = {
    where?: team_memberWhereInput
    data: XOR<team_memberUpdateWithoutToday_taskInput, team_memberUncheckedUpdateWithoutToday_taskInput>
  }

  export type team_memberUpdateWithoutToday_taskInput = {
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    permanent_address?: NullableStringFieldUpdateOperationsInput | string | null
    present_address?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_relation?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_number?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_address?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    dp?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rewards?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    account_status?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    uid?: NullableStringFieldUpdateOperationsInput | string | null
    member_distribution?: member_distributionUpdateManyWithoutTeam_memberNestedInput
    project?: projectUpdateManyWithoutTeam_memberNestedInput
    team?: teamUpdateOneWithoutTeam_memberNestedInput
    assigned_projects?: projectUpdateManyWithoutTeam_membersNestedInput
    profile?: profileUpdateManyWithoutTeam_membersNestedInput
  }

  export type team_memberUncheckedUpdateWithoutToday_taskInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    permanent_address?: NullableStringFieldUpdateOperationsInput | string | null
    present_address?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_relation?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_number?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_address?: NullableStringFieldUpdateOperationsInput | string | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    dp?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rewards?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    account_status?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    uid?: NullableStringFieldUpdateOperationsInput | string | null
    member_distribution?: member_distributionUncheckedUpdateManyWithoutTeam_memberNestedInput
    project?: projectUncheckedUpdateManyWithoutTeam_memberNestedInput
    assigned_projects?: projectUncheckedUpdateManyWithoutTeam_membersNestedInput
    profile?: profileUncheckedUpdateManyWithoutTeam_membersNestedInput
  }

  export type today_taskCreateManyProjectInput = {
    id?: number
    client_name?: string | null
    expected_finish_time?: string | null
    team_id?: number | null
    ops_status?: string | null
    team_member_id?: number | null
  }

  export type member_distributionCreateManyProjectInput = {
    id?: number
    team_member_id: number
    amount?: Decimal | DecimalJsLike | number | string | null
  }

  export type today_taskUpdateWithoutProjectInput = {
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    expected_finish_time?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    team?: teamUpdateOneWithoutToday_taskNestedInput
    team_member?: team_memberUpdateOneWithoutToday_taskNestedInput
  }

  export type today_taskUncheckedUpdateWithoutProjectInput = {
    id?: IntFieldUpdateOperationsInput | number
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    expected_finish_time?: NullableStringFieldUpdateOperationsInput | string | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    team_member_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type today_taskUncheckedUpdateManyWithoutProjectInput = {
    id?: IntFieldUpdateOperationsInput | number
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    expected_finish_time?: NullableStringFieldUpdateOperationsInput | string | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    team_member_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type team_memberUpdateWithoutAssigned_projectsInput = {
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    permanent_address?: NullableStringFieldUpdateOperationsInput | string | null
    present_address?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_relation?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_number?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_address?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    dp?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rewards?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    account_status?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    uid?: NullableStringFieldUpdateOperationsInput | string | null
    member_distribution?: member_distributionUpdateManyWithoutTeam_memberNestedInput
    project?: projectUpdateManyWithoutTeam_memberNestedInput
    team?: teamUpdateOneWithoutTeam_memberNestedInput
    today_task?: today_taskUpdateManyWithoutTeam_memberNestedInput
    profile?: profileUpdateManyWithoutTeam_membersNestedInput
  }

  export type team_memberUncheckedUpdateWithoutAssigned_projectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    permanent_address?: NullableStringFieldUpdateOperationsInput | string | null
    present_address?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_relation?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_number?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_address?: NullableStringFieldUpdateOperationsInput | string | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    dp?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rewards?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    account_status?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    uid?: NullableStringFieldUpdateOperationsInput | string | null
    member_distribution?: member_distributionUncheckedUpdateManyWithoutTeam_memberNestedInput
    project?: projectUncheckedUpdateManyWithoutTeam_memberNestedInput
    today_task?: today_taskUncheckedUpdateManyWithoutTeam_memberNestedInput
    profile?: profileUncheckedUpdateManyWithoutTeam_membersNestedInput
  }

  export type team_memberUncheckedUpdateManyWithoutAssigned_projectsInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    permanent_address?: NullableStringFieldUpdateOperationsInput | string | null
    present_address?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_relation?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_number?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_address?: NullableStringFieldUpdateOperationsInput | string | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    dp?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rewards?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    account_status?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    uid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type member_distributionUpdateWithoutProjectInput = {
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_member?: team_memberUpdateOneRequiredWithoutMember_distributionNestedInput
  }

  export type member_distributionUncheckedUpdateWithoutProjectInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_member_id?: IntFieldUpdateOperationsInput | number
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type member_distributionUncheckedUpdateManyWithoutProjectInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_member_id?: IntFieldUpdateOperationsInput | number
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type projectCreateManyTeamInput = {
    id?: number
    order_id?: string | null
    date?: Date | string | null
    project_name?: string | null
    ops_status?: string | null
    sales_comments?: string | null
    opsleader_comments?: string | null
    sheet_link?: string | null
    ordered_by: number
    deli_last_date?: Date | string | null
    status?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: Decimal | DecimalJsLike | number | string | null
    rating?: number | null
    department_id: number
    project_requirements?: string | null
    profile_id?: number | null
    Assigned_date?: Date | string | null
    extension?: number | null
    is_delivered?: boolean | null
    revision?: number | null
    delivery_date?: Date | string | null
    update_at?: Date | string | null
  }

  export type team_memberCreateManyTeamInput = {
    id?: number
    first_name?: string | null
    last_name?: string | null
    email?: string | null
    number?: string | null
    permanent_address?: string | null
    present_address?: string | null
    gender?: string | null
    blood_group?: string | null
    relationship?: string | null
    guardian_relation?: string | null
    guardian_number?: string | null
    guardian_address?: string | null
    religion?: string | null
    education?: string | null
    dp?: string | null
    role?: string | null
    target?: Decimal | DecimalJsLike | number | string | null
    rating?: Decimal | DecimalJsLike | number | string | null
    rewards?: Decimal | DecimalJsLike | number | string | null
    account_status?: string | null
    password?: string | null
    designation?: string | null
    uid?: string | null
  }

  export type today_taskCreateManyTeamInput = {
    id?: number
    project_id: number
    client_name?: string | null
    expected_finish_time?: string | null
    ops_status?: string | null
    team_member_id?: number | null
  }

  export type projectUpdateWithoutTeamInput = {
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    department?: departmentUpdateOneRequiredWithoutAssign_projectNestedInput
    team_member?: team_memberUpdateOneRequiredWithoutProjectNestedInput
    profile?: profileUpdateOneWithoutProjectsNestedInput
    today_task?: today_taskUpdateManyWithoutProjectNestedInput
    team_members?: team_memberUpdateManyWithoutAssigned_projectsNestedInput
    member_distribution?: member_distributionUpdateManyWithoutProjectNestedInput
  }

  export type projectUncheckedUpdateWithoutTeamInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    ordered_by?: IntFieldUpdateOperationsInput | number
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: IntFieldUpdateOperationsInput | number
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    profile_id?: NullableIntFieldUpdateOperationsInput | number | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    today_task?: today_taskUncheckedUpdateManyWithoutProjectNestedInput
    team_members?: team_memberUncheckedUpdateManyWithoutAssigned_projectsNestedInput
    member_distribution?: member_distributionUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type projectUncheckedUpdateManyWithoutTeamInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    ordered_by?: IntFieldUpdateOperationsInput | number
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: IntFieldUpdateOperationsInput | number
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    profile_id?: NullableIntFieldUpdateOperationsInput | number | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type team_memberUpdateWithoutTeamInput = {
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    permanent_address?: NullableStringFieldUpdateOperationsInput | string | null
    present_address?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_relation?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_number?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_address?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    dp?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rewards?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    account_status?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    uid?: NullableStringFieldUpdateOperationsInput | string | null
    member_distribution?: member_distributionUpdateManyWithoutTeam_memberNestedInput
    project?: projectUpdateManyWithoutTeam_memberNestedInput
    today_task?: today_taskUpdateManyWithoutTeam_memberNestedInput
    assigned_projects?: projectUpdateManyWithoutTeam_membersNestedInput
    profile?: profileUpdateManyWithoutTeam_membersNestedInput
  }

  export type team_memberUncheckedUpdateWithoutTeamInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    permanent_address?: NullableStringFieldUpdateOperationsInput | string | null
    present_address?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_relation?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_number?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_address?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    dp?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rewards?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    account_status?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    uid?: NullableStringFieldUpdateOperationsInput | string | null
    member_distribution?: member_distributionUncheckedUpdateManyWithoutTeam_memberNestedInput
    project?: projectUncheckedUpdateManyWithoutTeam_memberNestedInput
    today_task?: today_taskUncheckedUpdateManyWithoutTeam_memberNestedInput
    assigned_projects?: projectUncheckedUpdateManyWithoutTeam_membersNestedInput
    profile?: profileUncheckedUpdateManyWithoutTeam_membersNestedInput
  }

  export type team_memberUncheckedUpdateManyWithoutTeamInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    permanent_address?: NullableStringFieldUpdateOperationsInput | string | null
    present_address?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_relation?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_number?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_address?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    dp?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rewards?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    account_status?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    uid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type today_taskUpdateWithoutTeamInput = {
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    expected_finish_time?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    project?: projectUpdateOneRequiredWithoutToday_taskNestedInput
    team_member?: team_memberUpdateOneWithoutToday_taskNestedInput
  }

  export type today_taskUncheckedUpdateWithoutTeamInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    expected_finish_time?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    team_member_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type today_taskUncheckedUpdateManyWithoutTeamInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    expected_finish_time?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    team_member_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type revisionUpdateWithoutTeamInput = {
    project_id?: IntFieldUpdateOperationsInput | number
    revision_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision_comments?: NullableStringFieldUpdateOperationsInput | string | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metting_link?: NullableStringFieldUpdateOperationsInput | string | null
    metting_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type revisionUncheckedUpdateWithoutTeamInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    revision_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision_comments?: NullableStringFieldUpdateOperationsInput | string | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metting_link?: NullableStringFieldUpdateOperationsInput | string | null
    metting_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type revisionUncheckedUpdateManyWithoutTeamInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    revision_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    revision_comments?: NullableStringFieldUpdateOperationsInput | string | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    metting_link?: NullableStringFieldUpdateOperationsInput | string | null
    metting_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type projectCreateManyDepartmentInput = {
    id?: number
    order_id?: string | null
    date?: Date | string | null
    project_name?: string | null
    ops_status?: string | null
    sales_comments?: string | null
    opsleader_comments?: string | null
    sheet_link?: string | null
    ordered_by: number
    deli_last_date?: Date | string | null
    status?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: Decimal | DecimalJsLike | number | string | null
    rating?: number | null
    project_requirements?: string | null
    profile_id?: number | null
    team_id?: number | null
    Assigned_date?: Date | string | null
    extension?: number | null
    is_delivered?: boolean | null
    revision?: number | null
    delivery_date?: Date | string | null
    update_at?: Date | string | null
  }

  export type teamCreateManyDepartmentInput = {
    id?: number
    team_name?: string | null
    team_achieve?: Decimal | DecimalJsLike | number | string | null
    team_cancel?: number | null
    total_carry?: Decimal | DecimalJsLike | number | string | null
    team_target?: Decimal | DecimalJsLike | number | string | null
  }

  export type projectUpdateWithoutDepartmentInput = {
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    team_member?: team_memberUpdateOneRequiredWithoutProjectNestedInput
    profile?: profileUpdateOneWithoutProjectsNestedInput
    team?: teamUpdateOneWithoutProjectNestedInput
    today_task?: today_taskUpdateManyWithoutProjectNestedInput
    team_members?: team_memberUpdateManyWithoutAssigned_projectsNestedInput
    member_distribution?: member_distributionUpdateManyWithoutProjectNestedInput
  }

  export type projectUncheckedUpdateWithoutDepartmentInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    ordered_by?: IntFieldUpdateOperationsInput | number
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    profile_id?: NullableIntFieldUpdateOperationsInput | number | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    today_task?: today_taskUncheckedUpdateManyWithoutProjectNestedInput
    team_members?: team_memberUncheckedUpdateManyWithoutAssigned_projectsNestedInput
    member_distribution?: member_distributionUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type projectUncheckedUpdateManyWithoutDepartmentInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    ordered_by?: IntFieldUpdateOperationsInput | number
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    profile_id?: NullableIntFieldUpdateOperationsInput | number | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type teamUpdateWithoutDepartmentInput = {
    team_name?: NullableStringFieldUpdateOperationsInput | string | null
    team_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_cancel?: NullableIntFieldUpdateOperationsInput | number | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    project?: projectUpdateManyWithoutTeamNestedInput
    team_member?: team_memberUpdateManyWithoutTeamNestedInput
    today_task?: today_taskUpdateManyWithoutTeamNestedInput
    revision?: revisionUpdateManyWithoutTeamNestedInput
  }

  export type teamUncheckedUpdateWithoutDepartmentInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_name?: NullableStringFieldUpdateOperationsInput | string | null
    team_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_cancel?: NullableIntFieldUpdateOperationsInput | number | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    project?: projectUncheckedUpdateManyWithoutTeamNestedInput
    team_member?: team_memberUncheckedUpdateManyWithoutTeamNestedInput
    today_task?: today_taskUncheckedUpdateManyWithoutTeamNestedInput
    revision?: revisionUncheckedUpdateManyWithoutTeamNestedInput
  }

  export type teamUncheckedUpdateManyWithoutDepartmentInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_name?: NullableStringFieldUpdateOperationsInput | string | null
    team_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_cancel?: NullableIntFieldUpdateOperationsInput | number | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type profileUpdateWithoutDepartmentInput = {
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile_name?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    order_count?: NullableIntFieldUpdateOperationsInput | number | null
    rank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cancel_count?: NullableIntFieldUpdateOperationsInput | number | null
    complete_count?: NullableIntFieldUpdateOperationsInput | number | null
    no_rating?: NullableIntFieldUpdateOperationsInput | number | null
    profile_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_id?: IntFieldUpdateOperationsInput | number
    repeat_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    keywords?: NullableStringFieldUpdateOperationsInput | string | null
    total_rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    projects?: projectUpdateManyWithoutProfileNestedInput
    team_members?: team_memberUpdateManyWithoutProfileNestedInput
  }

  export type profileUncheckedUpdateWithoutDepartmentInput = {
    id?: IntFieldUpdateOperationsInput | number
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile_name?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    order_count?: NullableIntFieldUpdateOperationsInput | number | null
    rank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cancel_count?: NullableIntFieldUpdateOperationsInput | number | null
    complete_count?: NullableIntFieldUpdateOperationsInput | number | null
    no_rating?: NullableIntFieldUpdateOperationsInput | number | null
    profile_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_id?: IntFieldUpdateOperationsInput | number
    repeat_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    keywords?: NullableStringFieldUpdateOperationsInput | string | null
    total_rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    projects?: projectUncheckedUpdateManyWithoutProfileNestedInput
    team_members?: team_memberUncheckedUpdateManyWithoutProfileNestedInput
  }

  export type profileUncheckedUpdateManyWithoutDepartmentInput = {
    id?: IntFieldUpdateOperationsInput | number
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile_name?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    order_count?: NullableIntFieldUpdateOperationsInput | number | null
    rank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cancel_count?: NullableIntFieldUpdateOperationsInput | number | null
    complete_count?: NullableIntFieldUpdateOperationsInput | number | null
    no_rating?: NullableIntFieldUpdateOperationsInput | number | null
    profile_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_id?: IntFieldUpdateOperationsInput | number
    repeat_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    keywords?: NullableStringFieldUpdateOperationsInput | string | null
    total_rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type projectCreateManyProfileInput = {
    id?: number
    order_id?: string | null
    date?: Date | string | null
    project_name?: string | null
    ops_status?: string | null
    sales_comments?: string | null
    opsleader_comments?: string | null
    sheet_link?: string | null
    ordered_by: number
    deli_last_date?: Date | string | null
    status?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: Decimal | DecimalJsLike | number | string | null
    rating?: number | null
    department_id: number
    project_requirements?: string | null
    team_id?: number | null
    Assigned_date?: Date | string | null
    extension?: number | null
    is_delivered?: boolean | null
    revision?: number | null
    delivery_date?: Date | string | null
    update_at?: Date | string | null
  }

  export type projectUpdateWithoutProfileInput = {
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    department?: departmentUpdateOneRequiredWithoutAssign_projectNestedInput
    team_member?: team_memberUpdateOneRequiredWithoutProjectNestedInput
    team?: teamUpdateOneWithoutProjectNestedInput
    today_task?: today_taskUpdateManyWithoutProjectNestedInput
    team_members?: team_memberUpdateManyWithoutAssigned_projectsNestedInput
    member_distribution?: member_distributionUpdateManyWithoutProjectNestedInput
  }

  export type projectUncheckedUpdateWithoutProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    ordered_by?: IntFieldUpdateOperationsInput | number
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: IntFieldUpdateOperationsInput | number
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    today_task?: today_taskUncheckedUpdateManyWithoutProjectNestedInput
    team_members?: team_memberUncheckedUpdateManyWithoutAssigned_projectsNestedInput
    member_distribution?: member_distributionUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type projectUncheckedUpdateManyWithoutProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    ordered_by?: IntFieldUpdateOperationsInput | number
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: IntFieldUpdateOperationsInput | number
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type departmentUpdateWithoutDepartment_profileInput = {
    department_name?: NullableStringFieldUpdateOperationsInput | string | null
    department_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_cancel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_special_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_designation?: NullableStringFieldUpdateOperationsInput | string | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    assign_project?: projectUpdateManyWithoutDepartmentNestedInput
    department_teams?: teamUpdateManyWithoutDepartmentNestedInput
  }

  export type departmentUncheckedUpdateWithoutDepartment_profileInput = {
    id?: IntFieldUpdateOperationsInput | number
    department_name?: NullableStringFieldUpdateOperationsInput | string | null
    department_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_cancel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_special_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_designation?: NullableStringFieldUpdateOperationsInput | string | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    assign_project?: projectUncheckedUpdateManyWithoutDepartmentNestedInput
    department_teams?: teamUncheckedUpdateManyWithoutDepartmentNestedInput
  }

  export type departmentUncheckedUpdateManyWithoutDepartment_profileInput = {
    id?: IntFieldUpdateOperationsInput | number
    department_name?: NullableStringFieldUpdateOperationsInput | string | null
    department_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_cancel?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_special_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_designation?: NullableStringFieldUpdateOperationsInput | string | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type team_memberUpdateWithoutProfileInput = {
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    permanent_address?: NullableStringFieldUpdateOperationsInput | string | null
    present_address?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_relation?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_number?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_address?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    dp?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rewards?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    account_status?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    uid?: NullableStringFieldUpdateOperationsInput | string | null
    member_distribution?: member_distributionUpdateManyWithoutTeam_memberNestedInput
    project?: projectUpdateManyWithoutTeam_memberNestedInput
    team?: teamUpdateOneWithoutTeam_memberNestedInput
    today_task?: today_taskUpdateManyWithoutTeam_memberNestedInput
    assigned_projects?: projectUpdateManyWithoutTeam_membersNestedInput
  }

  export type team_memberUncheckedUpdateWithoutProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    permanent_address?: NullableStringFieldUpdateOperationsInput | string | null
    present_address?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_relation?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_number?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_address?: NullableStringFieldUpdateOperationsInput | string | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    dp?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rewards?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    account_status?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    uid?: NullableStringFieldUpdateOperationsInput | string | null
    member_distribution?: member_distributionUncheckedUpdateManyWithoutTeam_memberNestedInput
    project?: projectUncheckedUpdateManyWithoutTeam_memberNestedInput
    today_task?: today_taskUncheckedUpdateManyWithoutTeam_memberNestedInput
    assigned_projects?: projectUncheckedUpdateManyWithoutTeam_membersNestedInput
  }

  export type team_memberUncheckedUpdateManyWithoutProfileInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    number?: NullableStringFieldUpdateOperationsInput | string | null
    permanent_address?: NullableStringFieldUpdateOperationsInput | string | null
    present_address?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    relationship?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_relation?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_number?: NullableStringFieldUpdateOperationsInput | string | null
    guardian_address?: NullableStringFieldUpdateOperationsInput | string | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    education?: NullableStringFieldUpdateOperationsInput | string | null
    dp?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rewards?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    account_status?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    designation?: NullableStringFieldUpdateOperationsInput | string | null
    uid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type member_distributionCreateManyTeam_memberInput = {
    id?: number
    amount?: Decimal | DecimalJsLike | number | string | null
    project_id: number
  }

  export type projectCreateManyTeam_memberInput = {
    id?: number
    order_id?: string | null
    date?: Date | string | null
    project_name?: string | null
    ops_status?: string | null
    sales_comments?: string | null
    opsleader_comments?: string | null
    sheet_link?: string | null
    deli_last_date?: Date | string | null
    status?: string | null
    order_amount?: Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: Decimal | DecimalJsLike | number | string | null
    bonus?: Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: Decimal | DecimalJsLike | number | string | null
    rating?: number | null
    department_id: number
    project_requirements?: string | null
    profile_id?: number | null
    team_id?: number | null
    Assigned_date?: Date | string | null
    extension?: number | null
    is_delivered?: boolean | null
    revision?: number | null
    delivery_date?: Date | string | null
    update_at?: Date | string | null
  }

  export type today_taskCreateManyTeam_memberInput = {
    id?: number
    project_id: number
    client_name?: string | null
    expected_finish_time?: string | null
    team_id?: number | null
    ops_status?: string | null
  }

  export type member_distributionUpdateWithoutTeam_memberInput = {
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    project?: projectUpdateOneRequiredWithoutMember_distributionNestedInput
  }

  export type member_distributionUncheckedUpdateWithoutTeam_memberInput = {
    id?: IntFieldUpdateOperationsInput | number
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    project_id?: IntFieldUpdateOperationsInput | number
  }

  export type member_distributionUncheckedUpdateManyWithoutTeam_memberInput = {
    id?: IntFieldUpdateOperationsInput | number
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    project_id?: IntFieldUpdateOperationsInput | number
  }

  export type projectUpdateWithoutTeam_memberInput = {
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    department?: departmentUpdateOneRequiredWithoutAssign_projectNestedInput
    profile?: profileUpdateOneWithoutProjectsNestedInput
    team?: teamUpdateOneWithoutProjectNestedInput
    today_task?: today_taskUpdateManyWithoutProjectNestedInput
    team_members?: team_memberUpdateManyWithoutAssigned_projectsNestedInput
    member_distribution?: member_distributionUpdateManyWithoutProjectNestedInput
  }

  export type projectUncheckedUpdateWithoutTeam_memberInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: IntFieldUpdateOperationsInput | number
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    profile_id?: NullableIntFieldUpdateOperationsInput | number | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    today_task?: today_taskUncheckedUpdateManyWithoutProjectNestedInput
    team_members?: team_memberUncheckedUpdateManyWithoutAssigned_projectsNestedInput
    member_distribution?: member_distributionUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type projectUncheckedUpdateManyWithoutTeam_memberInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: IntFieldUpdateOperationsInput | number
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    profile_id?: NullableIntFieldUpdateOperationsInput | number | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type today_taskUpdateWithoutTeam_memberInput = {
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    expected_finish_time?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    project?: projectUpdateOneRequiredWithoutToday_taskNestedInput
    team?: teamUpdateOneWithoutToday_taskNestedInput
  }

  export type today_taskUncheckedUpdateWithoutTeam_memberInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    expected_finish_time?: NullableStringFieldUpdateOperationsInput | string | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type today_taskUncheckedUpdateManyWithoutTeam_memberInput = {
    id?: IntFieldUpdateOperationsInput | number
    project_id?: IntFieldUpdateOperationsInput | number
    client_name?: NullableStringFieldUpdateOperationsInput | string | null
    expected_finish_time?: NullableStringFieldUpdateOperationsInput | string | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type projectUpdateWithoutTeam_membersInput = {
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    department?: departmentUpdateOneRequiredWithoutAssign_projectNestedInput
    team_member?: team_memberUpdateOneRequiredWithoutProjectNestedInput
    profile?: profileUpdateOneWithoutProjectsNestedInput
    team?: teamUpdateOneWithoutProjectNestedInput
    today_task?: today_taskUpdateManyWithoutProjectNestedInput
    member_distribution?: member_distributionUpdateManyWithoutProjectNestedInput
  }

  export type projectUncheckedUpdateWithoutTeam_membersInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    ordered_by?: IntFieldUpdateOperationsInput | number
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: IntFieldUpdateOperationsInput | number
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    profile_id?: NullableIntFieldUpdateOperationsInput | number | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    today_task?: today_taskUncheckedUpdateManyWithoutProjectNestedInput
    member_distribution?: member_distributionUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type projectUncheckedUpdateManyWithoutTeam_membersInput = {
    id?: IntFieldUpdateOperationsInput | number
    order_id?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    project_name?: NullableStringFieldUpdateOperationsInput | string | null
    ops_status?: NullableStringFieldUpdateOperationsInput | string | null
    sales_comments?: NullableStringFieldUpdateOperationsInput | string | null
    opsleader_comments?: NullableStringFieldUpdateOperationsInput | string | null
    sheet_link?: NullableStringFieldUpdateOperationsInput | string | null
    ordered_by?: IntFieldUpdateOperationsInput | number
    deli_last_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_fiverr_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    after_Fiverr_bonus?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    rating?: NullableIntFieldUpdateOperationsInput | number | null
    department_id?: IntFieldUpdateOperationsInput | number
    project_requirements?: NullableStringFieldUpdateOperationsInput | string | null
    profile_id?: NullableIntFieldUpdateOperationsInput | number | null
    team_id?: NullableIntFieldUpdateOperationsInput | number | null
    Assigned_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    extension?: NullableIntFieldUpdateOperationsInput | number | null
    is_delivered?: NullableBoolFieldUpdateOperationsInput | boolean | null
    revision?: NullableIntFieldUpdateOperationsInput | number | null
    delivery_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type profileUpdateWithoutTeam_membersInput = {
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile_name?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    order_count?: NullableIntFieldUpdateOperationsInput | number | null
    rank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cancel_count?: NullableIntFieldUpdateOperationsInput | number | null
    complete_count?: NullableIntFieldUpdateOperationsInput | number | null
    no_rating?: NullableIntFieldUpdateOperationsInput | number | null
    profile_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_id?: IntFieldUpdateOperationsInput | number
    repeat_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    keywords?: NullableStringFieldUpdateOperationsInput | string | null
    total_rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    projects?: projectUpdateManyWithoutProfileNestedInput
    department?: departmentUpdateManyWithoutDepartment_profileNestedInput
  }

  export type profileUncheckedUpdateWithoutTeam_membersInput = {
    id?: IntFieldUpdateOperationsInput | number
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile_name?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    order_count?: NullableIntFieldUpdateOperationsInput | number | null
    rank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cancel_count?: NullableIntFieldUpdateOperationsInput | number | null
    complete_count?: NullableIntFieldUpdateOperationsInput | number | null
    no_rating?: NullableIntFieldUpdateOperationsInput | number | null
    profile_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_id?: IntFieldUpdateOperationsInput | number
    repeat_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    keywords?: NullableStringFieldUpdateOperationsInput | string | null
    total_rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    projects?: projectUncheckedUpdateManyWithoutProfileNestedInput
    department?: departmentUncheckedUpdateManyWithoutDepartment_profileNestedInput
  }

  export type profileUncheckedUpdateManyWithoutTeam_membersInput = {
    id?: IntFieldUpdateOperationsInput | number
    created_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile_name?: NullableStringFieldUpdateOperationsInput | string | null
    order_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    bonus_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    order_count?: NullableIntFieldUpdateOperationsInput | number | null
    rank?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cancel_count?: NullableIntFieldUpdateOperationsInput | number | null
    complete_count?: NullableIntFieldUpdateOperationsInput | number | null
    no_rating?: NullableIntFieldUpdateOperationsInput | number | null
    profile_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    department_id?: IntFieldUpdateOperationsInput | number
    repeat_order?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    keywords?: NullableStringFieldUpdateOperationsInput | string | null
    total_rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type teamUpdateWithoutRevisionInput = {
    team_name?: NullableStringFieldUpdateOperationsInput | string | null
    team_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_cancel?: NullableIntFieldUpdateOperationsInput | number | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    project?: projectUpdateManyWithoutTeamNestedInput
    department?: departmentUpdateOneRequiredWithoutDepartment_teamsNestedInput
    team_member?: team_memberUpdateManyWithoutTeamNestedInput
    today_task?: today_taskUpdateManyWithoutTeamNestedInput
  }

  export type teamUncheckedUpdateWithoutRevisionInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_name?: NullableStringFieldUpdateOperationsInput | string | null
    department_id?: IntFieldUpdateOperationsInput | number
    team_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_cancel?: NullableIntFieldUpdateOperationsInput | number | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    project?: projectUncheckedUpdateManyWithoutTeamNestedInput
    team_member?: team_memberUncheckedUpdateManyWithoutTeamNestedInput
    today_task?: today_taskUncheckedUpdateManyWithoutTeamNestedInput
  }

  export type teamUncheckedUpdateManyWithoutRevisionInput = {
    id?: IntFieldUpdateOperationsInput | number
    team_name?: NullableStringFieldUpdateOperationsInput | string | null
    department_id?: IntFieldUpdateOperationsInput | number
    team_achieve?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_cancel?: NullableIntFieldUpdateOperationsInput | number | null
    total_carry?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    team_target?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}